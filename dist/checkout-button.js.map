{"version":3,"sources":["webpack://checkoutKit/webpack/bootstrap","webpack://checkoutKit/external \"tslib\"","webpack://checkoutKit/external \"@bigcommerce/data-store\"","webpack://checkoutKit/external \"lodash\"","webpack://checkoutKit/./src/shipping/consignment-actions.ts","webpack://checkoutKit/external \"rxjs/Observable\"","webpack://checkoutKit/./src/payment/payment-strategy-actions.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-actions.ts","webpack://checkoutKit/./src/customer/customer-strategy-actions.ts","webpack://checkoutKit/./src/coupon/coupon-actions.ts","webpack://checkoutKit/./src/billing/billing-address-actions.ts","webpack://checkoutKit/./src/coupon/gift-certificate-actions.ts","webpack://checkoutKit/./src/payment/payment-method-actions.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-action-types.ts","webpack://checkoutKit/external \"rxjs/operators\"","webpack://checkoutKit/external \"rxjs/observable/concat\"","webpack://checkoutKit/external \"rxjs/observable/of\"","webpack://checkoutKit/./src/payment/instrument/instrument-action-types.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-actions.ts","webpack://checkoutKit/./src/common/http-request/content-type.ts","webpack://checkoutKit/external \"rxjs/observable/defer\"","webpack://checkoutKit/./src/config/config-actions.ts","webpack://checkoutKit/./src/geography/country-action-types.ts","webpack://checkoutKit/./src/shipping/shipping-country-action-types.ts","webpack://checkoutKit/./src/payment/payment-actions.ts","webpack://checkoutKit/external \"rxjs/observable/from\"","webpack://checkoutKit/./src/payment/payment-status-types.ts","webpack://checkoutKit/./src/payment/payment-method-types.ts","webpack://checkoutKit/external \"@bigcommerce/script-loader\"","webpack://checkoutKit/./src/cart/map-to-internal-line-items.ts","webpack://checkoutKit/./src/payment/payment-strategy-state.ts","webpack://checkoutKit/./src/checkout/checkout-default-includes.ts","webpack://checkoutKit/external \"@bigcommerce/form-poster\"","webpack://checkoutKit/./src/common/error/errors/standard-error.ts","webpack://checkoutKit/./src/common/utility/set-prototype-of.ts","webpack://checkoutKit/external \"@bigcommerce/request-sender\"","webpack://checkoutKit/./src/checkout-buttons/checkout-button-error-selector.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-status-selector.ts","webpack://checkoutKit/./src/checkout-buttons/create-checkout-button-selectors.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-initializer.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-strategy-action-creator.ts","webpack://checkoutKit/./src/checkout-buttons/strategies/checkout-button-strategy.ts","webpack://checkoutKit/./src/checkout-buttons/strategies/braintree-paypal-button-strategy.ts","webpack://checkoutKit/./src/checkout-buttons/strategies/googlepay/googlepay-braintree-button-strategy.ts","webpack://checkoutKit/./src/checkout-buttons/create-checkout-button-initializer.ts","webpack://checkoutKit/./src/checkout-buttons/create-checkout-button-registry.ts","webpack://checkoutKit/./src/checkout/checkout-actions.ts","webpack://checkoutKit/./src/order/order-actions.ts","webpack://checkoutKit/./src/shipping/consignment-request-sender.ts","webpack://checkoutKit/./src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://checkoutKit/./src/cart/map-to-internal-line-item.ts","webpack://checkoutKit/./src/common/selector/cache-key-resolver.ts","webpack://checkoutKit/./src/cart/errors/cart-changed-error.ts","webpack://checkoutKit/./src/checkout/checkout-validator.ts","webpack://checkoutKit/./src/customer/customer-actions.ts","webpack://checkoutKit/./src/payment/is-vaulted-instrument.ts","webpack://checkoutKit/./src/cart/map-to-internal-cart.ts","webpack://checkoutKit/./src/promotion/map-to-discount-notifications.ts","webpack://checkoutKit/./src/checkout/create-action-transformer.ts","webpack://checkoutKit/./src/common/error/errors/request-error.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-selector.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-reducer.ts","webpack://checkoutKit/./src/shipping/consignment-action-creator.ts","webpack://checkoutKit/./src/shipping/map-to-internal-shipping-option.ts","webpack://checkoutKit/./src/checkout/checkout-selector.ts","webpack://checkoutKit/./src/checkout/checkout-reducer.ts","webpack://checkoutKit/./src/billing/billing-address-selector.ts","webpack://checkoutKit/./src/common/utility/create-freeze-proxy.ts","webpack://checkoutKit/./src/config/config-selector.ts","webpack://checkoutKit/./src/form/form-selector.ts","webpack://checkoutKit/./src/geography/country-selector.ts","webpack://checkoutKit/./src/payment/payment-selector.ts","webpack://checkoutKit/./src/payment/payment-method-selector.ts","webpack://checkoutKit/./src/payment/payment-strategy-selector.ts","webpack://checkoutKit/./src/payment/instrument/instrument-selector.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-selector.ts","webpack://checkoutKit/./src/checkout/create-internal-checkout-selectors.ts","webpack://checkoutKit/./src/common/utility/is-equal.ts","webpack://checkoutKit/./src/common/selector/selector-decorator.ts","webpack://checkoutKit/./src/checkout/checkout-request-sender.ts","webpack://checkoutKit/./src/checkout/checkout-action-creator.ts","webpack://checkoutKit/./src/payment/strategies/braintree/braintree-script-loader.ts","webpack://checkoutKit/./src/payment/strategies/braintree/braintree-sdk-creator.ts","webpack://checkoutKit/./src/customer/map-to-internal-customer.ts","webpack://checkoutKit/./src/cart/amount-transformer.ts","webpack://checkoutKit/./src/coupon/map-to-internal-coupon.ts","webpack://checkoutKit/./src/coupon/map-to-internal-gift-certificate.ts","webpack://checkoutKit/./src/shipping/strategies/shipping-strategy.ts","webpack://checkoutKit/./src/shipping/strategies/amazon-pay-shipping-strategy.ts","webpack://checkoutKit/./src/shipping/strategies/default-shipping-strategy.ts","webpack://checkoutKit/./src/shipping/create-shipping-strategy-registry.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay-payment-processor.ts","webpack://checkoutKit/./src/order/map-to-internal-order.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-action-creator.ts","webpack://checkoutKit/./src/common/error/errors/unrecoverable-error.ts","webpack://checkoutKit/./src/common/error/request-error-factory.ts","webpack://checkoutKit/./src/billing/billing-address-reducer.ts","webpack://checkoutKit/./src/config/config-reducer.ts","webpack://checkoutKit/./src/geography/country-reducer.ts","webpack://checkoutKit/./src/payment/payment-reducer.ts","webpack://checkoutKit/./src/payment/payment-method-reducer.ts","webpack://checkoutKit/./src/common/utility/merge-or-push.ts","webpack://checkoutKit/./src/payment/payment-strategy-reducer.ts","webpack://checkoutKit/./src/payment/instrument/instrument-reducer.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-reducer.ts","webpack://checkoutKit/./src/checkout/create-checkout-store.ts","webpack://checkoutKit/./src/common/error/create-request-error-factory.ts","webpack://checkoutKit/./src/checkout/create-checkout-store-reducer.ts","webpack://checkoutKit/./src/address/map-to-internal-address.ts","webpack://checkoutKit/./src/billing/is-billing-address-like.ts","webpack://checkoutKit/./src/common/utility/is-private.ts","webpack://checkoutKit/./src/cart/cart-selector.ts","webpack://checkoutKit/./src/coupon/coupon-selector.ts","webpack://checkoutKit/./src/customer/customer-selector.ts","webpack://checkoutKit/./src/customer/customer-strategy-selector.ts","webpack://checkoutKit/./src/coupon/gift-certificate-selector.ts","webpack://checkoutKit/./src/shipping/shipping-address-selector.ts","webpack://checkoutKit/./src/shipping/shipping-country-selector.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-selector.ts","webpack://checkoutKit/./src/shipping/consignment-selector.ts","webpack://checkoutKit/./src/address/is-address-equal.ts","webpack://checkoutKit/./src/order/order-selector.ts","webpack://checkoutKit/./src/cart/cart-reducer.ts","webpack://checkoutKit/./src/shipping/consignment-reducer.ts","webpack://checkoutKit/./src/coupon/coupon-reducer.ts","webpack://checkoutKit/./src/customer/customer-reducer.ts","webpack://checkoutKit/./src/coupon/gift-certificate-reducer.ts","webpack://checkoutKit/./src/order/order-reducer.ts","webpack://checkoutKit/./src/shipping/shipping-country-reducer.ts","webpack://checkoutKit/external \"@bigcommerce/bigpay-client\"","webpack://checkoutKit/./src/order/order-request-sender.ts","webpack://checkoutKit/./src/order/order-action-creator.ts","webpack://checkoutKit/external \"rxjs/observable/throw\"","webpack://checkoutKit/./src/cart/cart-comparator.ts","webpack://checkoutKit/./src/common/error/errors/not-initialized-error.ts","webpack://checkoutKit/external \"rxjs/observable/merge\"","webpack://checkoutKit/external \"rxjs/observable/empty\"","webpack://checkoutKit/./src/address/map-from-internal-address.ts","webpack://checkoutKit/./src/common/utility/omit-private.ts","webpack://checkoutKit/./src/common/utility/omit-deep.ts","webpack://checkoutKit/./src/address/is-internal-address-equal.ts","webpack://checkoutKit/./src/customer/customer-strategy-state.ts","webpack://checkoutKit/./src/customer/customer-strategy-reducer.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-state.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-reducer.ts","webpack://checkoutKit/./src/payment/errors/payment-method-invalid-error.ts","webpack://checkoutKit/./src/payment/payment-action-creator.ts","webpack://checkoutKit/./src/payment/payment-request-sender.ts","webpack://checkoutKit/./src/payment/payment-method-action-creator.ts","webpack://checkoutKit/./src/payment/payment-method-request-sender.ts","webpack://checkoutKit/./src/payment/payment-strategy-action-creator.ts","webpack://checkoutKit/./src/payment/payment-strategy-registry.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay-braintree-initializer.ts","webpack://checkoutKit/./src/common/http-request/internal-api-headers.ts","webpack://checkoutKit/./src/common/error/errors/timeout-error.ts","webpack://checkoutKit/./src/common/utility/bind-decorator.ts","webpack://checkoutKit/./src/payment/create-payment-client.ts","webpack://checkoutKit/./src/config/config-action-creator.ts","webpack://checkoutKit/./src/config/config-request-sender.ts","webpack://checkoutKit/./src/common/error/errors/missing-data-error.ts","webpack://checkoutKit/./src/common/error/throw-error-action.ts","webpack://checkoutKit/./src/billing/billing-address-action-creator.ts","webpack://checkoutKit/./src/billing/billing-address-request-sender.ts","webpack://checkoutKit/./src/common/registry/registry.ts","webpack://checkoutKit/./src/common/error/errors/invalid-argument-error.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-request-sender.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-action-creator.ts","webpack://checkoutKit/./src/payment/strategies/amazon-pay/amazon-pay-script-loader.ts","webpack://checkoutKit/./src/order/errors/order-finalization-not-required-error.ts","webpack://checkoutKit/./src/remote-checkout/errors/remote-checkout-synchronization-error.ts","webpack://checkoutKit/./src/payment/strategies/paypal/paypal-script-loader.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay-script-loader.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","ConsignmentActionType","PaymentStrategyActionType","ShippingStrategyActionType","CustomerStrategyActionType","CouponActionType","BillingAddressActionType","GiftCertificateActionType","PaymentMethodActionType","INITIALIZE_REMOTE_BILLING_REQUESTED","INITIALIZE_REMOTE_BILLING_SUCCEEDED","INITIALIZE_REMOTE_BILLING_FAILED","INITIALIZE_REMOTE_SHIPPING_REQUESTED","INITIALIZE_REMOTE_SHIPPING_SUCCEEDED","INITIALIZE_REMOTE_SHIPPING_FAILED","INITIALIZE_REMOTE_PAYMENT_REQUESTED","INITIALIZE_REMOTE_PAYMENT_SUCCEEDED","INITIALIZE_REMOTE_PAYMENT_FAILED","LOAD_REMOTE_SETTINGS_REQUESTED","LOAD_REMOTE_SETTINGS_SUCCEEDED","LOAD_REMOTE_SETTINGS_FAILED","SIGN_OUT_REMOTE_CUSTOMER_REQUESTED","SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED","SIGN_OUT_REMOTE_CUSTOMER_FAILED","UPDATE_REMOTE_CHECKOUT","LOAD_INSTRUMENTS_REQUESTED","LOAD_INSTRUMENTS_SUCCEEDED","LOAD_INSTRUMENTS_FAILED","DELETE_INSTRUMENT_REQUESTED","DELETE_INSTRUMENT_SUCCEEDED","DELETE_INSTRUMENT_FAILED","CheckoutButtonActionType","ContentType","__webpack_exports__","ConfigActionType","LOAD_COUNTRIES_REQUESTED","LOAD_COUNTRIES_SUCCEEDED","LOAD_COUNTRIES_FAILED","LOAD_SHIPPING_COUNTRIES_REQUESTED","LOAD_SHIPPING_COUNTRIES_SUCCEEDED","LOAD_SHIPPING_COUNTRIES_FAILED","PaymentActionType","ACKNOWLEDGE","FINALIZE","HOSTED","OFFLINE","mapToInternalLineItems","itemMap","decimalPlaces","idKey","keys","reduce","result","concat","map","item","_map_gift_certificate_to_internal_line_item__WEBPACK_IMPORTED_MODULE_0__","_map_to_internal_line_item__WEBPACK_IMPORTED_MODULE_1__","type","mapToInternalLineItemType","DEFAULT_STATE","errors","statuses","standard_error_StandardError","_super","StandardError","message","_this","this","setPrototypeOf","__proto__","_newTarget","Error","captureStackTrace","stack","external_tslib_","CheckoutButtonErrorSelector","selectors","_checkoutButton","checkoutButton","getInitializeButtonError","methodId","getInitializeError","getDeinitializeButtonError","getDeinitializeError","selector_decorator","CheckoutButtonStatusSelector","isInitializingButton","isInitializing","isDeinitializingButton","isDeinitializing","createCheckoutButtonSelectors","checkout_button_error_selector","checkout_button_status_selector","CheckoutButtonInitializer","_store","_buttonStrategyActionCreator","_state","getState","subscribe","state","subscriber","filters","_i","arguments","length","_a","apply","filter","initializeButton","options","action","initialize","dispatch","queueId","then","deinitializeButton","deinitialize","CheckoutButtonStrategyActionCreator","_registry","_paymentMethodActionCreator","meta","concat_","of_","data_store_","checkout_button_actions","InitializeButtonRequested","undefined","loadPaymentMethod","defer_","InitializeButtonSucceeded","pipe","operators_","error","throw_error_action","InitializeButtonFailed","DeinitializeButtonRequested","DeinitializeButtonSucceeded","DeinitializeButtonFailed","CheckoutButtonStrategy","_isInitialized","Promise","resolve","BraintreePaypalButtonStrategy","_checkoutActionCreator","_braintreeSDKCreator","_paypalScriptLoader","_formPoster","_offerCredit","paypalOptions","braintreepaypalcredit","braintreepaypal","paymentMethod","_paymentMethod","paymentMethods","getPaymentMethod","invalid_argument_error","clientToken","missing_data_error","MissingPaymentMethod","all","getPaypalCheckout","loadPaypal","paypalCheckout","paypal","_paypalCheckout","Button","render","env","config","testMode","commit","shouldProcessPayment","style","shape","label","external_lodash_","payment","_setupPayment","onPaymentError","onAuthorize","data","_tokenizePayment","onAuthorizeError","container","teardown","onError","loadDefaultCheckout","checkout","getCheckout","getStoreConfig","customer","getCustomer","address","addresses","not_initialized_error","CheckoutButtonNotInitialized","MissingCheckout","MissingCheckoutConfig","createPayment","flow","enableShippingAddress","shippingAddressEditable","shippingAddressOverride","_mapToBraintreeAddress","amount","grandTotal","currency","code","offerCredit","catch","id","tokenizePayment","getDataCollector","payload","deviceData","postForm","payment_type","provider","nonce","device_data","shipping_address","JSON","stringify","_mapToLegacyShippingAddress","billing_address","_mapToLegacyBillingAddress","shippingAddress","details","recipientName","split","firstName","lastName","email","first_name","last_name","phone_number","phone","address_line_1","line1","address_line_2","line2","city","country_code","countryCode","postal_code","postalCode","billingAddress","address1","address2","stateOrProvinceCode","checkout_button_strategy","GooglePayBraintreeButtonStrategy","_googlePayScriptLoader","_googlePayPaymentProcessor","googlepaybraintree","_methodId","environment","_createGooglePayButton","googleClientOptions","load","googleSDK","googlePayButton","payments","api","PaymentsClient","createButton","onClick","e","_handleWalletButtonClick","buttonType","document","querySelector","appendChild","event","preventDefault","displayWallet","_onPaymentSelectComplete","headers","Accept","Content-Type","params","fromGooglePay","_onError","bind_decorator","createCheckoutButtonInitializer","store","create_checkout_store","requestSender","request_sender_","checkout_button_initializer","checkout_button_strategy_action_creator","registry","registry_registry","scriptLoader","script_loader_","paymentClient","create_payment_client","checkoutActionCreator","checkout_action_creator","checkout_request_sender","config_action_creator","config_request_sender","paymentRequestSender","payment_request_sender","orderActionCreator","order_action_creator","order_request_sender","checkout_validator","googlepayScriptLoader","payment_strategy_action_creator","payment_strategy_registry","payment_action_creator","googlepay_script_loader","braintreeSDKCreator","braintree_sdk_creator","braintree_script_loader","paymentMethodActionCreator","payment_method_action_creator","payment_method_request_sender","register","braintree_paypal_button_strategy","paypal_script_loader","form_poster_","googlepay_braintree_button_strategy","googlepay_payment_processor","googlepay_braintree_initializer","billing_address_action_creator","billing_address_request_sender","shipping_strategy_action_creator","create_shipping_strategy_registry","createCheckoutButtonRegistry","CheckoutActionType","OrderActionType","DEFAULT_PARAMS","include","join","ConsignmentRequestSender","_requestSender","createConsignments","checkoutId","consignments","timeout","url","_common_http_request__WEBPACK_IMPORTED_MODULE_1__","JsonV1","post","body","updateConsignment","consignment","tslib__WEBPACK_IMPORTED_MODULE_0__","put","deleteConsignment","consignmentId","delete","mapGiftCertificateToInternalLineItem","amountTransformer","___WEBPACK_IMPORTED_MODULE_0__","imageUrl","amountAfterDiscount","discount","integerAmount","toInteger","integerAmountAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","downloadsPageUrl","downloadPageUrl","productId","option","addedByPromotion","CacheKeyResolver","_lastId","_maps","getKey","args","_resolveMap","index","parentMaps","cacheKey","usedCount","_generateKey","slice","getUsedCount","isMatched","parentMaps_1","maps","push","CartChangedError","checkout_validator_CheckoutValidator","CheckoutValidator","_checkoutRequestSender","validate","loadCheckout","response","comparator","cart_comparator","_compareCoupons","coupons","_compareGiftCertificates","giftCertificates","isEqual","cart","cart_changed_error","couponsA","couponsB","giftCertificatesA","giftCertificatesB","CustomerActionType","isVaultedInstrument","instrument","Boolean","instrumentId","mapToInternalCart","amount_transformer","items","map_to_internal_line_items","lineItems","coupon","discountedAmount","sum","map_to_internal_coupon","discountNotifications","promotions","notifications","forEach","promotion","banners","banner","placeholders","discountType","messageHtml","text","mapToDiscountNotifications","giftCertificate","totalDiscountedAmount","certificate","used","appliedGiftCertificates","map_to_internal_gift_certificate","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","required","physicalItems","lineItem","isShippingRequired","subtotal","storeCredit","taxSubtotal","taxTotal","taxes","handling","handlingCostTotal","createActionTransformer","requestErrorFactory","action$","rxjs_observable_from__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","every","isResponse","createError","DEFAULT_RESPONSE","status","statusText","RequestError","_b","_c","Array","isArray","joinErrors","detail","title","CheckoutButtonSelector","method","lodash__WEBPACK_IMPORTED_MODULE_1__","initializeError","deinitializeError","_common_selector__WEBPACK_IMPORTED_MODULE_2__","checkoutButtonReducer","_bigcommerce_data_store__WEBPACK_IMPORTED_MODULE_1__","errorsReducer","statusesReducer","reducer","_checkout_button_actions__WEBPACK_IMPORTED_MODULE_2__","ConsignmentActionCreator","_consignmentRequestSender","assignItemsByAddress","existingConsignment","getConsignmentByAddress","_createOrUpdateConsignment","_combineLineItems","getCart","selectShippingOption","rxjs_Observable__WEBPACK_IMPORTED_MODULE_3__","observer","getConsignments","_common_error_errors__WEBPACK_IMPORTED_MODULE_4__","MissingConsignments","consignmentUpdateBody","shippingOptionId","consignmentMeta","next","_consignment_actions__WEBPACK_IMPORTED_MODULE_5__","UpdateShippingOptionRequested","UpdateShippingOptionSucceeded","complete","UpdateShippingOptionFailed","loadShippingOptions","LoadShippingOptionsRequested","LoadShippingOptionsSucceeded","LoadShippingOptionsFailed","updateAddress","_getConsignmentRequestBody","CreateConsignmentsRequested","CreateConsignmentsSucceeded","CreateConsignmentsFailed","UpdateConsignmentRequested","UpdateConsignmentSucceeded","UpdateConsignmentFailed","DeleteConsignmentRequested","DeleteConsignmentSucceeded","DeleteConsignmentFailed","updateShippingOption","_isUpdateConsignmentRequest","MissingCart","itemId","lodash__WEBPACK_IMPORTED_MODULE_2__","lineItemIds","request","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","CheckoutSelector","_checkout","_billingAddress","_cart","_consignments","_coupons","_customer","_giftCertificates","getBillingAddress","getCoupons","getGiftCertificates","getLoadError","loadError","isLoading","getUpdateError","updateError","isUpdating","_common_selector__WEBPACK_IMPORTED_MODULE_1__","checkoutReducer","dataReducer","_checkout_actions__WEBPACK_IMPORTED_MODULE_8__","LoadCheckoutSucceeded","UpdateCheckoutSucceeded","_billing__WEBPACK_IMPORTED_MODULE_3__","UpdateBillingAddressSucceeded","_coupon__WEBPACK_IMPORTED_MODULE_4__","ApplyCouponSucceeded","RemoveCouponSucceeded","_shipping__WEBPACK_IMPORTED_MODULE_7__","_coupon__WEBPACK_IMPORTED_MODULE_5__","ApplyGiftCertificateSucceeded","RemoveGiftCertificateSucceeded","_order__WEBPACK_IMPORTED_MODULE_6__","SubmitOrderSucceeded","orderId","order","LoadCheckoutRequested","LoadCheckoutFailed","UpdateCheckoutRequested","UpdateCheckoutFailed","BillingAddressSelector","getContinueAsGuestError","continueAsGuestError","isContinuingAsGuest","createFreezeProxy","target","trap","proxy","iteratee","getPrototypeOf","traversePrototypeOf","getOwnPropertyNames","charAt","createProxy","ConfigSelector","_config","getConfig","storeConfig","getContextConfig","context","getExternalSource","externalSource","FormSelector","getShippingAddressFields","countries","selectedCountry","formFields","shippingAddressFields","field","_processField","getBillingAddressFields","billingAddressFields","_processCountry","_processProvince","_processsPostCode","country","default","fieldType","itemtype","subdivisions","hasPostalCodes","CountrySelector","_countries","getCountries","PaymentSelector","_order","getPaymentId","internalPayment","_getInternalPayment","providerId","gatewayId","gateway","_getHostedPayment","_getGatewayPayment","getPaymentStatus","replace","step","getPaymentToken","getOrderMeta","token","getPaymentRedirectUrl","redirectUrl","isPaymentDataRequired","useStoreCredit","isPaymentDataSubmitted","payment_status_types","getOrder","providerType","payment_method_types","PaymentMethodSelector","_paymentMethods","getPaymentMethods","getPaymentMethodsMeta","getLoadMethodError","loadMethodId","loadMethodError","isLoadingMethod","PaymentStrategySelector","_paymentStrategies","payment_strategy_state","initializeMethodId","getExecuteError","executeMethodId","executeError","getFinalizeError","finalizeMethodId","finalizeError","getWidgetInteractingError","widgetInteractionMethodId","widgetInteractionError","isExecuting","isFinalizing","isWidgetInteracting","InstrumentSelector","_instruments","getInstruments","getInstrumentsMeta","getDeleteError","failedInstrument","deleteError","isDeleting","deletingInstrument","RemoteCheckoutSelector","_remoteCheckout","createInternalCheckoutSelectors","billing_address_selector","cart_selector","checkout_button_selector","config_selector","country_selector","coupon_selector","customer_selector","customerStrategies","customer_strategy_selector","form","form_selector","gift_certificate_selector","instruments","instrument_selector","payment_method_selector","paymentStrategies","payment_strategy_selector","shipping_address_selector","remoteCheckout","remote_checkout_selector","shippingCountries","shipping_country_selector","shippingStrategies","shipping_strategy_selector","consignment_selector","checkout_selector","order_selector","payment_selector","shouldWarnMutation","createFreezeProxies","objectA","objectB","length_1","isArrayEqual","Date","getTime","isDateEqual","RegExp","toString","isRegExpEqual","keyFilter","keysA","keysB","length_2","isObjectEqual","selectorDecorator","decoratedTarget","class_1","descriptor","getOwnPropertyDescriptor","resolver","cache_key_resolver","memoizedMethod","cachedValue","newValue","is_private","cache","set","selectorMethodDecorator","CheckoutRequestSender","_common_http_request__WEBPACK_IMPORTED_MODULE_0__","_checkout_default_includes__WEBPACK_IMPORTED_MODULE_1__","updateCheckout","CheckoutActionCreator","_configActionCreator","rxjs_observable_concat__WEBPACK_IMPORTED_MODULE_1__","rxjs_observable_of__WEBPACK_IMPORTED_MODULE_4__","_bigcommerce_data_store__WEBPACK_IMPORTED_MODULE_0__","_checkout_actions__WEBPACK_IMPORTED_MODULE_10__","rxjs_observable_merge__WEBPACK_IMPORTED_MODULE_3__","loadConfig","rxjs_observable_defer__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","_common_error__WEBPACK_IMPORTED_MODULE_7__","_common_error_errors__WEBPACK_IMPORTED_MODULE_8__","rxjs_Observable__WEBPACK_IMPORTED_MODULE_6__","_common_error_errors__WEBPACK_IMPORTED_MODULE_9__","loadCurrentCheckout","BraintreeScriptLoader","_scriptLoader","_window","window","loadClient","loadScript","braintree","client","_common_error_errors__WEBPACK_IMPORTED_MODULE_0__","load3DS","threeDSecure","loadDataCollector","dataCollector","loadPaypalCheckout","loadVisaCheckout","visaCheckout","loadGooglePaymentComponent","googlePayment","BraintreeSDKCreator","_braintreeScriptLoader","_dataCollectors","_clientToken","getClient","_common_error_errors__WEBPACK_IMPORTED_MODULE_1__","PaymentNotInitialized","_client","authorization","getPaypal","_paypal","get3DS","_3ds","cached","kount","getVisaCheckout","_visaCheckout","getGooglePaymentComponent","_googlePay","_teardown","mod","mapToInternalCustomer","_address__WEBPACK_IMPORTED_MODULE_0__","customerId","isGuest","fullName","AmountTransformer","_dp","Math","floor","pow","mapToInternalCoupon","couponTypes","displayName","indexOf","couponType","mapToInternalGiftCertificate","remainingBalance","remaining","balance","purchaseDate","ShippingStrategy","AmazonPayShippingStrategy","_consignmentActionCreator","_remoteCheckoutActionCreator","amazonOptions","amazon","reject","loadWidget","_createAddressBook","selectOption","optionId","onAddressSelect","onReady","merchantId","getElementById","OffAmazonPayments","ShippingNotInitialized","widget","Widgets","AddressBook","design","designMode","scope","sellerId","orderReference","_synchronizeShippingAddress","_updateOrderReference","referenceId","remote_checkout_synchronization_error","shipping_strategy_actions","UpdateAddressRequested","initializeShipping","remoteAddress","getShippingAddress","is_internal_address_equal","map_from_internal_address","UpdateAddressSucceeded","UpdateAddressFailed","getAmazonOrderReferenceId","shipping_strategy","DefaultShippingStrategy","createShippingStrategyRegistry","checkoutRequestSender","consignmentRequestSender","consignment_request_sender","amazon_pay_shipping_strategy","consignment_action_creator","remote_checkout_action_creator","remote_checkout_request_sender","amazon_pay_script_loader","default_shipping_strategy","ButtonType","ButtonColor","googlepay_payment_processor_GooglePayPaymentProcessor","GooglePayPaymentProcessor","_googlePayInitializer","_billingAddressActionCreator","_shippingStrategyActionCreator","_configureWallet","_googlePaymentsClient","buttonColor","short","updateShippingAddress","company","companyName","address3","address4","address5","locality","stateOrProvince","administrativeArea","phoneNumber","customFields","mapGooglePayAddressToRequestAddress","updateBillingAddress","remoteBillingAddress","googlePayAddressMapped","_mapGooglePayAddressToRequestAddress","_googlePaymentDataRequest","isReadyToPay","allowedPaymentMethods","loadPaymentData","paymentData","err","statusCode","parseResponse","hasShippingAddress","googlePay","googlePayPaymentDataRequest","_getGooglePaymentsClient","_handleError","google","standard_error","mapToInternalOrder","orderMeta","_cart__WEBPACK_IMPORTED_MODULE_1__","_cart__WEBPACK_IMPORTED_MODULE_2__","customerCanBeCreated","lodash__WEBPACK_IMPORTED_MODULE_0__","isDefaultOrderPayment","mapToInternalPaymentStatus","helpText","instructions","returnUrl","mapToInteralOrderPayment","baseAmount","_coupon__WEBPACK_IMPORTED_MODULE_3__","orderToken","callbackUrl","mapToGiftCertificates","socialData","socialDataObject","digitalItems","socialMedia","find","image","link","shareText","sharingLink","channelName","channel","channelCode","mapToInternalSocialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","mapToStoreCredit","orderAmount","orderAmountAsInteger","ShippingStrategyActionCreator","_strategyRegistry","rxjs_Observable__WEBPACK_IMPORTED_MODULE_2__","_shipping_strategy_actions__WEBPACK_IMPORTED_MODULE_3__","SelectOptionRequested","SelectOptionSucceeded","SelectOptionFailed","mergedOptions","InitializeRequested","InitializeSucceeded","InitializeFailed","DeinitializeRequested","DeinitializeSucceeded","DeinitializeFailed","UnrecoverableError","request_error","RequestErrorFactory","_factoryMethods","timeout_error","factoryMethod","_getType","billingAddressReducer","billing_address_actions","ContinueAsGuestSucceeded","checkout_actions","order_actions","LoadOrderSucceeded","UpdateBillingAddressRequested","UpdateBillingAddressFailed","ContinueAsGuestRequested","ContinueAsGuestFailed","config_reducer_DEFAULT_STATE","configReducer","config_reducer_dataReducer","config_reducer_errorsReducer","config_reducer_statusesReducer","config_actions","LoadConfigSucceeded","LoadConfigFailed","LoadConfigRequested","country_reducer_DEFAULT_STATE","countryReducer","country_reducer_dataReducer","country_reducer_errorsReducer","country_reducer_statusesReducer","country_action_types","paymentReducer","payment_reducer_dataReducer","payment_actions","SubmitPaymentSucceeded","payment_method_reducer_DEFAULT_STATE","paymentMethodReducer","payment_method_reducer_dataReducer","payment_method_reducer_errorsReducer","metaReducer","payment_method_reducer_statusesReducer","payment_method_actions","LoadPaymentMethodSucceeded","array","predicate","newArray","mergeOrPush","LoadPaymentMethodsSucceeded","LoadPaymentMethodsRequested","LoadPaymentMethodsFailed","LoadPaymentMethodRequested","LoadPaymentMethodFailed","paymentStrategyReducer","payment_strategy_reducer_errorsReducer","payment_strategy_reducer_statusesReducer","payment_strategy_actions","deinitializeMethodId","ExecuteRequested","ExecuteSucceeded","ExecuteFailed","FinalizeRequested","FinalizeSucceeded","FinalizeFailed","WidgetInteractionStarted","WidgetInteractionFinished","WidgetInteractionFailed","instrument_reducer_DEFAULT_STATE","instrumentReducer","instrument_reducer_dataReducer","instrument_reducer_errorsReducer","instrument_reducer_metaReducer","instrument_reducer_statusesReducer","instrument_action_types","vaultedInstruments","bigpayToken","remote_checkout_reducer_DEFAULT_STATE","remoteCheckoutReducer","remote_checkout_reducer_dataReducer","remote_checkout_action_types","billing","settings","createCheckoutStore","initialState","actionTransformer","create_action_transformer","factory","request_error_factory","unrecoverable_error","payment_method_invalid_error","createRequestErrorFactory","cart_reducer","checkout_reducer","checkout_button_reducer","consignment_reducer","coupon_reducer","customer_reducer","customer_strategy_reducer","gift_certificate_reducer","order_reducer","shipping_country_reducer","shipping_strategy_reducer","stateTransformer","create_internal_checkout_selectors","mapToInternalAddress","addressId","isBillingAddressLike","addressLine1","addressLine2","province","provinceCode","postCode","isPrivate","CartSelector","CouponSelector","_coupon","getRemoveError","removeCouponError","getApplyError","applyCouponError","isApplying","isApplyingCoupon","isRemoving","isRemovingCoupon","CustomerSelector","CustomerStrategySelector","_customerStrategies","getSignInError","signInMethodId","signInError","getSignOutError","signOutMethodId","signOutError","getWidgetInteractionError","isSigningIn","isSigningOut","GiftCertificateSelector","_giftCertificate","removeGiftCertificateError","applyGiftCertificateError","isApplyingGiftCertificate","isRemovingGiftCertificate","ShippingAddressSelector","ShippingCountrySelector","_shippingCountries","getShippingCountries","ShippingStrategySelector","_shippingStrategies","getUpdateAddressError","updateAddressMethodId","updateAddressError","getSelectOptionError","selectOptionMethodId","selectOptionError","isUpdatingAddress","isSelectingOption","ConsignmentSelector","getConsignmentById","_address__WEBPACK_IMPORTED_MODULE_2__","getShippingOption","selectedShippingOption","getCreateError","getLoadShippingOptionsError","loadShippingOptionsError","getUnassignedItems","assignedLineItemIds","itemIds","getItemAssignmentError","getUpdateShippingOptionError","updateShippingOptionError","isLoadingShippingOptions","isCreating","isAssigningItems","isUpdatingShippingOption","_common_selector__WEBPACK_IMPORTED_MODULE_3__","isAddressEqual","addressA","addressB","normalize","OrderSelector","cartReducer","_billing_billing_address_actions__WEBPACK_IMPORTED_MODULE_2__","_checkout__WEBPACK_IMPORTED_MODULE_3__","_shipping_consignment_actions__WEBPACK_IMPORTED_MODULE_6__","_coupon_coupon_actions__WEBPACK_IMPORTED_MODULE_4__","_coupon_gift_certificate_actions__WEBPACK_IMPORTED_MODULE_5__","consignmentReducer","_checkout__WEBPACK_IMPORTED_MODULE_2__","_consignment_actions__WEBPACK_IMPORTED_MODULE_4__","_customer__WEBPACK_IMPORTED_MODULE_3__","SignOutCustomerSucceeded","couponReducer","_coupon_actions__WEBPACK_IMPORTED_MODULE_4__","_order__WEBPACK_IMPORTED_MODULE_3__","ApplyCouponRequested","ApplyCouponFailed","RemoveCouponRequested","RemoveCouponFailed","customerReducer","giftCertificateReducer","_shipping_consignment_actions__WEBPACK_IMPORTED_MODULE_3__","_gift_certificate_actions__WEBPACK_IMPORTED_MODULE_5__","ApplyGiftCertificateRequested","ApplyGiftCertificateFailed","RemoveGiftCertificateRequested","RemoveGiftCertificateFailed","orderReducer","_order_actions__WEBPACK_IMPORTED_MODULE_3__","LoadOrderPaymentsSucceeded","FinalizeOrderSucceeded","LoadOrderRequested","LoadOrderPaymentsRequested","LoadOrderFailed","LoadOrderPaymentsFailed","shippingCountryReducer","_shipping_country_action_types__WEBPACK_IMPORTED_MODULE_2__","OrderRequestSender","loadOrder","submitOrder","finalizeOrder","OrderActionCreator","_orderRequestSender","_checkoutValidator","rxjs_Observable__WEBPACK_IMPORTED_MODULE_7__","_order_actions__WEBPACK_IMPORTED_MODULE_10__","loadOrderPayments","loadCurrentOrder","rxjs_observable_defer__WEBPACK_IMPORTED_MODULE_3__","_getCurrentOrderId","MissingOrderId","rxjs_observable_concat__WEBPACK_IMPORTED_MODULE_2__","rxjs_observable_of__WEBPACK_IMPORTED_MODULE_5__","SubmitOrderRequested","rxjs_observable_from__WEBPACK_IMPORTED_MODULE_4__","_mapToOrderRequestBody","customerMessage","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","_common_error__WEBPACK_IMPORTED_MODULE_8__","SubmitOrderFailed","FinalizeOrderRequested","FinalizeOrderFailed","CartComparator","cartA","cartB","_normalize","cartAmount","giftWrapping","NotInitializedErrorType","NotInitializedError","subtype","CustomerNotInitialized","getErrorMessage","_standard_error__WEBPACK_IMPORTED_MODULE_1__","mapFromInternalAddress","omitPrivate","omitDeep","isInternalAddressEqual","ignoredKeys","customerStrategyReducer","customer_strategy_actions","SignInRequested","SignInSucceeded","SignInFailed","SignOutRequested","SignOutSucceeded","SignOutFailed","shippingStrategyReducer","PaymentMethodInvalidError","PaymentActionCreator","_paymentRequestSender","_orderActionCreator","submitPayment","rxjs_observable_concat__WEBPACK_IMPORTED_MODULE_3__","_payment_actions__WEBPACK_IMPORTED_MODULE_17__","SubmitPaymentRequested","_getPaymentRequestBody","_common_error__WEBPACK_IMPORTED_MODULE_10__","SubmitPaymentFailed","initializeOffsitePayment","InitializeOffsitePaymentRequested","InitializeOffsitePaymentSucceeded","InitializeOffsitePaymentFailed","_common_error_errors__WEBPACK_IMPORTED_MODULE_11__","_getPaymentMethod","shippingOption","contextConfig","instrumentMeta","paymentMeta","internalCustomer","_customer__WEBPACK_IMPORTED_MODULE_13__","authToken","_is_vaulted_instrument__WEBPACK_IMPORTED_MODULE_16__","vaultAccessToken","_common_error_errors__WEBPACK_IMPORTED_MODULE_12__","_address__WEBPACK_IMPORTED_MODULE_8__","_shipping__WEBPACK_IMPORTED_MODULE_15__","_cart__WEBPACK_IMPORTED_MODULE_9__","_order__WEBPACK_IMPORTED_MODULE_14__","quoteMeta","geoCountryCode","source","storeProfile","paymentMethodSelector","initializationData","PaymentRequestSender","_transformResponse","PaymentMethodActionCreator","loadPaymentMethods","rxjs_Observable__WEBPACK_IMPORTED_MODULE_1__","_payment_method_actions__WEBPACK_IMPORTED_MODULE_2__","deviceSessionId","sessionHash","PaymentMethodRequestSender","X-API-INTERNAL","PaymentStrategyActionCreator","execute","strategy","getByMethod","_payment_strategy_actions__WEBPACK_IMPORTED_MODULE_11__","finalize","_loadOrderPaymentsIfNeeded","_order_errors__WEBPACK_IMPORTED_MODULE_10__","widgetInteraction","rxjs_observable_empty__WEBPACK_IMPORTED_MODULE_4__","PaymentStrategyRegistry","_getToken","cacheToken","hasFactory","_payment_method_types__WEBPACK_IMPORTED_MODULE_4__","_isLegacyMethod","_common_error_errors__WEBPACK_IMPORTED_MODULE_2__","clientSidePaymentProviders","paymentSettings","_common_registry__WEBPACK_IMPORTED_MODULE_3__","GooglePayBraintreeInitializer","googleBraintreePaymentInstance","_googlePaymentInstance","_createGooglePayPayload","platformToken","googlePaymentDataRequest","merchantInfo","authJwt","transactionInfo","currencyCode","totalPriceStatus","totalPrice","cardRequirements","billingAddressRequired","billingAddressFormat","shippingAddressRequired","emailRequired","phoneNumberRequired","createPaymentDataRequest","INTERNAL_USE_ONLY","TimeoutError","bindDecorator","bindMethodDecorator","bindClassDecorator","boundMethod","_bigcommerce_bigpay_client__WEBPACK_IMPORTED_MODULE_0__","createPaymentClient","setHost","bigpayBaseUrl","ConfigActionCreator","_configRequestSender","_config_actions__WEBPACK_IMPORTED_MODULE_2__","ConfigRequestSender","MissingDataErrorType","MissingDataError","MissingOrderConfig","MissingOrder","MissingPayment","throwErrorAction","isErrorAction","rxjs_observable_of__WEBPACK_IMPORTED_MODULE_2__","rxjs_observable_throw__WEBPACK_IMPORTED_MODULE_3__","BillingAddressActionCreator","continueAsGuest","credentials","_common_error_errors__WEBPACK_IMPORTED_MODULE_3__","billingAddressRequestBody","existingBillingAddressRequestBody","_billing_address_actions__WEBPACK_IMPORTED_MODULE_5__","_createOrUpdateBillingAddress","createAddress","BillingAddressRequestSender","Registry","_factories","_instances","_options","defaultToken","_getInstance","_error_errors__WEBPACK_IMPORTED_MODULE_1__","hasInstance","InvalidArgumentError","RemoteCheckoutRequestSender","initializeBilling","methodName","initializePayment","loadSettings","signOut","generateToken","trackAuthorizationEvent","RemoteCheckoutActionCreator","_remoteCheckoutRequestSender","_remote_checkout_action_types__WEBPACK_IMPORTED_MODULE_2__","AmazonPayScriptLoader","onPaymentReady","region","toLowerCase","_configureWidget","onLoginReady","Login","setClientId","clientId","setUseCookie","onAmazonLoginReady","onAmazonPaymentsReady","OrderFinalizationNotRequiredError","RemoteCheckoutSynchronizationError","PaypalScriptLoader","GooglePayScriptLoader","_common_error_errors_index__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"checkout-button.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 175);\n","module.exports = require(\"tslib\");","module.exports = require(\"@bigcommerce/data-store\");","module.exports = require(\"lodash\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nimport { ConsignmentMeta } from './consignment';\n\nexport enum ConsignmentActionType {\n    CreateConsignmentsRequested = 'CREATE_CONSIGNMENTS_REQUESTED',\n    CreateConsignmentsSucceeded = 'CREATE_CONSIGNMENTS_SUCCEEDED',\n    CreateConsignmentsFailed = 'CREATE_CONSIGNMENTS_FAILED',\n\n    UpdateConsignmentRequested = 'UPDATE_CONSIGNMENT_REQUESTED',\n    UpdateConsignmentSucceeded = 'UPDATE_CONSIGNMENT_SUCCEEDED',\n    UpdateConsignmentFailed = 'UPDATE_CONSIGNMENT_FAILED',\n\n    DeleteConsignmentRequested = 'DELETE_CONSIGNMENT_REQUESTED',\n    DeleteConsignmentSucceeded = 'DELETE_CONSIGNMENT_SUCCEEDED',\n    DeleteConsignmentFailed = 'DELETE_CONSIGNMENT_FAILED',\n\n    UpdateShippingOptionRequested = 'UPDATE_SHIPPING_OPTION_REQUESTED',\n    UpdateShippingOptionSucceeded = 'UPDATE_SHIPPING_OPTION_SUCCEEDED',\n    UpdateShippingOptionFailed = 'UPDATE_SHIPPING_OPTION_FAILED',\n\n    LoadShippingOptionsRequested = 'LOAD_SHIPPING_OPTIONS_REQUESTED',\n    LoadShippingOptionsSucceeded = 'LOAD_SHIPPING_OPTIONS_SUCCEEDED',\n    LoadShippingOptionsFailed = 'LOAD_SHIPPING_OPTIONS_FAILED',\n}\n\nexport type ConsignmentAction =\n    CreateConsignmentsAction |\n    UpdateConsignmentAction |\n    DeleteConsignmentAction |\n    UpdateShippingOptionAction |\n    LoadShippingOptionsAction;\n\nexport type CreateConsignmentsAction =\n    CreateConsignmentsRequestedAction |\n    CreateConsignmentsSucceededAction |\n    CreateConsignmentsFailedAction;\n\nexport type UpdateConsignmentAction =\n    UpdateConsignmentRequestedAction |\n    UpdateConsignmentSucceededAction |\n    UpdateConsignmentFailedAction;\n\nexport type DeleteConsignmentAction =\n    DeleteConsignmentRequestedAction |\n    DeleteConsignmentSucceededAction |\n    DeleteConsignmentFailedAction;\n\nexport type UpdateShippingOptionAction =\n    UpdateShippingOptionRequestedAction |\n    UpdateShippingOptionSucceededAction |\n    UpdateShippingOptionFailedAction;\n\nexport type LoadShippingOptionsAction =\n    LoadShippingOptionsRequestedAction |\n    LoadShippingOptionsSucceededAction |\n    LoadShippingOptionsFailedAction;\n\nexport interface CreateConsignmentsRequestedAction extends Action {\n    type: ConsignmentActionType.CreateConsignmentsRequested;\n}\n\nexport interface CreateConsignmentsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.CreateConsignmentsSucceeded;\n}\n\nexport interface CreateConsignmentsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.CreateConsignmentsFailed;\n}\n\nexport interface UpdateConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentRequested;\n}\n\nexport interface UpdateConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentSucceeded;\n}\n\nexport interface UpdateConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentFailed;\n}\n\nexport interface DeleteConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentRequested;\n}\n\nexport interface DeleteConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentSucceeded;\n}\n\nexport interface DeleteConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentFailed;\n}\n\nexport interface UpdateShippingOptionRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionRequested;\n}\n\nexport interface UpdateShippingOptionSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionSucceeded;\n}\n\nexport interface UpdateShippingOptionFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionFailed;\n}\n\nexport interface LoadShippingOptionsRequestedAction extends Action {\n    type: ConsignmentActionType.LoadShippingOptionsRequested;\n}\n\nexport interface LoadShippingOptionsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.LoadShippingOptionsSucceeded;\n}\n\nexport interface LoadShippingOptionsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.LoadShippingOptionsFailed;\n}\n","module.exports = require(\"rxjs/Observable\");","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderPaymentsAction } from '../order';\n\nexport enum PaymentStrategyActionType {\n    ExecuteFailed = 'PAYMENT_STRATEGY_EXECUTE_FAILED',\n    ExecuteRequested = 'PAYMENT_STRATEGY_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'PAYMENT_STRATEGY_EXECUTE_SUCCEEDED',\n    FinalizeFailed = 'PAYMENT_STRATEGY_FINALIZE_FAILED',\n    FinalizeRequested = 'PAYMENT_STRATEGY_FINALIZE_REQUESTED',\n    FinalizeSucceeded = 'PAYMENT_STRATEGY_FINALIZE_SUCCEEDED',\n    InitializeFailed = 'PAYMENT_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'PAYMENT_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'PAYMENT_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'PAYMENT_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'PAYMENT_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'PAYMENT_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type PaymentStrategyAction =\n    PaymentStrategyExecuteAction |\n    PaymentStrategyFinalizeAction |\n    PaymentStrategyInitializeAction |\n    PaymentStrategyDeinitializeAction |\n    PaymentStrategyWidgetAction;\n\nexport type PaymentStrategyExecuteAction =\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyFinalizeAction =\n    FinalizeRequestedAction |\n    FinalizeSucceededAction |\n    FinalizeFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type PaymentStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type PaymentStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface ExecuteRequestedAction extends Action {\n    type: PaymentStrategyActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action {\n    type: PaymentStrategyActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.ExecuteFailed;\n}\n\nexport interface FinalizeRequestedAction extends Action {\n    type: PaymentStrategyActionType.FinalizeRequested;\n}\n\nexport interface FinalizeSucceededAction extends Action {\n    type: PaymentStrategyActionType.FinalizeSucceeded;\n}\n\nexport interface FinalizeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.FinalizeFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ShippingStrategyActionType {\n    UpdateAddressFailed = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_FAILED',\n    UpdateAddressRequested = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_REQUESTED',\n    UpdateAddressSucceeded = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_SUCCEEDED',\n    SelectOptionFailed = 'SHIPPING_STRATEGY_SELECT_OPTION_FAILED',\n    SelectOptionRequested = 'SHIPPING_STRATEGY_SELECT_OPTION_REQUESTED',\n    SelectOptionSucceeded = 'SHIPPING_STRATEGY_SELECT_OPTION_SUCCEEDED',\n    InitializeFailed = 'SHIPPING_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'SHIPPING_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'SHIPPING_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'SHIPPING_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'SHIPPING_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'SHIPPING_STRATEGY_DEINITIALIZE_SUCCEEDED',\n}\n\nexport type ShippingStrategyAction =\n    ShippingStrategyUpdateAddressAction |\n    ShippingStrategySelectOptionAction |\n    ShippingStrategyInitializeAction |\n    ShippingStrategyDeinitializeAction;\n\nexport type ShippingStrategyUpdateAddressAction =\n    UpdateAddressRequestedAction |\n    UpdateAddressSucceededAction |\n    UpdateAddressFailedAction;\n\nexport type ShippingStrategySelectOptionAction =\n    SelectOptionRequestedAction |\n    SelectOptionSucceededAction |\n    SelectOptionFailedAction;\n\nexport type ShippingStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type ShippingStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport interface UpdateAddressRequestedAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressRequested;\n}\n\nexport interface UpdateAddressSucceededAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressSucceeded;\n}\n\nexport interface UpdateAddressFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.UpdateAddressFailed;\n}\n\nexport interface SelectOptionRequestedAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionRequested;\n}\n\nexport interface SelectOptionSucceededAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionSucceeded;\n}\n\nexport interface SelectOptionFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.SelectOptionFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.DeinitializeFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum CustomerStrategyActionType {\n    SignInFailed = 'CUSTOMER_STRATEGY_SIGN_IN_FAILED',\n    SignInRequested = 'CUSTOMER_STRATEGY_SIGN_IN_REQUESTED',\n    SignInSucceeded = 'CUSTOMER_STRATEGY_SIGN_IN_SUCCEEDED',\n    SignOutFailed = 'CUSTOMER_STRATEGY_SIGN_OUT_FAILED',\n    SignOutRequested = 'CUSTOMER_STRATEGY_SIGN_OUT_REQUESTED',\n    SignOutSucceeded = 'CUSTOMER_STRATEGY_SIGN_OUT_SUCCEEDED',\n    InitializeFailed = 'CUSTOMER_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'CUSTOMER_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'CUSTOMER_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'CUSTOMER_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'CUSTOMER_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'CUSTOMER_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type CustomerStrategyAction =\n    CustomerStrategySignInAction |\n    CustomerStrategySignOutAction |\n    CustomerStrategyInitializeAction |\n    CustomerStrategyDeinitializeAction |\n    CustomerStrategyWidgetAction;\n\nexport type CustomerStrategySignInAction =\n    SignInRequestedAction |\n    SignInSucceededAction |\n    SignInFailedAction;\n\nexport type CustomerStrategySignOutAction =\n    SignOutRequestedAction |\n    SignOutSucceededAction |\n    SignOutFailedAction;\n\nexport type CustomerStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type CustomerStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type CustomerStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface SignInRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignInRequested;\n}\n\nexport interface SignInSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignInSucceeded;\n}\n\nexport interface SignInFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignInFailed;\n}\n\nexport interface SignOutRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignOutRequested;\n}\n\nexport interface SignOutSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignOutSucceeded;\n}\n\nexport interface SignOutFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignOutFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum CouponActionType {\n    ApplyCouponRequested = 'APPLY_COUPON_REQUESTED',\n    ApplyCouponSucceeded = 'APPLY_COUPON_SUCCEEDED',\n    ApplyCouponFailed = 'APPLY_COUPON_FAILED',\n\n    RemoveCouponRequested = 'REMOVE_COUPON_REQUESTED',\n    RemoveCouponSucceeded = 'REMOVE_COUPON_SUCCEEDED',\n    RemoveCouponFailed = 'REMOVE_COUPON_FAILED',\n}\n\nexport type CouponAction =\n    ApplyCouponAction |\n    RemoveCouponAction;\n\nexport type ApplyCouponAction =\n    ApplyCouponRequestedAction |\n    ApplyCouponSucceededAction |\n    ApplyCouponFailedAction;\n\nexport type RemoveCouponAction =\n    RemoveCouponRequestedAction |\n    RemoveCouponSucceededAction |\n    RemoveCouponFailedAction;\n\nexport interface ApplyCouponRequestedAction extends Action {\n    type: CouponActionType.ApplyCouponRequested;\n}\n\nexport interface ApplyCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.ApplyCouponSucceeded;\n}\n\nexport interface ApplyCouponFailedAction extends Action<Error> {\n    type: CouponActionType.ApplyCouponFailed;\n}\n\nexport interface RemoveCouponRequestedAction extends Action {\n    type: CouponActionType.RemoveCouponRequested;\n}\n\nexport interface RemoveCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.RemoveCouponSucceeded;\n}\n\nexport interface RemoveCouponFailedAction extends Action<Error> {\n    type: CouponActionType.RemoveCouponFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum BillingAddressActionType {\n    UpdateBillingAddressRequested = 'UPDATE_BILLING_ADDRESS_REQUESTED',\n    UpdateBillingAddressSucceeded = 'UPDATE_BILLING_ADDRESS_SUCCEEDED',\n    UpdateBillingAddressFailed = 'UPDATE_BILLING_ADDRESS_FAILED',\n\n    ContinueAsGuestRequested = 'CONTINUE_AS_GUEST_REQUESTED',\n    ContinueAsGuestSucceeded = 'CONTINUE_AS_GUEST_SUCCEEDED',\n    ContinueAsGuestFailed = 'CONTINUE_AS_GUEST_FAILED',\n}\n\nexport type BillingAddressAction =\n    ContinueAsGuestAction |\n    UpdateBillingAddressAction;\n\nexport type UpdateBillingAddressAction =\n    UpdateBillingAddressRequested |\n    UpdateBillingAddressSucceeded |\n    UpdateBillingAddressFailed;\n\nexport type ContinueAsGuestAction =\n    ContinueAsGuestRequested |\n    ContinueAsGuestSucceeded |\n    ContinueAsGuestFailed;\n\nexport interface UpdateBillingAddressRequested extends Action {\n    type: BillingAddressActionType.UpdateBillingAddressRequested;\n}\n\nexport interface UpdateBillingAddressSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.UpdateBillingAddressSucceeded;\n}\n\nexport interface UpdateBillingAddressFailed extends Action<Error> {\n    type: BillingAddressActionType.UpdateBillingAddressFailed;\n}\n\nexport interface ContinueAsGuestRequested extends Action {\n    type: BillingAddressActionType.ContinueAsGuestRequested;\n}\n\nexport interface ContinueAsGuestSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.ContinueAsGuestSucceeded;\n}\n\nexport interface ContinueAsGuestFailed extends Action<Error> {\n    type: BillingAddressActionType.ContinueAsGuestFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum GiftCertificateActionType {\n    ApplyGiftCertificateRequested = 'APPLY_GIFT_CERTIFICATE_REQUESTED',\n    ApplyGiftCertificateSucceeded = 'APPLY_GIFT_CERTIFICATE_SUCCEEDED',\n    ApplyGiftCertificateFailed = 'APPLY_GIFT_CERTIFICATE_FAILED',\n\n    RemoveGiftCertificateRequested = 'REMOVE_GIFT_CERTIFICATE_REQUESTED',\n    RemoveGiftCertificateSucceeded = 'REMOVE_GIFT_CERTIFICATE_SUCCEEDED',\n    RemoveGiftCertificateFailed = 'REMOVE_GIFT_CERTIFICATE_FAILED',\n}\n\nexport type GiftCertificateAction =\n    ApplyGiftCertificateAction |\n    RemoveGiftCertificateAction;\n\nexport type ApplyGiftCertificateAction =\n    ApplyGiftCertificateRequestedAction |\n    ApplyGiftCertificateSucceededAction |\n    ApplyGiftCertificateFailedAction;\n\nexport type RemoveGiftCertificateAction =\n    RemoveGiftCertificateRequestedAction |\n    RemoveGiftCertificateSucceededAction |\n    RemoveGiftCertificateFailedAction;\n\nexport interface ApplyGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.ApplyGiftCertificateRequested;\n}\n\nexport interface ApplyGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.ApplyGiftCertificateSucceeded;\n}\n\nexport interface ApplyGiftCertificateFailedAction extends Action<Error> {\n    type: GiftCertificateActionType.ApplyGiftCertificateFailed;\n}\n\nexport interface RemoveGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.RemoveGiftCertificateRequested;\n}\n\nexport interface RemoveGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.RemoveGiftCertificateSucceeded;\n}\n\nexport interface RemoveGiftCertificateFailedAction extends Action<Error> {\n    type: GiftCertificateActionType.RemoveGiftCertificateFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport enum PaymentMethodActionType {\n    LoadPaymentMethodRequested = 'LOAD_PAYMENT_METHOD_REQUESTED',\n    LoadPaymentMethodSucceeded = 'LOAD_PAYMENT_METHOD_SUCCEEDED',\n    LoadPaymentMethodFailed = 'LOAD_PAYMENT_METHOD_FAILED',\n\n    LoadPaymentMethodsRequested = 'LOAD_PAYMENT_METHODS_REQUESTED',\n    LoadPaymentMethodsSucceeded = 'LOAD_PAYMENT_METHODS_SUCCEEDED',\n    LoadPaymentMethodsFailed = 'LOAD_PAYMENT_METHODS_FAILED',\n}\n\nexport type PaymentMethodAction = LoadPaymentMethodAction | LoadPaymentMethodsAction;\n\nexport type LoadPaymentMethodAction =\n    LoadPaymentMethodRequestedAction |\n    LoadPaymentMethodSucceededAction |\n    LoadPaymentMethodFailedAction;\n\nexport type LoadPaymentMethodsAction =\n    LoadPaymentMethodsRequestedAction |\n    LoadPaymentMethodsSucceededAction |\n    LoadPaymentMethodsFailedAction;\n\nexport interface LoadPaymentMethodRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodRequested;\n}\n\nexport interface LoadPaymentMethodSucceededAction extends Action<PaymentMethod> {\n    type: PaymentMethodActionType.LoadPaymentMethodSucceeded;\n}\n\nexport interface LoadPaymentMethodFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodFailed;\n}\n\nexport interface LoadPaymentMethodsRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodsRequested;\n}\n\nexport interface LoadPaymentMethodsSucceededAction extends Action<PaymentMethod[], PaymentMethodMeta> {\n    type: PaymentMethodActionType.LoadPaymentMethodsSucceeded;\n}\n\nexport interface LoadPaymentMethodsFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodsFailed;\n}\n","export const INITIALIZE_REMOTE_BILLING_REQUESTED = 'INITIALIZE_REMOTE_BILLING_REQUESTED';\nexport const INITIALIZE_REMOTE_BILLING_SUCCEEDED = 'INITIALIZE_REMOTE_BILLING_SUCCEEDED';\nexport const INITIALIZE_REMOTE_BILLING_FAILED = 'INITIALIZE_REMOTE_BILLING_FAILED';\n\nexport const INITIALIZE_REMOTE_SHIPPING_REQUESTED = 'INITIALIZE_REMOTE_SHIPPING_REQUESTED';\nexport const INITIALIZE_REMOTE_SHIPPING_SUCCEEDED = 'INITIALIZE_REMOTE_SHIPPING_SUCCEEDED';\nexport const INITIALIZE_REMOTE_SHIPPING_FAILED = 'INITIALIZE_REMOTE_SHIPPING_FAILED';\n\nexport const INITIALIZE_REMOTE_PAYMENT_REQUESTED = 'INITIALIZE_REMOTE_PAYMENT_REQUESTED';\nexport const INITIALIZE_REMOTE_PAYMENT_SUCCEEDED = 'INITIALIZE_REMOTE_PAYMENT_SUCCEEDED';\nexport const INITIALIZE_REMOTE_PAYMENT_FAILED = 'INITIALIZE_REMOTE_PAYMENT_FAILED';\n\nexport const LOAD_REMOTE_SETTINGS_REQUESTED = 'LOAD_REMOTE_SETTINGS_REQUESTED';\nexport const LOAD_REMOTE_SETTINGS_SUCCEEDED = 'LOAD_REMOTE_SETTINGS_SUCCEEDED';\nexport const LOAD_REMOTE_SETTINGS_FAILED = 'LOAD_REMOTE_SETTINGS_FAILED';\n\nexport const SIGN_OUT_REMOTE_CUSTOMER_REQUESTED = 'SIGN_OUT_REMOTE_CUSTOMER_REQUESTED';\nexport const SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED = 'SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED';\nexport const SIGN_OUT_REMOTE_CUSTOMER_FAILED = 'SIGN_OUT_REMOTE_CUSTOMER_FAILED';\n\nexport const UPDATE_REMOTE_CHECKOUT = 'UPDATE_REMOTE_CHECKOUT';\n","module.exports = require(\"rxjs/operators\");","module.exports = require(\"rxjs/observable/concat\");","module.exports = require(\"rxjs/observable/of\");","export const LOAD_INSTRUMENTS_REQUESTED = 'LOAD_INSTRUMENTS_REQUESTED';\nexport const LOAD_INSTRUMENTS_SUCCEEDED = 'LOAD_INSTRUMENTS_SUCCEEDED';\nexport const LOAD_INSTRUMENTS_FAILED = 'LOAD_INSTRUMENTS_FAILED';\n\nexport const DELETE_INSTRUMENT_REQUESTED = 'DELETE_INSTRUMENT_REQUESTED';\nexport const DELETE_INSTRUMENT_SUCCEEDED = 'DELETE_INSTRUMENT_SUCCEEDED';\nexport const DELETE_INSTRUMENT_FAILED = 'DELETE_INSTRUMENT_FAILED';\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadPaymentMethodAction } from '../payment';\n\nexport enum CheckoutButtonActionType {\n    InitializeButtonFailed = 'INITIALIZE_BUTTON_FAILED',\n    InitializeButtonRequested = 'INITIALIZE_BUTTON_REQUESTED',\n    InitializeButtonSucceeded = 'INITIALIZE_BUTTON_SUCCEEDED',\n\n    DeinitializeButtonFailed = 'DEINITIALIZE_BUTTON_FAILED',\n    DeinitializeButtonRequested = 'DEINITIALIZE_BUTTON_REQUESTED',\n    DeinitializeButtonSucceeded = 'DEINITIALIZE_BUTTON_SUCCEEDED',\n}\n\nexport type CheckoutButtonAction = InitializeButtonAction | DeinitializeButtonAction;\n\nexport type InitializeButtonAction =\n    InitializeButtonRequestedAction |\n    InitializeButtonSucceededAction |\n    InitializeButtonFailedAction |\n    LoadPaymentMethodAction;\n\nexport type DeinitializeButtonAction =\n    DeinitializeButtonRequestedAction |\n    DeinitializeButtonSucceededAction |\n    DeinitializeButtonFailedAction;\n\nexport interface CheckoutButtonActionMeta {\n    methodId: string;\n}\n\nexport interface InitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonRequested;\n}\n\nexport interface InitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonSucceeded;\n}\n\nexport interface InitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonFailed;\n}\n\nexport interface DeinitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonRequested;\n}\n\nexport interface DeinitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonSucceeded;\n}\n\nexport interface DeinitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonFailed;\n}\n","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","module.exports = require(\"rxjs/observable/defer\");","import { Action } from '@bigcommerce/data-store';\n\nimport Config from './config';\n\nexport enum ConfigActionType {\n    LoadConfigRequested = 'LOAD_CONFIG_REQUESTED',\n    LoadConfigSucceeded = 'LOAD_CONFIG_SUCCEEDED',\n    LoadConfigFailed = 'LOAD_CONFIG_FAILED',\n}\n\nexport type LoadConfigAction =\n    LoadConfigRequestedAction |\n    LoadConfigSucceededAction |\n    LoadConfigFailedAction;\n\nexport interface LoadConfigRequestedAction extends Action {\n    type: ConfigActionType.LoadConfigRequested;\n}\n\nexport interface LoadConfigSucceededAction extends Action<Config> {\n    type: ConfigActionType.LoadConfigSucceeded;\n}\n\nexport interface LoadConfigFailedAction extends Action<Error> {\n    type: ConfigActionType.LoadConfigFailed;\n}\n","export const LOAD_COUNTRIES_REQUESTED = 'LOAD_COUNTRIES_REQUESTED';\nexport const LOAD_COUNTRIES_SUCCEEDED = 'LOAD_COUNTRIES_SUCCEEDED';\nexport const LOAD_COUNTRIES_FAILED = 'LOAD_COUNTRIES_FAILED';\n","export const LOAD_SHIPPING_COUNTRIES_REQUESTED = 'LOAD_SHIPPING_COUNTRIES_REQUESTED';\nexport const LOAD_SHIPPING_COUNTRIES_SUCCEEDED = 'LOAD_SHIPPING_COUNTRIES_SUCCEEDED';\nexport const LOAD_SHIPPING_COUNTRIES_FAILED = 'LOAD_SHIPPING_COUNTRIES_FAILED';\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderAction } from '../order';\n\nimport PaymentResponseBody from './payment-response-body';\n\nexport enum PaymentActionType {\n    SubmitPaymentRequested = 'SUBMIT_PAYMENT_REQUESTED',\n    SubmitPaymentSucceeded = 'SUBMIT_PAYMENT_SUCCEEDED',\n    SubmitPaymentFailed = 'SUBMIT_PAYMENT_FAILED',\n\n    InitializeOffsitePaymentRequested = 'INITIALIZE_OFFSITE_PAYMENT_REQUESTED',\n    InitializeOffsitePaymentSucceeded = 'INITIALIZE_OFFSITE_PAYMENT_SUCCEEDED',\n    InitializeOffsitePaymentFailed = 'INITIALIZE_OFFSITE_PAYMENT_FAILED',\n}\n\nexport type PaymentAction = SubmitPaymentAction |\n    InitializeOffsitePaymentAction;\n\nexport type SubmitPaymentAction =\n    SubmitPaymentRequestedAction |\n    SubmitPaymentSucceededAction |\n    SubmitPaymentFailedAction |\n    LoadOrderAction;\n\nexport type InitializeOffsitePaymentAction =\n    InitializeOffsitePaymentRequestedAction |\n    InitializeOffsitePaymentSucceededAction |\n    InitializeOffsitePaymentFailedAction;\n\nexport interface SubmitPaymentRequestedAction extends Action {\n    type: PaymentActionType.SubmitPaymentRequested;\n}\n\nexport interface SubmitPaymentSucceededAction extends Action<PaymentResponseBody> {\n    type: PaymentActionType.SubmitPaymentSucceeded;\n}\n\nexport interface SubmitPaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.SubmitPaymentFailed;\n}\n\nexport interface InitializeOffsitePaymentRequestedAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentRequested;\n}\n\nexport interface InitializeOffsitePaymentSucceededAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentSucceeded;\n}\n\nexport interface InitializeOffsitePaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.InitializeOffsitePaymentFailed;\n}\n","module.exports = require(\"rxjs/observable/from\");","export const ACKNOWLEDGE = 'ACKNOWLEDGE';\nexport const FINALIZE = 'FINALIZE';\nexport const INITIALIZE = 'INITIALIZE';\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","module.exports = require(\"@bigcommerce/script-loader\");","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","export default interface PaymentStrategyState {\n    errors: PaymentStrategyErrorsState;\n    statuses: PaymentStrategyStatusesState;\n}\n\nexport interface PaymentStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    executeError?: Error;\n    executeMethodId?: string;\n    finalizeError?: Error;\n    finalizeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface PaymentStrategyStatusesState {\n    deinitializeMethodId?: string;\n    executeMethodId?: string;\n    finalizeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isExecuting?: boolean;\n    isFinalizing?: boolean;\n    isInitializing?: boolean;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: PaymentStrategyState = {\n    errors: {},\n    statuses: {},\n};\n","const DEFAULT_INCLUDES = [\n    'cart.lineItems.physicalItems.options',\n    'cart.lineItems.digitalItems.options',\n    'customer',\n    'payments',\n    'promotions.banners',\n];\n\nexport default DEFAULT_INCLUDES;\n","module.exports = require(\"@bigcommerce/form-poster\");","import { setPrototypeOf } from '../../utility';\n\nexport default class StandardError extends Error {\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","module.exports = require(\"@bigcommerce/request-sender\");","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\n\n@selector\nexport default class CheckoutButtonErrorSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    getInitializeButtonError(methodId?: string): Error | undefined {\n        return this._checkoutButton.getInitializeError(methodId);\n    }\n\n    getDeinitializeButtonError(methodId?: string): Error | undefined {\n        return this._checkoutButton.getDeinitializeError(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\n\n@selector\nexport default class CheckoutButtonStatusSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    isInitializingButton(methodId?: string): boolean {\n        return this._checkoutButton.isInitializing(methodId);\n    }\n\n    isDeinitializingButton(methodId?: string): boolean {\n        return this._checkoutButton.isDeinitializing(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\n\nimport CheckoutButtonErrorSelector from './checkout-button-error-selector';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStatusSelector from './checkout-button-status-selector';\n\nexport default function createCheckoutButtonSelectors(selectors: InternalCheckoutSelectors): CheckoutButtonSelectors {\n    const errors = new CheckoutButtonErrorSelector(selectors);\n    const statuses = new CheckoutButtonStatusSelector(selectors);\n\n    return {\n        errors,\n        statuses,\n    };\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../checkout';\n\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonSelectors from './create-checkout-button-selectors';\n\nexport default class CheckoutButtonInitializer {\n    private _state: CheckoutButtonSelectors;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _buttonStrategyActionCreator: CheckoutButtonStrategyActionCreator\n    ) {\n        this._state = createCheckoutButtonSelectors(this._store.getState());\n\n        this._store.subscribe(state => {\n            this._state = createCheckoutButtonSelectors(state);\n        });\n    }\n\n    /**\n     * Returns a snapshot of the current state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * state. You can query the state by calling any of its getter methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.errors.getInitializeButtonError());\n     * console.log(state.statuses.isInitializingButton());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutButtonSelectors {\n        return this._state;\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the current state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.statuses.isInitializingButton());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.errors.getInitializeButtonError();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.errors.getInitializeButtonError())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutButtonSelectors) => void,\n        ...filters: Array<(state: CheckoutButtonSelectors) => any>\n    ): () => void {\n        return this._store.subscribe(\n            () => subscriber(this.getState()),\n            state => state.checkoutButton.getState(),\n            ...filters.map(filter => (state: InternalCheckoutSelectors) => filter(createCheckoutButtonSelectors(state)))\n        );\n    }\n\n    /**\n     * Initializes the checkout button of a payment method.\n     *\n     * When the checkout button is initialized, it will be inserted into the DOM,\n     * ready to be interacted with by the customer.\n     *\n     * ```js\n     * initializer.initializeButton({\n     *     methodId: 'braintreepaypal',\n     *     braintreepaypal: {\n     *         container: '#checkoutButton',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeButton(options: CheckoutButtonInitializeOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.initialize(options);\n\n        return this._store.dispatch(action, { queueId: `${options.methodId}ButtonStrategy` })\n            .then(() => this.getState());\n    }\n\n    /**\n     * De-initializes the checkout button by performing any necessary clean-ups.\n     *\n     * ```js\n     * await service.deinitializeButton({\n     *     methodId: 'braintreepaypal',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeButton(options: CheckoutButtonOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.deinitialize(options);\n\n        return this._store.dispatch(action, { queueId: `${options.methodId}ButtonStrategy` })\n            .then(() => this.getState());\n    }\n}\n","import { createAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { of } from 'rxjs/observable/of';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\n\nimport { throwErrorAction } from '../common/error';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator } from '../payment';\n\nimport { CheckoutButtonActionType, DeinitializeButtonAction, InitializeButtonAction } from './checkout-button-actions';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport { CheckoutButtonStrategy } from './strategies';\n\nexport default class CheckoutButtonStrategyActionCreator {\n    constructor(\n        private _registry: Registry<CheckoutButtonStrategy>,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Observable<InitializeButtonAction> {\n        const meta = { methodId: options.methodId };\n\n        return concat(\n            of(createAction(CheckoutButtonActionType.InitializeButtonRequested, undefined, meta)),\n            this._paymentMethodActionCreator.loadPaymentMethod(options.methodId, options),\n            defer(() => this._registry.get(options.methodId).initialize(options)\n                .then(() => createAction(CheckoutButtonActionType.InitializeButtonSucceeded, undefined, meta)))\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutButtonActionType.InitializeButtonFailed, error, meta))\n        );\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Observable<DeinitializeButtonAction> {\n        const meta = { methodId: options.methodId };\n\n        return concat(\n            of(createAction(CheckoutButtonActionType.DeinitializeButtonRequested, undefined, meta)),\n            defer(() => this._registry.get(options.methodId).deinitialize(options)\n                .then(() => createAction(CheckoutButtonActionType.DeinitializeButtonSucceeded, undefined, meta)))\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutButtonActionType.DeinitializeButtonFailed, error, meta))\n        );\n    }\n}\n","import { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from '../checkout-button-options';\n\nexport default abstract class CheckoutButtonStrategy {\n    protected _isInitialized = false;\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        this._isInitialized = true;\n\n        return Promise.resolve();\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Promise<void> {\n        this._isInitialized = false;\n\n        return Promise.resolve();\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { Address, LegacyAddress } from '../../address';\nimport { CheckoutActionCreator, CheckoutStore } from '../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../common/error/errors';\nimport { PaymentMethod } from '../../payment';\nimport { BraintreeAddress, BraintreeError, BraintreePaypalCheckout, BraintreeSDKCreator, BraintreeTokenizePayload } from '../../payment/strategies/braintree';\nimport { PaypalAuthorizeData, PaypalScriptLoader } from '../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from '../checkout-button-options';\n\nimport CheckoutButtonStrategy from './checkout-button-strategy';\n\nexport default class BraintreePaypalButtonStrategy extends CheckoutButtonStrategy {\n    private _paypalCheckout?: BraintreePaypalCheckout;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _offerCredit: boolean = false\n    ) {\n        super();\n    }\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        if (this._isInitialized) {\n            return super.initialize(options);\n        }\n\n        const paypalOptions = this._offerCredit ? options.braintreepaypalcredit : options.braintreepaypal;\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paypalOptions) {\n            throw new InvalidArgumentError();\n        }\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return Promise.all([\n            this._braintreeSDKCreator.getPaypalCheckout(),\n            this._paypalScriptLoader.loadPaypal(),\n        ])\n            .then(([paypalCheckout, paypal]) => {\n                this._paypalCheckout = paypalCheckout;\n\n                return paypal.Button.render({\n                    env: paymentMethod.config.testMode ? 'sandbox' : 'production',\n                    commit: paypalOptions.shouldProcessPayment ? true : false,\n                    style: {\n                        shape: 'rect',\n                        label: this._offerCredit ? 'credit' : undefined,\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: () => this._setupPayment(paypalOptions.onPaymentError),\n                    onAuthorize: data => this._tokenizePayment(data, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, paypalOptions.container);\n            })\n            .then(() => super.initialize(options));\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Promise<void> {\n        if (!this._isInitialized) {\n            return super.deinitialize(options);\n        }\n\n        this._paypalCheckout = undefined;\n        this._paymentMethod = undefined;\n\n        this._braintreeSDKCreator.teardown();\n\n        return super.deinitialize(options);\n    }\n\n    private _setupPayment(onError?: (error: BraintreeError | StandardError) => void): Promise<string> {\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const checkout = state.checkout.getCheckout();\n                const config = state.config.getStoreConfig();\n                const customer = state.customer.getCustomer();\n                const address = customer && customer.addresses && customer.addresses[0];\n\n                if (!this._paypalCheckout) {\n                    throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                return this._paypalCheckout.createPayment({\n                    flow: 'checkout',\n                    enableShippingAddress: true,\n                    shippingAddressEditable: false,\n                    shippingAddressOverride: address ? this._mapToBraintreeAddress(address) : undefined,\n                    amount: checkout.grandTotal,\n                    currency: config.currency.code,\n                    offerCredit: this._offerCredit,\n                });\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        shouldProcessPayment?: boolean,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<BraintreeTokenizePayload> {\n        if (!this._paypalCheckout || !this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return Promise.all([\n            this._paypalCheckout.tokenizePayment(data),\n            this._braintreeSDKCreator.getDataCollector({ paypal: true }),\n        ])\n            .then(([payload, { deviceData }]) => {\n                this._formPoster.postForm('/checkout.php', {\n                    payment_type: 'paypal',\n                    provider: methodId,\n                    action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                    nonce: payload.nonce,\n                    device_data: deviceData,\n                    shipping_address: JSON.stringify(this._mapToLegacyShippingAddress(payload)),\n                    billing_address: JSON.stringify(this._mapToLegacyBillingAddress(payload)),\n                });\n\n                return payload;\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _mapToLegacyShippingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const shippingAddress = payload.details.shippingAddress;\n        const recipientName = shippingAddress && shippingAddress.recipientName || '';\n        const [firstName, lastName] = recipientName.split(' ');\n\n        return {\n            email: payload.details.email,\n            first_name: firstName,\n            last_name: lastName,\n            phone_number: shippingAddress && shippingAddress.phone || payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToLegacyBillingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const billingAddress = payload.details.billingAddress;\n        const shippingAddress = payload.details.shippingAddress;\n\n        if (billingAddress) {\n            return {\n                email: payload.details.email,\n                first_name: billingAddress.firstName || payload.details.firstName,\n                last_name: billingAddress.lastName || payload.details.lastName,\n                phone_number: billingAddress.phone || payload.details.phone,\n                address_line_1: billingAddress.line1,\n                address_line_2: billingAddress.line2,\n                city: billingAddress.city,\n                state: billingAddress.state,\n                country_code: billingAddress.countryCode,\n                postal_code: billingAddress.postalCode,\n            };\n        }\n\n        return {\n            email: payload.details.email,\n            first_name: payload.details.firstName,\n            last_name: payload.details.lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToBraintreeAddress(address: Address): BraintreeAddress {\n        return {\n            line1: address.address1,\n            line2: address.address2,\n            city: address.city,\n            state: address.stateOrProvinceCode,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phone,\n            recipientName: `${address.firstName} ${address.lastName}`,\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { PaymentInitializeOptions, PaymentMethod } from '../../../payment';\nimport { GooglePayBraintreeSDK, GooglePayPaymentOptions, GooglePayPaymentStrategy, GooglePayScriptLoader, GooglePaySDK } from '../../../payment/strategies/googlepay';\nimport GooglePayPaymentProcessor from '../../../payment/strategies/googlepay/googlepay-payment-processor';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nimport { GooglePayBraintreeButtonInitializeOptions } from './googlepay-braintree-button-options';\n\nexport default class GooglePayBraintreeButtonStrategy extends CheckoutButtonStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _methodId!: string;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _formPoster: FormPoster,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {\n        super();\n    }\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        if (this._isInitialized) {\n            return super.initialize(options);\n        }\n\n        const { googlepaybraintree, methodId } = options;\n\n        if (!googlepaybraintree || !methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._methodId = methodId;\n\n        const googleClientOptions: GooglePayPaymentOptions = {\n            environment: googlepaybraintree.environment || 'PRODUCTION',\n        };\n\n        return this._googlePayPaymentProcessor.initialize(this._methodId)\n            .then(() => super.initialize(options));\n        // return this._createGooglePayButton(googleClientOptions, googlepaybraintree)\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Promise<void> {\n        if (!this._isInitialized) {\n            return super.deinitialize(options);\n        }\n\n        this._paymentMethod = undefined;\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => super.deinitialize(options));\n    }\n\n    private _createGooglePayButton(googleClientOptions: GooglePayPaymentOptions, googlepaybraintree: GooglePayBraintreeButtonInitializeOptions): Promise<void> {\n        return this._googlePayScriptLoader.load()\n            .then(googleSDK => {\n                const googleClient = new googleSDK.payments.api.PaymentsClient(googleClientOptions);\n\n                const googlePayButton = googleClient.createButton({\n                    onClick: (e: Event) => this._handleWalletButtonClick(e),\n                    buttonType: googlepaybraintree.buttonType,\n                });\n                const container = document.querySelector(`#${googlepaybraintree.container}`);\n\n                if (!container) {\n                    throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n                }\n\n                container.appendChild(googlePayButton);\n            });\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n\n        return this._googlePayPaymentProcessor.displayWallet()\n            .then(() => this._onPaymentSelectComplete());\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: {\n                fromGooglePay: true,\n            },\n        });\n    }\n\n    private _onError(error?: Error): void {\n        if (error) {\n            throw new Error(error.message);\n        }\n    }\n\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { createCheckoutStore } from '../checkout';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\n\nimport CheckoutButtonInitializer from './checkout-button-initializer';\nimport CheckoutButtonInitializerOptions from './checkout-button-initializer-options';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonRegistry from './create-checkout-button-registry';\n\n/**\n * Creates an instance of `CheckoutButtonInitializer`.\n *\n * ```js\n * const initializer = createCheckoutButtonInitializer();\n *\n * initializer.initializeButton({\n *     methodId: 'braintreepaypal',\n *     braintreepaypal: {\n *         container: '#checkoutButton',\n *     },\n * });\n * ```\n *\n * Please note that `CheckoutButtonInitializer` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @alpha\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutButtonInitializer`.\n */\nexport default function createCheckoutButtonInitializer(\n    options?: CheckoutButtonInitializerOptions\n): CheckoutButtonInitializer {\n    const store = createCheckoutStore();\n    const requestSender = createRequestSender();\n\n    return new CheckoutButtonInitializer(\n        store,\n        new CheckoutButtonStrategyActionCreator(\n            createCheckoutButtonRegistry(store, requestSender),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender))\n        )\n    );\n}\n","import { createFormPoster, FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport CheckoutValidator from '../checkout/checkout-validator';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { createPaymentClient, PaymentActionCreator, PaymentMethodActionCreator, PaymentMethodRequestSender, PaymentRequestSender, PaymentStrategyActionCreator, PaymentStrategyRegistry } from '../payment';\nimport { BraintreeScriptLoader, BraintreeSDKCreator } from '../payment/strategies/braintree';\nimport { GooglePayBraintreeInitializer, GooglePayPaymentStrategy, GooglePayScriptLoader } from '../payment/strategies/googlepay';\nimport GooglePayPaymentProcessor from '../payment/strategies/googlepay/googlepay-payment-processor';\nimport { PaypalScriptLoader } from '../payment/strategies/paypal';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\nimport { createShippingStrategyRegistry, ConsignmentActionCreator, ConsignmentRequestSender, ShippingStrategyActionCreator } from '../shipping';\n\nimport { BraintreePaypalButtonStrategy, CheckoutButtonStrategy, GooglePayBraintreeButtonStrategy } from './strategies';\n\nexport default function createCheckoutButtonRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<CheckoutButtonStrategy> {\n    const registry = new Registry<CheckoutButtonStrategy>();\n    const scriptLoader = getScriptLoader();\n    const paymentClient = createPaymentClient(store);\n    const checkoutActionCreator = new CheckoutActionCreator(\n        new CheckoutRequestSender(requestSender),\n        new ConfigActionCreator(new ConfigRequestSender(requestSender))\n    );\n    const paymentRequestSender = new PaymentRequestSender(paymentClient);\n    const orderActionCreator = new OrderActionCreator(\n        new OrderRequestSender(requestSender),\n        new CheckoutValidator(new CheckoutRequestSender(requestSender)));\n    const paymentStrategyActionCreator = new PaymentStrategyActionCreator(\n        new PaymentStrategyRegistry(store),\n        orderActionCreator\n    );\n    const paymentActionCreator = new PaymentActionCreator(\n        paymentRequestSender,\n        orderActionCreator\n    );\n    const googlepayScriptLoader = new GooglePayScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader));\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n\n    registry.register('braintreepaypal', () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            createFormPoster()\n        )\n    );\n\n    registry.register('braintreepaypalcredit', () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            createFormPoster(),\n            true\n        )\n    );\n\n    registry.register('googlepaybraintree', () =>\n        new GooglePayBraintreeButtonStrategy(\n            store,\n            new FormPoster(),\n            googlepayScriptLoader,\n            new GooglePayPaymentProcessor(\n                store,\n                paymentMethodActionCreator,\n                new GooglePayScriptLoader(scriptLoader),\n                new GooglePayBraintreeInitializer(braintreeSDKCreator),\n                new BillingAddressActionCreator(new BillingAddressRequestSender(requestSender)),\n                new ShippingStrategyActionCreator(createShippingStrategyRegistry(store, requestSender))\n            )\n        )\n    );\n\n    return registry;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadConfigAction } from '../config/config-actions';\n\nimport Checkout from './checkout';\n\nexport enum CheckoutActionType {\n    LoadCheckoutRequested = 'LOAD_CHECKOUT_REQUESTED',\n    LoadCheckoutSucceeded = 'LOAD_CHECKOUT_SUCCEEDED',\n    LoadCheckoutFailed = 'LOAD_CHECKOUT_FAILED',\n\n    UpdateCheckoutRequested = 'UPDATE_CHECKOUT_REQUESTED',\n    UpdateCheckoutSucceeded = 'UPDATE_CHECKOUT_SUCCEEDED',\n    UpdateCheckoutFailed = 'UPDATE_CHECKOUT_FAILED',\n}\n\nexport type CheckoutAction = LoadCheckoutAction | UpdateCheckoutAction;\n\nexport type LoadCheckoutAction =\n    LoadCheckoutRequestedAction |\n    LoadCheckoutSucceededAction |\n    LoadCheckoutFailedAction |\n    LoadConfigAction;\n\nexport type UpdateCheckoutAction =\n    UpdateCheckoutRequestedAction |\n    UpdateCheckoutSucceededAction |\n    UpdateCheckoutFailedAction;\n\nexport interface LoadCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.LoadCheckoutRequested;\n}\n\nexport interface LoadCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.LoadCheckoutSucceeded;\n}\n\nexport interface LoadCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.LoadCheckoutFailed;\n}\n\nexport interface UpdateCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.UpdateCheckoutRequested;\n}\n\nexport interface UpdateCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.UpdateCheckoutSucceeded;\n}\n\nexport interface UpdateCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.UpdateCheckoutFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { InternalOrderResponseData } from './internal-order-responses';\nimport Order from './order';\n\nexport enum OrderActionType {\n    LoadOrderRequested = 'LOAD_ORDER_REQUESTED',\n    LoadOrderSucceeded = 'LOAD_ORDER_SUCCEEDED',\n    LoadOrderFailed = 'LOAD_ORDER_FAILED',\n\n    LoadOrderPaymentsRequested = 'LOAD_ORDER_PAYMENTS_REQUESTED',\n    LoadOrderPaymentsSucceeded = 'LOAD_ORDER_PAYMENTS_SUCCEEDED',\n    LoadOrderPaymentsFailed = 'LOAD_ORDER_PAYMENTS_FAILED',\n\n    SubmitOrderRequested = 'SUBMIT_ORDER_REQUESTED',\n    SubmitOrderSucceeded = 'SUBMIT_ORDER_SUCCEEDED',\n    SubmitOrderFailed = 'SUBMIT_ORDER_FAILED',\n\n    FinalizeOrderRequested = 'FINALIZE_ORDER_REQUESTED',\n    FinalizeOrderSucceeded = 'FINALIZE_ORDER_SUCCEEDED',\n    FinalizeOrderFailed = 'FINALIZE_ORDER_FAILED',\n}\n\nexport type OrderAction = LoadOrderAction |\n    LoadOrderPaymentsAction |\n    SubmitOrderAction |\n    FinalizeOrderAction;\n\nexport type LoadOrderPaymentsAction = LoadOrderPaymentsRequestedAction |\n    LoadOrderPaymentsSucceededAction |\n    LoadOrderPaymentsFailedAction;\n\nexport type LoadOrderAction =\n    LoadOrderRequestedAction |\n    LoadOrderSucceededAction |\n    LoadOrderFailedAction;\n\nexport type SubmitOrderAction =\n    SubmitOrderRequestedAction |\n    SubmitOrderSucceededAction |\n    SubmitOrderFailedAction |\n    LoadOrderAction;\n\nexport type FinalizeOrderAction =\n    FinalizeOrderRequestedAction |\n    FinalizeOrderSucceededAction |\n    FinalizeOrderFailedAction |\n    LoadOrderAction;\n\nexport interface LoadOrderRequestedAction extends Action {\n    type: OrderActionType.LoadOrderRequested;\n}\n\nexport interface LoadOrderSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderSucceeded;\n}\n\nexport interface LoadOrderFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderFailed;\n}\n\nexport interface LoadOrderPaymentsRequestedAction extends Action {\n    type: OrderActionType.LoadOrderPaymentsRequested;\n}\n\nexport interface LoadOrderPaymentsSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderPaymentsSucceeded;\n}\n\nexport interface LoadOrderPaymentsFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderPaymentsFailed;\n}\n\nexport interface SubmitOrderRequestedAction extends Action {\n    type: OrderActionType.SubmitOrderRequested;\n}\n\nexport interface SubmitOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.SubmitOrderSucceeded;\n}\n\nexport interface SubmitOrderFailedAction extends Action<Error> {\n    type: OrderActionType.SubmitOrderFailed;\n}\n\nexport interface FinalizeOrderRequestedAction extends Action {\n    type: OrderActionType.FinalizeOrderRequested;\n}\n\nexport interface FinalizeOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.FinalizeOrderSucceeded;\n}\n\nexport interface FinalizeOrderFailedAction extends Action<Error> {\n    type: OrderActionType.FinalizeOrderFailed;\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { ConsignmentsRequestBody, ConsignmentUpdateRequestBody } from './consignment';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'consignments.availableShippingOptions',\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class ConsignmentRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createConsignments(checkoutId: string, consignments: ConsignmentsRequestBody, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: consignments, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateConsignment(checkoutId: string, consignment: ConsignmentUpdateRequestBody, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = consignment;\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n\n    deleteConsignment(checkoutId: string, consignmentId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${consignmentId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, { params: DEFAULT_PARAMS, headers, timeout });\n    }\n}\n","import InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nimport { AmountTransformer } from '.';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","import InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\nimport { AmountTransformer } from '.';\n\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","export default class CacheKeyResolver {\n    private _lastId = 0;\n    private _maps: CacheKeyMap[] = [];\n\n    getKey(...args: any[]): string {\n        const { index, map, parentMaps } = this._resolveMap(...args);\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n\n            return map.cacheKey;\n        }\n\n        return this._generateKey(parentMaps, args.slice(index));\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMaps = this._maps;\n\n        while (parentMaps.length) {\n            let isMatched = false;\n\n            for (const map of parentMaps) {\n                if (map.value !== args[index]) {\n                    continue;\n                }\n\n                if ((args.length === 0 || index === args.length - 1) && map.cacheKey) {\n                    return { index, map, parentMaps };\n                }\n\n                isMatched = true;\n                parentMaps = map.maps;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMaps };\n    }\n\n    private _generateKey(maps: CacheKeyMap[], args: any[]): string {\n        let index = 0;\n        let parentMaps = maps;\n        let map!: CacheKeyMap;\n\n        do {\n            map = {\n                usedCount: 1,\n                value: args[index],\n                maps: [],\n            };\n\n            parentMaps.push(map);\n\n            parentMaps = map.maps;\n            index++;\n        } while (index < args.length);\n\n        map.cacheKey = `${++this._lastId}`;\n\n        return map.cacheKey;\n    }\n}\n\ninterface CacheKeyMap {\n    maps: CacheKeyMap[];\n    value: any;\n    usedCount: number;\n    cacheKey?: string;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMaps: CacheKeyMap[];\n    map?: CacheKeyMap;\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class CartChangedError extends StandardError {\n    constructor() {\n        super('An update to your shopping cart has been detected and your available shipping costs have been updated.');\n\n        this.type = 'cart_changed';\n    }\n}\n","import { isEqual, map } from 'lodash';\n\nimport { CartComparator } from '../cart';\nimport { CartChangedError } from '../cart/errors';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { Coupon, GiftCertificate } from '../coupon';\n\nimport Checkout from './checkout';\nimport CheckoutRequestSender from './checkout-request-sender';\n\nexport default class CheckoutValidator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    validate(checkout?: Checkout, options?: RequestOptions): Promise<void> {\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        return this._checkoutRequestSender.loadCheckout(checkout.id, options)\n            .then(response => {\n                const comparator = new CartComparator();\n\n                if (checkout.grandTotal === response.body.grandTotal\n                    && this._compareCoupons(checkout.coupons, response.body.coupons)\n                    && this._compareGiftCertificates(checkout.giftCertificates, response.body.giftCertificates)\n                    && comparator.isEqual(checkout.cart, response.body.cart)\n                ) {\n                    return;\n                }\n\n                throw new CartChangedError();\n            });\n    }\n\n    private _compareCoupons(couponsA: Coupon[], couponsB: Coupon[]): boolean {\n        return isEqual(map(couponsA, 'code'), map(couponsB, 'code'));\n    }\n\n    private _compareGiftCertificates(giftCertificatesA: GiftCertificate[], giftCertificatesB: GiftCertificate[]): boolean {\n        return isEqual(map(giftCertificatesA, 'code'), map(giftCertificatesB, 'code'));\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadCheckoutAction } from '../checkout';\n\nimport { InternalCustomerResponseData } from './internal-customer-responses';\n\nexport enum CustomerActionType {\n    SignInCustomerRequested = 'SIGN_IN_CUSTOMER_REQUESTED',\n    SignInCustomerSucceeded = 'SIGN_IN_CUSTOMER_SUCCEEDED',\n    SignInCustomerFailed = 'SIGN_IN_CUSTOMER_FAILED',\n\n    SignOutCustomerRequested = 'SIGN_OUT_CUSTOMER_REQUESTED',\n    SignOutCustomerSucceeded = 'SIGN_OUT_CUSTOMER_SUCCEEDED',\n    SignOutCustomerFailed = 'SIGN_OUT_CUSTOMER_FAILED',\n}\n\nexport type CustomerAction =\n    SignInCustomerAction |\n    SignOutCustomerAction;\n\nexport type SignInCustomerAction =\n    SignInCustomerRequestedAction |\n    SignInCustomerSucceededAction |\n    SignInCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport type SignOutCustomerAction =\n    SignOutCustomerRequestedAction |\n    SignOutCustomerSucceededAction |\n    SignOutCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport interface SignInCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignInCustomerRequested;\n}\n\nexport interface SignInCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignInCustomerSucceeded;\n}\n\nexport interface SignInCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignInCustomerFailed;\n}\n\nexport interface SignOutCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignOutCustomerRequested;\n}\n\nexport interface SignOutCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignOutCustomerSucceeded;\n}\n\nexport interface SignOutCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignOutCustomerFailed;\n}\n","import { PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport { AmountTransformer } from '.';\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","import { Action } from '@bigcommerce/data-store';\nimport { from } from 'rxjs/observable/from';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, Subscribable } from 'rxjs/Observable';\n\nimport { RequestErrorFactory } from '../common/error';\n\nexport default function createActionTransformer(\n    requestErrorFactory: RequestErrorFactory\n): (action: Subscribable<Action>) => Observable<Action> {\n    return action$ => from(action$).pipe(catchError<Action, never>(action => {\n        if (action instanceof Error || action.payload instanceof Error) {\n            throw action;\n        }\n\n        if (isResponse(action.payload)) {\n            throw { ...action, payload: requestErrorFactory.createError(action.payload) };\n        }\n\n        throw action;\n    }));\n}\n\nfunction isResponse(object: any) {\n    if (!object || typeof object !== 'object') {\n        return false;\n    }\n\n    return ['body', 'headers', 'status', 'statusText'].every(key =>\n        object.hasOwnProperty(key)\n    );\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport StandardError from './standard-error';\n\nconst DEFAULT_RESPONSE = {\n    body: {},\n    headers: {},\n    status: 0,\n    statusText: '',\n};\n\nexport default class RequestError extends StandardError {\n    body: any;\n    headers: { [key: string]: any; };\n    status: number;\n    statusText: string;\n\n    constructor({ body = {}, headers, status, statusText }: Response = DEFAULT_RESPONSE, message?: string) {\n        super(joinErrors(body.errors) || body.detail || body.title || message || 'An unexpected error has occurred.');\n\n        this.type = 'request';\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.statusText = statusText;\n    }\n}\n\nfunction joinErrors(errors: Array<string | { code: string, message: string }>): string | undefined {\n    if (!Array.isArray(errors)) {\n        return;\n    }\n\n    return errors.reduce((result: string[], error) => {\n        if (typeof error === 'string') {\n            return [...result, error];\n        }\n\n        if (error && error.message) {\n            return [...result, error.message];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { find, some, values } from 'lodash';\n\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonState from './checkout-button-state';\n\n@selector\nexport default class CheckoutButtonSelector {\n    constructor(\n        private _checkoutButton: CheckoutButtonState\n    ) {}\n\n    getState(): CheckoutButtonState {\n        return this._checkoutButton;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId) {\n            const method = this._checkoutButton.statuses[methodId];\n\n            return (method && method.isInitializing) === true;\n        }\n\n        return some(this._checkoutButton.statuses, { isInitializing: true });\n    }\n\n    isDeinitializing(methodId?: string): boolean {\n        if (methodId) {\n            const method = this._checkoutButton.statuses[methodId];\n\n            return (method && method.isDeinitializing) === true;\n        }\n\n        return some(this._checkoutButton.statuses, { isDeinitializing: true });\n    }\n\n    getInitializeError(methodId?: string): Error | undefined {\n        const method = methodId ?\n            this._checkoutButton.errors[methodId] :\n            find(values(this._checkoutButton.errors), method => !!(method && method.initializeError));\n\n        return method && method.initializeError;\n    }\n\n    getDeinitializeError(methodId?: string): Error | undefined {\n        const method = methodId ?\n            this._checkoutButton.errors[methodId] :\n            find(values(this._checkoutButton.errors), method => !!(method && method.deinitializeError));\n\n        return method && method.deinitializeError;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutButtonAction, CheckoutButtonActionType } from './checkout-button-actions';\nimport CheckoutButtonState, { CheckoutButtonErrorsState, CheckoutButtonStatusesState } from './checkout-button-state';\n\nconst DEFAULT_STATE: CheckoutButtonState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function checkoutButtonReducer(\n    state: CheckoutButtonState = DEFAULT_STATE,\n    action: Action\n): CheckoutButtonState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<CheckoutButtonState>({\n        errors: combineReducers({\n            [action.meta.methodId]: errorsReducer,\n        }),\n        statuses: combineReducers({\n            [action.meta.methodId]: statusesReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: CheckoutButtonErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutButtonAction\n): CheckoutButtonErrorsState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n        };\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutButtonStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutButtonAction\n): CheckoutButtonStatusesState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n        };\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { find, map } from 'lodash';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { AddressRequestBody } from '../address';\nimport { Cart } from '../cart';\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport CheckoutRequestSender from '../checkout/checkout-request-sender';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport Consignment, {\n    ConsignmentsRequestBody,\n    ConsignmentAssignmentRequestBody,\n    ConsignmentCreateRequestBody,\n    ConsignmentLineItem,\n    ConsignmentRequestBody,\n    ConsignmentShippingOptionRequestBody,\n    ConsignmentUpdateRequestBody\n} from './consignment';\nimport {\n    ConsignmentActionType,\n    CreateConsignmentsAction,\n    DeleteConsignmentAction,\n    LoadShippingOptionsAction,\n    UpdateConsignmentAction,\n    UpdateShippingOptionAction,\n} from './consignment-actions';\nimport ConsignmentRequestSender from './consignment-request-sender';\n\nexport default class ConsignmentActionCreator {\n    constructor(\n        private _consignmentRequestSender: ConsignmentRequestSender,\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    assignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            return this._createOrUpdateConsignment({\n                id: existingConsignment && existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems: this._combineLineItems(\n                    consignment,\n                    existingConsignment,\n                    state.cart.getCart()\n                ),\n            }, options)(store);\n        };\n    }\n\n    selectShippingOption(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n            const consignments = state.consignments.getConsignments();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (!consignments || !consignments.length) {\n                throw new MissingDataError(MissingDataErrorType.MissingConsignments);\n            }\n\n            const consignmentUpdateBody = {\n                id: consignments[0].id,\n                shippingOptionId: id,\n            };\n\n            const consignmentMeta = {\n                id: consignments[0].id,\n            };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignmentUpdateBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(\n                        ConsignmentActionType.UpdateShippingOptionSucceeded,\n                        body,\n                        consignmentMeta\n                    ));\n\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(\n                        ConsignmentActionType.UpdateShippingOptionFailed,\n                        response,\n                        consignmentMeta\n                    ));\n                });\n        });\n    }\n\n    loadShippingOptions(options?: RequestOptions): ThunkAction<LoadShippingOptionsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadShippingOptionsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.LoadShippingOptionsRequested));\n\n            this._checkoutRequestSender.loadCheckout(checkout.id, {\n                ...options,\n                params: {\n                    include: ['consignments.availableShippingOptions'],\n                },\n            })\n            .then(({ body }) => {\n                observer.next(createAction(ConsignmentActionType.LoadShippingOptionsSucceeded, body));\n                observer.complete();\n            })\n            .catch(response => {\n                observer.error(createErrorAction(ConsignmentActionType.LoadShippingOptionsFailed, response));\n            });\n        });\n    }\n\n    updateAddress(\n        address: AddressRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const consignment = this._getConsignmentRequestBody(address, store);\n            const consignments = store.getState().consignments.getConsignments();\n\n            if (consignments && consignments.length) {\n                (consignment as ConsignmentUpdateRequestBody).id = consignments[0].id;\n            }\n\n            return this._createOrUpdateConsignment(consignment, options)(store);\n        };\n    }\n\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CreateConsignmentsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.CreateConsignmentsRequested));\n\n            this._consignmentRequestSender.createConsignments(checkout.id, consignments, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.CreateConsignmentsSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.CreateConsignmentsFailed, response));\n                });\n        });\n    }\n\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n            const consignmentMeta = { id: consignmentId };\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.DeleteConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.deleteConsignment(checkout.id, consignmentId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.DeleteConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.DeleteConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    updateShippingOption(\n        consignment: ConsignmentShippingOptionRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateShippingOptionSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateShippingOptionFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    private _createOrUpdateConsignment(\n        consignment: ConsignmentCreateRequestBody | ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (this._isUpdateConsignmentRequest(consignment)) {\n                return this.updateConsignment(consignment, options)(store);\n            }\n\n            return this.createConsignments([consignment], options)(store);\n        };\n    }\n\n    private _getConsignmentRequestBody(\n        shippingAddress: AddressRequestBody,\n        store: ReadableCheckoutStore\n    ): ConsignmentRequestBody {\n        const state = store.getState();\n        const cart = state.cart.getCart();\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return {\n            shippingAddress,\n            lineItems: (cart.lineItems && cart.lineItems.physicalItems || [])\n                .map(item => ({\n                    itemId: item.id,\n                    quantity: item.quantity,\n                })\n            ),\n        };\n    }\n\n    private _combineLineItems(\n        consignment: ConsignmentAssignmentRequestBody,\n        existingConsignment?: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!existingConsignment) {\n            return consignment.lineItems;\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        const existingLineItems = map(existingConsignment.lineItemIds, itemId => {\n            const item = find(cart.lineItems.physicalItems, { id: itemId });\n\n            return {\n                itemId,\n                quantity: item ? item.quantity : 0,\n            };\n        }) as ConsignmentLineItem[];\n\n        return existingLineItems.concat(consignment.lineItems);\n    }\n\n    private _isUpdateConsignmentRequest(\n        request: ConsignmentRequestBody\n    ): request is ConsignmentUpdateRequestBody {\n        const updateRequest = request as ConsignmentUpdateRequestBody;\n\n        return !!updateRequest.id;\n    }\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","import { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { selector } from '../common/selector';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector } from '../customer';\nimport { ConsignmentSelector } from '../shipping';\n\nimport Checkout from './checkout';\nimport CheckoutState from './checkout-state';\n\n@selector\nexport default class CheckoutSelector {\n    constructor(\n        private _checkout: CheckoutState,\n        private _billingAddress: BillingAddressSelector,\n        private _cart: CartSelector,\n        private _consignments: ConsignmentSelector,\n        private _coupons: CouponSelector,\n        private _customer: CustomerSelector,\n        private _giftCertificates: GiftCertificateSelector\n    ) {}\n\n    getCheckout(): Checkout | undefined {\n        const { data } = this._checkout;\n        const billingAddress = this._billingAddress.getBillingAddress();\n        const cart = this._cart.getCart();\n        const customer = this._customer.getCustomer();\n        const consignments = this._consignments.getConsignments() || [];\n        const coupons = this._coupons.getCoupons() || [];\n        const giftCertificates = this._giftCertificates.getGiftCertificates() || [];\n\n        if (!data || !cart || !customer) {\n            return;\n        }\n\n        return {\n            ...data,\n            billingAddress,\n            cart,\n            customer,\n            consignments,\n            coupons,\n            giftCertificates,\n        };\n    }\n\n    getLoadError(): Error | undefined {\n        return this._checkout.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return this._checkout.statuses.isLoading === true;\n    }\n\n    getUpdateError(): Error | undefined {\n        return this._checkout.errors.updateError;\n    }\n\n    isUpdating(): boolean {\n        return this._checkout.statuses.isUpdating === true;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport { CheckoutAction, CheckoutActionType } from './checkout-actions';\nimport CheckoutState, { CheckoutDataState, CheckoutErrorsState, CheckoutStatusesState } from './checkout-state';\n\nconst DEFAULT_STATE: CheckoutState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function checkoutReducer(\n    state: CheckoutState = DEFAULT_STATE,\n    action: Action\n): CheckoutState {\n    const reducer = combineReducers<CheckoutState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutDataState | undefined,\n    action: CheckoutAction | BillingAddressAction | ConsignmentAction | CouponAction | GiftCertificateAction | OrderAction\n): CheckoutDataState | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return action.payload\n            ? omit({ ...data, ...action.payload }, ['billingAddress', 'cart', 'consignments', 'customer', 'coupons', 'giftCertifcates'])\n            : data;\n\n    case OrderActionType.SubmitOrderSucceeded:\n        return action.payload && data\n            ? { ...data, orderId: action.payload.order.orderId }\n            : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CheckoutErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | OrderAction\n): CheckoutErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return {\n            ...errors,\n            loadError: undefined,\n        };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return {\n            ...errors,\n            loadError: action.payload,\n        };\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return {\n            ...errors,\n            updateError: undefined,\n        };\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n        return {\n            ...errors,\n            updateError: action.payload,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | OrderAction\n): CheckoutStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return {\n            ...statuses,\n            isLoading: true,\n        };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return {\n            ...statuses,\n            isLoading: false,\n        };\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n        return {\n            ...statuses,\n            isUpdating: true,\n        };\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return {\n            ...statuses,\n            isUpdating: false,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport BillingAddress from './billing-address';\nimport BillingAddressState from './billing-address-state';\n\n@selector\nexport default class BillingAddressSelector {\n    constructor(\n        private _billingAddress: BillingAddressState\n    ) {}\n\n    getBillingAddress(): BillingAddress | undefined {\n        return this._billingAddress.data;\n    }\n\n    getUpdateError(): Error | undefined {\n        return this._billingAddress.errors.updateError;\n    }\n\n    getContinueAsGuestError(): Error | undefined {\n        return this._billingAddress.errors.continueAsGuestError;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._billingAddress.errors.loadError;\n    }\n\n    isUpdating(): boolean {\n        return !!this._billingAddress.statuses.isUpdating;\n    }\n\n    isContinuingAsGuest(): boolean {\n        return !!this._billingAddress.statuses.isContinuingAsGuest;\n    }\n\n    isLoading(): boolean {\n        return !!this._billingAddress.statuses.isLoading;\n    }\n}\n","import { deepFreeze } from '@bigcommerce/data-store';\n\n// tslint:disable-next-line:ban-types\ntype FunctionProperties<T> = { [K in keyof T]: T[K] extends Function ? T[K] : never };\n\nexport default function createFreezeProxy<T extends object>(target: T): T {\n    return createProxy(target, (target, name) =>\n        (...args: any[]) => deepFreeze(target[name].call(target, ...args))\n    );\n}\n\nexport function createFreezeProxies<T extends { [key: string]: object }>(map: T): T {\n    return Object.keys(map)\n        .reduce((result, key) => {\n            result[key] = createFreezeProxy(map[key]);\n\n            return result;\n        }, {} as T);\n}\n\nfunction createProxy<T extends object>(target: T, trap: (target: FunctionProperties<T>, name: keyof FunctionProperties<T>, proxy: T) => any): T {\n    const proxy = Object.create(target);\n\n    traversePrototypeOf(target, prototype => {\n        Object.getOwnPropertyNames(prototype)\n            .forEach(name => {\n                if (name === 'constructor' || typeof proxy[name] !== 'function' || name.charAt(0) === '_') {\n                    return;\n                }\n\n                proxy[name] = trap(target as FunctionProperties<T>, name as keyof T, proxy);\n            });\n    });\n\n    return proxy;\n}\n\nfunction traversePrototypeOf(target: object, iteratee: (prototype: object) => void): void {\n    let prototype = Object.getPrototypeOf(target);\n\n    while (prototype) {\n        iteratee(prototype);\n\n        prototype = Object.getPrototypeOf(prototype);\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Config, { ContextConfig, StoreConfig } from './config';\nimport ConfigState from './config-state';\n\n@selector\nexport default class ConfigSelector {\n    constructor(\n        private _config: ConfigState\n    ) {}\n\n    getConfig(): Config | undefined {\n        return this._config.data;\n    }\n\n    getStoreConfig(): StoreConfig | undefined {\n        return this._config.data && this._config.data.storeConfig;\n    }\n\n    getContextConfig(): ContextConfig | undefined {\n        return this._config.data && this._config.data.context;\n    }\n\n    getExternalSource(): string | undefined {\n        return this._config.meta && this._config.meta.externalSource;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._config.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._config.statuses.isLoading;\n    }\n}\n","import { find } from 'lodash';\n\nimport { selector } from '../common/selector';\nimport { ConfigState } from '../config';\nimport { Country } from '../geography';\n\nimport FormField from './form-field';\n\n@selector\nexport default class FormSelector {\n    constructor(\n        private _config: ConfigState\n    ) {}\n\n    getShippingAddressFields(countries: Country[] = [], countryCode: string): FormField[] {\n        const selectedCountry = find(countries, { code: countryCode });\n        const fields = this._config.data ? this._config.data.storeConfig.formFields.shippingAddressFields : [];\n\n        return fields.map((field: any) => this._processField(field, countries, selectedCountry));\n    }\n\n    getBillingAddressFields(countries: Country[] = [], countryCode: string): FormField[] {\n        const selectedCountry = find(countries, { code: countryCode });\n        const fields = this._config.data ? this._config.data.storeConfig.formFields.billingAddressFields : [];\n\n        return fields.map((field: any) => this._processField(field, countries, selectedCountry));\n    }\n\n    private _processField(field: FormField, countries: Country[], selectedCountry?: Country): FormField {\n        if (field.name === 'countryCode') {\n            return this._processCountry(field, countries, selectedCountry);\n        }\n\n        if (field.name === 'stateOrProvince') {\n            return this._processProvince(field, selectedCountry);\n        }\n\n        if (field.name === 'postalCode') {\n            return this._processsPostCode(field, selectedCountry);\n        }\n\n        return field;\n    }\n\n    private _processCountry(field: FormField, countries: Country[] = [], country?: Country): FormField {\n        if (!countries.length) {\n            return field;\n        }\n\n        const { code = '' } = country || {};\n        const items = countries.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            options: { items },\n            default: code,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    private _processProvince(field: FormField, country?: Country): FormField {\n        const { subdivisions = [] } = country || {};\n\n        if (!subdivisions.length) {\n            return {\n                ...field,\n                required: false,\n            };\n        }\n\n        const items = subdivisions.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            name: 'stateOrProvinceCode',\n            options: { items },\n            required: true,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    private _processsPostCode(field: FormField, country?: Country): FormField {\n        const { hasPostalCodes = [] } = country || {};\n\n        if (hasPostalCodes === undefined) {\n            return field;\n        }\n\n        return { ...field, required: Boolean(hasPostalCodes) };\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Country from './country';\nimport CountryState from './country-state';\n\n@selector\nexport default class CountrySelector {\n    constructor(\n        private _countries: CountryState\n    ) {}\n\n    getCountries(): Country[] | undefined {\n        return this._countries.data;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._countries.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._countries.statuses.isLoading;\n    }\n}\n","import { find } from 'lodash';\n\nimport { CheckoutPayment, CheckoutSelector } from '../checkout';\nimport { selector } from '../common/selector';\nimport { GatewayOrderPayment, InternalOrderPayment, OrderSelector } from '../order';\n\nimport PaymentMethod from './payment-method';\nimport { HOSTED } from './payment-method-types';\nimport { ACKNOWLEDGE, FINALIZE } from './payment-status-types';\n\n@selector\nexport default class PaymentSelector {\n    constructor(\n        private _checkout: CheckoutSelector,\n        private _order: OrderSelector\n    ) {}\n\n    getPaymentId(): { providerId: string, gatewayId?: string } | undefined {\n        const internalPayment = this._getInternalPayment();\n\n        if (internalPayment && internalPayment.id) {\n            return {\n                providerId: internalPayment.id,\n                gatewayId: internalPayment.gateway,\n            };\n        }\n\n        const payment = this._getHostedPayment() || this._getGatewayPayment();\n\n        if (payment && payment.providerId) {\n            return {\n                providerId: payment.providerId,\n                gatewayId: payment.gatewayId,\n            };\n        }\n    }\n\n    getPaymentStatus(): string | undefined {\n        const internalPayment = this._getInternalPayment();\n\n        if (internalPayment && internalPayment.status) {\n            return internalPayment.status.replace('PAYMENT_STATUS_', '');\n        }\n\n        const payment = this._getHostedPayment() || this._getGatewayPayment();\n\n        if (payment) {\n            return payment.detail.step;\n        }\n    }\n\n    getPaymentToken(): string | undefined {\n        const meta = this._order.getOrderMeta();\n\n        return meta && meta.token;\n    }\n\n    getPaymentRedirectUrl(): string | undefined {\n        const payment = this._getInternalPayment();\n\n        return payment && payment.redirectUrl;\n    }\n\n    isPaymentDataRequired(useStoreCredit: boolean = false): boolean {\n        const checkout = this._checkout.getCheckout();\n\n        if (!checkout) {\n            return false;\n        }\n\n        const grandTotal = checkout.grandTotal || 0;\n        const storeCredit = checkout.customer.storeCredit || 0;\n\n        return (useStoreCredit ? grandTotal - storeCredit : grandTotal) > 0;\n    }\n\n    isPaymentDataSubmitted(paymentMethod?: PaymentMethod): boolean {\n        if (paymentMethod && paymentMethod.nonce) {\n            return true;\n        }\n\n        return this.getPaymentStatus() === ACKNOWLEDGE || this.getPaymentStatus() === FINALIZE;\n    }\n\n    private _getInternalPayment(): InternalOrderPayment | undefined {\n        const meta = this._order.getOrderMeta();\n\n        return meta && meta.payment;\n    }\n\n    private _getGatewayPayment(): GatewayOrderPayment | undefined {\n        const order = this._order.getOrder();\n\n        return find(order && order.payments, ({ providerId }) =>\n            providerId !== 'giftcertificate' && providerId !== 'storecredit'\n        ) as GatewayOrderPayment;\n    }\n\n    private _getHostedPayment(): CheckoutPayment | undefined {\n        const checkout = this._checkout.getCheckout();\n\n        return find(checkout && checkout.payments, ({ providerType }) =>\n            providerType === HOSTED\n        );\n    }\n}\n","import { find } from 'lodash';\n\nimport { selector } from '../common/selector';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState from './payment-method-state';\n\n@selector\nexport default class PaymentMethodSelector {\n    constructor(\n        private _paymentMethods: PaymentMethodState\n    ) {}\n\n    getPaymentMethods(): PaymentMethod[] | undefined {\n        return this._paymentMethods.data;\n    }\n\n    getPaymentMethodsMeta(): PaymentMethodMeta | undefined {\n        return this._paymentMethods.meta;\n    }\n\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined {\n        return gatewayId ?\n            find(this._paymentMethods.data, { id: methodId, gateway: gatewayId }) :\n            find(this._paymentMethods.data, { id: methodId });\n    }\n\n    getLoadError(): Error | undefined {\n        return this._paymentMethods.errors && this._paymentMethods.errors.loadError;\n    }\n\n    getLoadMethodError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentMethods.errors.loadMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentMethods.errors.loadMethodError;\n    }\n\n    isLoading(): boolean {\n        return !!this._paymentMethods.statuses.isLoading;\n    }\n\n    isLoadingMethod(methodId?: string): boolean {\n        if (methodId && this._paymentMethods.statuses.loadMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentMethods.statuses.isLoadingMethod;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport PaymentStrategyState, { DEFAULT_STATE } from './payment-strategy-state';\n\n@selector\nexport default class PaymentStrategySelector {\n    constructor(\n        private _paymentStrategies: PaymentStrategyState = DEFAULT_STATE\n    ) {}\n\n    getInitializeError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.initializeMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.initializeError;\n    }\n\n    getExecuteError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.executeMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.executeError;\n    }\n\n    getFinalizeError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.finalizeMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.finalizeError;\n    }\n\n    getWidgetInteractingError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.widgetInteractionMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.widgetInteractionError;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.initializeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isInitializing;\n    }\n\n    isExecuting(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.executeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isExecuting;\n    }\n\n    isFinalizing(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.finalizeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isFinalizing;\n    }\n\n    isWidgetInteracting(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.widgetInteractionMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isWidgetInteracting;\n    }\n}\n","import Instrument from './instrument';\nimport InstrumentState, { InstrumentMeta } from './instrument-state';\n\nexport default class InstrumentSelector {\n    constructor(\n        private _instruments: InstrumentState\n    ) {}\n\n    getInstruments(): Instrument[] | undefined {\n        return this._instruments.data;\n    }\n\n    getInstrumentsMeta(): InstrumentMeta | undefined {\n        return this._instruments.meta;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._instruments.errors && this._instruments.errors.loadError;\n    }\n\n    getDeleteError(instrumentId?: string): Error | undefined {\n        if (!this._instruments.errors || (instrumentId && this._instruments.errors.failedInstrument !== instrumentId)) {\n            return;\n        }\n\n        return this._instruments.errors.deleteError;\n    }\n\n    isLoading(): boolean {\n        return !!(this._instruments.statuses && this._instruments.statuses.isLoading);\n    }\n\n    isDeleting(instrumentId?: string): boolean {\n        if (!this._instruments.statuses || (instrumentId && this._instruments.statuses.deletingInstrument !== instrumentId)) {\n            return false;\n        }\n\n        return !!this._instruments.statuses.isDeleting;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport RemoteCheckoutState, { RemoteCheckoutStateData } from './remote-checkout-state';\n\n@selector\nexport default class RemoteCheckoutSelector {\n    constructor(\n        private _remoteCheckout: RemoteCheckoutState\n    ) {}\n\n    getCheckout<TMethodId extends keyof RemoteCheckoutStateData>(\n        methodId: TMethodId\n    ): RemoteCheckoutStateData[TMethodId] | undefined {\n        return this._remoteCheckout.data[methodId];\n    }\n}\n","import { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { CheckoutButtonSelector } from '../checkout-buttons';\nimport { createFreezeProxies } from '../common/utility';\nimport { ConfigSelector } from '../config';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector, CustomerStrategySelector } from '../customer';\nimport { FormSelector } from '../form';\nimport { CountrySelector } from '../geography';\nimport { OrderSelector } from '../order';\nimport { PaymentSelector } from '../payment';\nimport { PaymentMethodSelector, PaymentStrategySelector } from '../payment';\nimport { InstrumentSelector } from '../payment/instrument';\nimport { RemoteCheckoutSelector } from '../remote-checkout';\nimport { ConsignmentSelector, ShippingAddressSelector, ShippingCountrySelector, ShippingStrategySelector } from '../shipping';\n\nimport CheckoutSelector from './checkout-selector';\nimport { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default function createInternalCheckoutSelectors(state: CheckoutStoreState, options: CheckoutStoreOptions = {}): InternalCheckoutSelectors {\n    const billingAddress = new BillingAddressSelector(state.billingAddress);\n    const cart = new CartSelector(state.cart);\n    const checkoutButton = new CheckoutButtonSelector(state.checkoutButton);\n    const config = new ConfigSelector(state.config);\n    const countries = new CountrySelector(state.countries);\n    const coupons = new CouponSelector(state.coupons);\n    const customer = new CustomerSelector(state.customer);\n    const customerStrategies = new CustomerStrategySelector(state.customerStrategies);\n    const form = new FormSelector(state.config);\n    const giftCertificates = new GiftCertificateSelector(state.giftCertificates);\n    const instruments = new InstrumentSelector(state.instruments);\n    const paymentMethods = new PaymentMethodSelector(state.paymentMethods);\n    const paymentStrategies = new PaymentStrategySelector(state.paymentStrategies);\n    const shippingAddress = new ShippingAddressSelector(state.consignments);\n    const remoteCheckout = new RemoteCheckoutSelector(state.remoteCheckout);\n    const shippingCountries = new ShippingCountrySelector(state.shippingCountries);\n    const shippingStrategies = new ShippingStrategySelector(state.shippingStrategies);\n\n    // Compose selectors\n    const consignments = new ConsignmentSelector(state.consignments, cart);\n    const checkout = new CheckoutSelector(state.checkout, billingAddress, cart, consignments, coupons, customer, giftCertificates);\n    const order = new OrderSelector(state.order, billingAddress, coupons);\n    const payment = new PaymentSelector(checkout, order);\n\n    const selectors = {\n        billingAddress,\n        cart,\n        checkout,\n        checkoutButton,\n        config,\n        consignments,\n        countries,\n        coupons,\n        customer,\n        customerStrategies,\n        form,\n        giftCertificates,\n        instruments,\n        order,\n        payment,\n        paymentMethods,\n        paymentStrategies,\n        remoteCheckout,\n        shippingAddress,\n        shippingCountries,\n        shippingStrategies,\n    };\n\n    return options.shouldWarnMutation ? createFreezeProxies(selectors) : selectors;\n}\n","export interface CompareOptions {\n    keyFilter?(key: string): boolean;\n}\n\nexport default function isEqual(objectA: any, objectB: any, options?: CompareOptions): boolean {\n    if (objectA === objectB) {\n        return true;\n    }\n\n    if (objectA && objectB && typeof objectA === 'object' && typeof objectB === 'object') {\n        if (Array.isArray(objectA) && Array.isArray(objectB)) {\n            return isArrayEqual(objectA, objectB, options);\n        }\n\n        if (Array.isArray(objectA) || Array.isArray(objectB)) {\n            return false;\n        }\n\n        if ((objectA instanceof Date) && (objectB instanceof Date)) {\n            return isDateEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof Date) || (objectB instanceof Date)) {\n            return false;\n        }\n\n        if ((objectA instanceof RegExp) && (objectB instanceof RegExp)) {\n            return isRegExpEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof RegExp) || (objectB instanceof RegExp)) {\n            return false;\n        }\n\n        return isObjectEqual(objectA, objectB, options);\n    }\n\n    return objectA === objectB;\n}\n\nfunction isRegExpEqual(objectA: RegExp, objectB: RegExp): boolean {\n    return objectA.toString() === objectB.toString();\n}\n\nfunction isDateEqual(objectA: Date, objectB: Date): boolean {\n    return objectA.getTime() === objectB.getTime();\n}\n\nfunction isArrayEqual(objectA: any[], objectB: any[], options?: CompareOptions): boolean {\n    if (objectA.length !== objectB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = objectA.length; index < length; index++) {\n        if (!isEqual(objectA[index], objectB[index], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isObjectEqual(\n    objectA: { [key: string]: any },\n    objectB: { [key: string]: any },\n    options?: CompareOptions\n): boolean {\n    const filter = options && options.keyFilter;\n    const keysA = filter ? Object.keys(objectA).filter(filter) : Object.keys(objectA);\n    const keysB = filter ? Object.keys(objectB).filter(filter) : Object.keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = keysA.length; index < length; index++) {\n        const key = keysA[index];\n\n        if (!objectB.hasOwnProperty(key)) {\n            return false;\n        }\n\n        if (!isEqual(objectA[key], objectB[key], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","import { memoize } from 'lodash';\n\nimport { bindDecorator, isEqual, isPrivate } from '../utility';\n\nimport CacheKeyResolver from './cache-key-resolver';\n\n/**\n * Decorates a class by patching all of its methods to cache their return values\n * and return them if they are called again with the same set of parameters. The\n * decorator also binds all the methods to the calling instance so it can be\n * destructed.\n */\nexport default function selectorDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                selectorMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\nfunction selectorMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let resolver = new CacheKeyResolver();\n    let method = descriptor.value;\n    let memoizedMethod = memoize(method, (...args) => resolver.getKey(...args));\n\n    return bindDecorator(target, key, {\n        get() {\n            const value = ((...args: any[]) => {\n                const cachedValue = memoizedMethod.call(this, ...args);\n\n                if (resolver.getUsedCount(...args) === 1) {\n                    return cachedValue;\n                }\n\n                const newValue = method.call(this, ...args);\n\n                if (isEqual(newValue, cachedValue, { keyFilter: key => !isPrivate(key) })) {\n                    return cachedValue;\n                }\n\n                memoizedMethod.cache.set(resolver.getKey(...args), newValue);\n\n                return newValue;\n            }) as T;\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n        set(value) {\n            resolver = new CacheKeyResolver();\n            method = value;\n            memoizedMethod = memoize(method, (...args) => resolver.getKey(...args));\n        },\n    });\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\ntype Method = (...args: any[]) => any;\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport Checkout, { CheckoutRequestBody } from './checkout';\nimport CheckoutDefaultIncludes from './checkout-default-includes';\nimport CheckoutParams from './checkout-params';\n\nexport default class CheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadCheckout(id: string, { params, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.get(url, {\n            params: {\n                include: CheckoutDefaultIncludes.concat(params && params.include || []).join(','),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    updateCheckout(id: string, body: CheckoutRequestBody, { params, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            params: {\n                include: CheckoutDefaultIncludes.concat(params && params.include || []).join(','),\n            },\n            body,\n            headers,\n            timeout,\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from 'rxjs/observable/of';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\n\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType, StandardError } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { ConfigActionCreator } from '../config';\n\nimport { CheckoutRequestBody } from './checkout';\nimport { CheckoutActionType, LoadCheckoutAction, UpdateCheckoutAction } from './checkout-actions';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default class CheckoutActionCreator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender,\n        private _configActionCreator: ConfigActionCreator\n    ) {}\n\n    loadCheckout(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            merge(\n                this._configActionCreator.loadConfig()(store),\n                defer(() => this._checkoutRequestSender.loadCheckout(id, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body)))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    loadDefaultCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            this._configActionCreator.loadConfig()(store),\n            defer(() => {\n                const state = store.getState();\n                const context = state.config.getContextConfig();\n\n                if (!context || !context.checkoutId) {\n                    throw new StandardError('Unable to load checkout: no cart is available');\n                }\n\n                return this._checkoutRequestSender.loadCheckout(context.checkoutId, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body));\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    updateCheckout(\n        body: CheckoutRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateCheckoutAction, InternalCheckoutSelectors> {\n        return store => new Observable(observer => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CheckoutActionType.UpdateCheckoutRequested));\n\n            this._checkoutRequestSender.updateCheckout(checkout.id, body, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CheckoutActionType.UpdateCheckoutSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CheckoutActionType.UpdateCheckoutFailed, response));\n                });\n        });\n    }\n\n    loadCurrentCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            return this.loadCheckout(checkout.id, options)(store);\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { StandardError } from '../../../common/error/errors';\n\nimport {GooglePayCreator} from '../googlepay';\n\nimport {\n    BraintreeClientCreator,\n    BraintreeDataCollectorCreator,\n    BraintreeHostWindow,\n    BraintreePaypalCheckoutCreator,\n    BraintreePaypalCreator,\n    BraintreeThreeDSecureCreator,\n    BraintreeVisaCheckoutCreator,\n} from './braintree';\n\nexport default class BraintreeScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: BraintreeHostWindow = window\n    ) {}\n\n    loadClient(): Promise<BraintreeClientCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/client.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.client) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.client;\n            });\n    }\n\n    load3DS(): Promise<BraintreeThreeDSecureCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/three-d-secure.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.threeDSecure) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.threeDSecure;\n            });\n    }\n\n    loadDataCollector(): Promise<BraintreeDataCollectorCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/data-collector.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.dataCollector) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.dataCollector;\n            });\n    }\n\n    loadPaypal(): Promise<BraintreePaypalCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypal) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.paypal;\n            });\n    }\n\n    loadPaypalCheckout(): Promise<BraintreePaypalCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypalCheckout) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.paypalCheckout;\n            });\n    }\n\n    loadVisaCheckout(): Promise<BraintreeVisaCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/visa-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.visaCheckout) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.visaCheckout;\n            });\n    }\n\n    loadGooglePaymentComponent(): Promise<GooglePayCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/google-payment.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.googlePayment) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.googlePayment;\n            });\n    }\n}\n","import { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport { GooglePayBraintreeSDK } from '../googlepay';\n\nimport {\n    BraintreeClient,\n    BraintreeDataCollector,\n    BraintreeModule,\n    BraintreePaypal,\n    BraintreePaypalCheckout,\n    BraintreeThreeDSecure,\n    BraintreeVisaCheckout,\n} from './braintree';\nimport BraintreeScriptLoader from './braintree-script-loader';\n\nexport default class BraintreeSDKCreator {\n    private _client?: Promise<BraintreeClient>;\n    private _3ds?: Promise<BraintreeThreeDSecure>;\n    private _paypal?: Promise<BraintreePaypal>;\n    private _paypalCheckout?: Promise<BraintreePaypalCheckout>;\n    private _clientToken?: string;\n    private _visaCheckout?: Promise<BraintreeVisaCheckout>;\n    private _dataCollectors: {\n        default?: Promise<BraintreeDataCollector>,\n        paypal?: Promise<BraintreeDataCollector>,\n    } = {};\n    private _googlePay?: Promise<GooglePayBraintreeSDK>;\n\n    constructor(\n        private _braintreeScriptLoader: BraintreeScriptLoader\n    ) {}\n\n    initialize(clientToken: string) {\n        this._clientToken = clientToken;\n    }\n\n    getClient(): Promise<BraintreeClient> {\n        if (!this._clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!this._client) {\n            this._client = this._braintreeScriptLoader.loadClient()\n                .then(client => client.create({ authorization: this._clientToken }));\n        }\n\n        return this._client;\n    }\n\n    getPaypal(): Promise<BraintreePaypal> {\n        if (!this._paypal) {\n            this._paypal = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypal(),\n            ])\n            .then(([client, paypal]) => paypal.create({ client }));\n        }\n\n        return this._paypal;\n    }\n\n    getPaypalCheckout(): Promise<BraintreePaypalCheckout> {\n        if (!this._paypalCheckout) {\n            this._paypalCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypalCheckout(),\n            ])\n                .then(([client, paypalCheckout]) => paypalCheckout.create({ client }));\n        }\n\n        return this._paypalCheckout;\n    }\n\n    get3DS(): Promise<BraintreeThreeDSecure> {\n        if (!this._3ds) {\n            this._3ds = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.load3DS(),\n            ])\n            .then(([client, threeDSecure]) => threeDSecure.create({ client }));\n        }\n\n        return this._3ds;\n    }\n\n    getDataCollector(options?: { paypal: boolean }): Promise<BraintreeDataCollector> {\n        const cacheKey = options && options.paypal ? 'paypal' : 'default';\n        let cached = this._dataCollectors[cacheKey];\n\n        if (!cached) {\n            cached = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadDataCollector(),\n            ])\n            .then(([client, dataCollector]) => dataCollector.create({ client, kount: true, ...options }))\n            .catch(error => {\n                if (error && error.code === 'DATA_COLLECTOR_KOUNT_NOT_ENABLED') {\n                    return { deviceData: undefined, teardown: () => Promise.resolve() };\n                }\n\n                throw error;\n            });\n\n            this._dataCollectors[cacheKey] = cached;\n        }\n\n        return cached;\n    }\n\n    getVisaCheckout(): Promise<BraintreeVisaCheckout> {\n        if (!this._visaCheckout) {\n            this._visaCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadVisaCheckout(),\n            ])\n            .then(([client, visaCheckout]) => visaCheckout.create({ client }));\n        }\n\n        return this._visaCheckout;\n    }\n\n    getGooglePaymentComponent(): Promise<GooglePayBraintreeSDK> {\n        if (!this._googlePay) {\n            this._googlePay = Promise.all ([\n                this.getClient(),\n                this._braintreeScriptLoader.loadGooglePaymentComponent(),\n            ])\n                .then(([client, googlePay]) => {\n                    return googlePay.create({ client });\n                });\n        }\n\n        return this._googlePay;\n    }\n\n    teardown(): Promise<void> {\n        return Promise.all([\n            this._teardown(this._3ds),\n            this._teardown(this._dataCollectors.default),\n            this._teardown(this._dataCollectors.paypal),\n            this._teardown(this._visaCheckout),\n            this._teardown(this._googlePay),\n        ]).then(() => {\n            this._3ds = undefined;\n            this._visaCheckout = undefined;\n            this._dataCollectors = {};\n            this._googlePay = undefined;\n        });\n    }\n\n    private _teardown(module?: Promise<BraintreeModule>) {\n        return module ?\n            module.then(mod => mod.teardown()) :\n            Promise.resolve();\n    }\n}\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n    };\n}\n","export default class AmountTransformer {\n    constructor(private _dp: number) {}\n\n    toInteger(amount: number): number {\n        return Math.floor(amount * Math.pow(10, this._dp));\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { AddressRequestBody } from '../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../checkout';\n\nimport { ShippingRequestOptions } from '../shipping-request-options';\n\nexport default abstract class ShippingStrategy {\n    protected _isInitialized = false;\n\n    constructor(\n        protected _store: CheckoutStore\n    ) {}\n\n    abstract updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors>;\n\n    abstract selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors>;\n\n    initialize(options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        this._isInitialized = true;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        this._isInitialized = false;\n\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, AddressRequestBody } from '../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../payment';\nimport { AmazonPayAddressBook, AmazonPayOrderReference, AmazonPayScriptLoader, AmazonPayWidgetError, AmazonPayWindow } from '../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator } from '../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../remote-checkout/errors';\nimport ConsignmentActionCreator from '../consignment-action-creator';\nimport { ShippingInitializeOptions, ShippingRequestOptions } from '../shipping-request-options';\nimport { ShippingStrategyActionType } from '../shipping-strategy-actions';\n\nimport ShippingStrategy from './shipping-strategy';\n\nexport default class AmazonPayShippingStrategy extends ShippingStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        super(store);\n\n        this._window = window;\n    }\n\n    initialize(options: ShippingInitializeOptions): Promise<InternalCheckoutSelectors> {\n        if (this._isInitialized) {\n            return super.initialize(options);\n        }\n\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const onReady = () => {\n                    this._createAddressBook(amazonOptions)\n                        .then(resolve)\n                        .catch(reject);\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => super.initialize(options));\n    }\n\n    deinitialize(options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._isInitialized) {\n            return super.deinitialize(options);\n        }\n\n        this._paymentMethod = undefined;\n\n        return super.deinitialize(options);\n    }\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    selectOption(optionId: string, options?: any): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    private _createAddressBook(options: AmazonPayShippingInitializeOptions): Promise<AmazonPayAddressBook> {\n        return new Promise((resolve, reject) => {\n            const { container, onAddressSelect = () => {}, onError = () => {}, onReady = () => {} } = options;\n            const merchantId = this._paymentMethod && this._paymentMethod.config.merchantId;\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay AddressBook widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.AddressBook({\n                design: {\n                    designMode: 'responsive',\n                },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onAddressSelect: orderReference => {\n                    this._synchronizeShippingAddress()\n                        .then(() => onAddressSelect(orderReference))\n                        .catch(onError);\n                },\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onReady: orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                },\n            });\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeShippingAddress(): Promise<InternalCheckoutSelectors> {\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n        const amazon = this._store.getState().remoteCheckout.getCheckout('amazon');\n        const referenceId = amazon ? amazon.referenceId : undefined;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId })\n        )\n            .then(() => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializeShipping(methodId, { referenceId })\n            ))\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.shipping && amazon.shipping.address;\n                const address = state.shippingAddress.getShippingAddress();\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, address || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._consignmentActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            })\n            .then(() => this._store.dispatch(\n                createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId })\n            ))\n            .catch(error => this._store.dispatch(\n                createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId })\n            ));\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n}\n\n/**\n * A set of options that are required to initialize the shipping step of\n * checkout in order to support Amazon Pay.\n *\n * When Amazon Pay is initialized, a widget will be inserted into the DOM. The\n * widget has a list of shipping addresses for the customer to choose from.\n */\nexport interface AmazonPayShippingInitializeOptions {\n    /**\n     * The ID of a container which the address widget should insert into.\n     */\n    container: string;\n\n    /**\n     * A callback that gets called when the customer selects an address option.\n     *\n     * @param reference - The order reference provided by Amazon.\n     */\n    onAddressSelect?(reference: AmazonPayOrderReference): void;\n\n    /**\n     * A callback that gets called if unable to initialize the widget or select\n     * one of the address options provided by the widget.\n     *\n     * @param error - The error object describing the failure of the initialization.\n     */\n    onError?(error: AmazonPayWidgetError | StandardError): void;\n\n    /**\n     * A callback that gets called when the widget is loaded and ready to be\n     * interacted with.\n     *\n     * @param reference - The order reference provided by Amazon.\n     */\n    onReady?(reference: AmazonPayOrderReference): void;\n}\n","import { AddressRequestBody } from '../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../checkout';\nimport ConsignmentActionCreator from '../consignment-action-creator';\nimport { ShippingRequestOptions } from '../shipping-request-options';\n\nimport ShippingStrategy from './shipping-strategy';\n\nexport default class DefaultShippingStrategy extends ShippingStrategy {\n    constructor(\n        store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator\n    ) {\n        super(store);\n    }\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(address, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport ConsignmentActionCreator from './consignment-action-creator';\nimport ConsignmentRequestSender from './consignment-request-sender';\nimport { AmazonPayShippingStrategy, DefaultShippingStrategy, ShippingStrategy } from './strategies';\n\nexport default function createShippingStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<ShippingStrategy> {\n    const registry = new Registry<ShippingStrategy>();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const consignmentRequestSender = new ConsignmentRequestSender(requestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayShippingStrategy(\n            store,\n            new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n            new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender)),\n            new AmazonPayScriptLoader(getScriptLoader())\n        )\n    );\n\n    registry.register('default', () =>\n        new DefaultShippingStrategy(\n            store,\n            new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender)\n        )\n    );\n\n    return registry;\n}\n","import { AddressRequestBody } from '../../../address/address';\nimport { BillingAddressUpdateRequestBody } from '../../../billing/billing-address';\nimport Checkout from '../../../checkout/checkout';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeModule, BraintreeModuleCreator } from '../braintree';\n\nexport type EnvironmentType = 'PRODUCTION' | 'TEST';\ntype AddressFormat = 'FULL' | 'MIN';\ntype TotalPriceStatus = 'ESTIMATED' | 'FINAL' | 'NOT_CURRENTLY_KNOWN';\ntype TokenizeType = 'AndroidPayCard' | 'CreditCard';\nexport const GATEWAY = { braintree: 'braintree' };\n\nexport interface GooglePayBraintreeSDK extends BraintreeModule {\n    createPaymentDataRequest(request?: GooglePayDataRequestV1): { allowedPaymentMethods: string[] } | GooglePayPaymentDataRequestV1;\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload>;\n}\n\nexport interface GooglePayCreator extends BraintreeModuleCreator<GooglePayBraintreeSDK> {}\n\nexport interface GooglePayPaymentOptions {\n    environment: EnvironmentType;\n}\n\nexport interface GooglePayDataRequestV1 {\n    merchantInfo: {\n        authJwt?: string,\n    };\n    transactionInfo: {\n        currencyCode: string,\n        totalPriceStatus: TotalPriceStatus,\n        totalPrice: string,\n    };\n    cardRequirements: {\n        billingAddressRequired: boolean,\n        billingAddressFormat: AddressFormat,\n    };\n    emailRequired: boolean;\n    phoneNumberRequired: boolean;\n    shippingAddressRequired: boolean;\n}\n\nexport interface GooglePayPaymentDataRequestV1 {\n    allowedPaymentMethods: string[];\n    apiVersion: number;\n    cardRequirements: {\n        allowedCardNetworks: string[];\n        billingAddressFormat: string;\n        billingAddressRequired: boolean;\n    };\n    enviroment: string;\n    i: {\n        googleTransactionId: string;\n        startTimeMs: number;\n    };\n    merchantInfo: {\n        merchantId: string;\n    };\n    paymentMethodTokenizationParameters: {\n        parameters: {\n            'braintree:apiVersion': string;\n            'braintree:authorizationFingerprint': string;\n            'braintree:merchantId': string;\n            'braintree:metadata': string;\n            'braintree:sdkVersion': string;\n            gateway: string;\n        };\n        tokenizationType: string;\n    };\n    shippingAddressRequired: boolean;\n    transactionInfo: {\n        currencyCode: string;\n        totalPrice: string;\n        totalPriceStatus: string;\n    };\n}\n\nexport interface GooglePayIsReadyToPayResponse {\n    result: boolean;\n    paymentMethodPresend?: boolean;\n}\n\nexport interface GooglePaySDK {\n    payments: any;\n}\n\nexport enum ButtonType {\n    long = 'long',\n    short = 'short',\n}\nexport enum ButtonColor {\n    default = 'default',\n    black = 'black',\n    white = 'white',\n}\n\nexport interface GooglePayClient {\n    isReadyToPay(options: object): Promise<GooglePayIsReadyToPayResponse>;\n    loadPaymentData(paymentDataRequest: any): Promise<GooglePaymentData>;\n    createButton(options: { [key: string]: string | object }): HTMLElement;\n}\n\nexport interface GooglePayHostWindow extends Window {\n    google?: GooglePaySDK;\n}\n\nexport interface TokenizePayload {\n    nonce: string;\n    details: {\n        cardType: string;\n        lastFour: string;\n        lastTwo: string;\n    };\n    description: string;\n    type: TokenizeType;\n    binData: {\n        commercial: string;\n        countryOfIssuance: string;\n        debit: string;\n        durbinRegulated: string;\n        healthcare: string;\n        issuingBank: string;\n        payroll: string;\n        prepaid: string;\n        productId: string;\n    };\n}\n\nexport interface GooglePaymentData {\n    cardInfo: {\n        cardClass: string;\n        cardDescription: string;\n        cardDetails: string;\n        cardImageUri: string;\n        cardNetwork: string;\n        billingAddress: GooglePayAddress;\n    };\n    paymentMethodToken: {\n        token: string;\n        tokenizationType: string;\n    };\n    shippingAddress: GooglePayAddress;\n    email: string;\n}\n\nexport interface GooglePayAddress {\n    address1: string;\n    address2: string;\n    address3: string;\n    address4: string;\n    address5: string;\n    administrativeArea: string;\n    companyName: string;\n    countryCode: string;\n    locality: string;\n    name: string;\n    postalCode: string;\n    sortingCode: string;\n    phoneNumber: string;\n}\n\nexport interface PaymentSuccessPayload {\n    email: string;\n    tokenizePayload: TokenizePayload;\n    billingAddress: GooglePayAddress;\n    shippingAddress: GooglePayAddress;\n}\n\nexport interface GooglePaymentsError {\n    statusCode: string;\n    statusMessage?: string;\n}\n\nexport default function mapGooglePayAddressToRequestAddress(address: GooglePayAddress, id?: string): AddressRequestBody | BillingAddressUpdateRequestBody {\n    return {\n        id,\n        firstName: address.name.split(' ').slice(0, -1).join(' '),\n        lastName: address.name.split(' ').slice(-1).join(' '),\n        company: address.companyName,\n        address1: address.address1,\n        address2: address.address2 + address.address3 + address.address4 + address.address5,\n        city: address.locality,\n        stateOrProvince: address.administrativeArea,\n        stateOrProvinceCode: address.administrativeArea,\n        postalCode: address.postalCode,\n        countryCode: address.countryCode,\n        phone: address.phoneNumber,\n        customFields: [],\n    };\n}\n\nexport interface GooglePayInitializer {\n    initialize(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean, publishableKey?: string): Promise<GooglePayPaymentDataRequestV1>;\n    teardown(): Promise<void>;\n    parseResponse(paymentData: any): Promise<TokenizePayload>;\n}\n","import { BillingAddressActionCreator } from '../../../billing';\nimport { BillingAddressUpdateRequestBody } from '../../../billing';\nimport CheckoutStore from '../../../checkout/checkout-store';\nimport InternalCheckoutSelectors from '../../../checkout/internal-checkout-selectors';\nimport {\n    InvalidArgumentError,\n    MissingDataError,\n    MissingDataErrorType,\n    NotInitializedErrorType,\n    StandardError\n} from '../../../common/error/errors/index';\nimport NotInitializedError from '../../../common/error/errors/not-initialized-error';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport {\n    OrderActionCreator,\n    OrderRequestBody\n} from '../../../order/index';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport ShippingStrategyActionCreator from '../../../shipping/shipping-strategy-action-creator';\nimport {\n    PaymentMethodActionCreator,\n} from '../../index';\nimport PaymentMethod from '../../payment-method';\nimport {\n    PaymentInitializeOptions,\n} from '../../payment-request-options';\n\nimport {\n    default as mapGooglePayAddressToRequestAddress,\n    ButtonColor,\n    ButtonType,\n    EnvironmentType,\n    GooglePaymentsError,\n    GooglePaymentData,\n    GooglePayAddress,\n    GooglePayClient,\n    GooglePayInitializer,\n    GooglePayIsReadyToPayResponse,\n    GooglePayPaymentDataRequestV1,\n    GooglePayPaymentOptions, GooglePaySDK,\n    PaymentSuccessPayload,\n    TokenizePayload\n} from './googlepay';\nimport GooglePayPaymentInitializeOptions from './googlepay-initialize-options';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default class GooglePayPaymentProcessor {\n    private _googlePaymentsClient!: GooglePayClient;\n    private _methodId!: string;\n    private _paymentMethod?: PaymentMethod;\n    private _walletButton?: HTMLElement;\n    private _googlePaymentDataRequest!: GooglePayPaymentDataRequestV1;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _googlePayInitializer: GooglePayInitializer,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _shippingStrategyActionCreator: ShippingStrategyActionCreator\n    ) { }\n\n    initialize(methodId: string): Promise<void> {\n        this._methodId = methodId;\n\n        return this._configureWallet();\n    }\n\n    deinitialize(): Promise<void> {\n        return this._googlePayInitializer.teardown();\n    }\n\n    createButton(): HTMLElement {\n        return this._googlePaymentsClient.createButton({\n            buttonColor: ButtonColor.default,\n            buttonType: ButtonType.short,\n            // onClick: this._handleWalletButtonClick,\n        });\n    }\n\n    updateShippingAddress(shippingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors | void> {\n        if (!this._methodId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        if (!shippingAddress) {\n            return Promise.resolve();\n        }\n\n        return this._store.dispatch(\n            this._shippingStrategyActionCreator.updateAddress(mapGooglePayAddressToRequestAddress(shippingAddress))\n        ).then(() => this._store.getState());\n    }\n\n    updateBillingAddress(billingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors> {\n        if (!this._methodId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        const remoteBillingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        if (!remoteBillingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePayAddressMapped: BillingAddressUpdateRequestBody = this._mapGooglePayAddressToRequestAddress(billingAddress, remoteBillingAddress.id);\n\n        return this._store.dispatch(\n            this._billingAddressActionCreator.updateAddress(googlePayAddressMapped)\n        );\n    }\n\n    displayWallet(): Promise<GooglePaymentData> {\n        return new Promise((resolve, reject) => {\n            if (!this._googlePaymentsClient && !this._googlePaymentDataRequest) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            this._googlePaymentsClient.isReadyToPay({\n                allowedPaymentMethods: this._googlePaymentDataRequest.allowedPaymentMethods,\n            }).then( (response: GooglePayIsReadyToPayResponse) => {\n                if (response) {\n                    this._googlePaymentsClient.loadPaymentData(this._googlePaymentDataRequest)\n                        .then((paymentData: GooglePaymentData) => {\n                            resolve(paymentData);\n                        }).catch((err: GooglePaymentsError) => {\n                            reject(new Error(err.statusCode));\n                        });\n                }\n            });\n        });\n    }\n\n    parseResponse(paymentData: any): Promise<TokenizePayload> {\n        return this._googlePayInitializer.parseResponse(paymentData);\n    }\n\n    private _configureWallet(): Promise<void> {\n        if (!this._methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n                const checkout = state.checkout.getCheckout();\n                const hasShippingAddress = !!state.shippingAddress.getShippingAddress();\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                this._paymentMethod = paymentMethod;\n                const testMode = paymentMethod.config.testMode;\n\n                return Promise.all([\n                    this._googlePayScriptLoader.load(),\n                    this._googlePayInitializer.initialize(checkout, paymentMethod, hasShippingAddress),\n                ])\n                    .then(([googlePay, googlePayPaymentDataRequest]) => {\n                        this._googlePaymentsClient = this._getGooglePaymentsClient(googlePay, testMode);\n                        this._googlePaymentDataRequest = googlePayPaymentDataRequest;\n                    })\n                    .catch((error: Error) => {\n                        this._handleError(error);\n                    });\n            });\n    }\n\n    private _getGooglePaymentsClient(google: GooglePaySDK, testMode: boolean | undefined): GooglePayClient {\n        let environment: EnvironmentType;\n        testMode = true; // TODO: remove when push this code to final review\n        if (testMode === undefined) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!testMode) {\n            environment = 'PRODUCTION';\n        } else {\n            environment = 'TEST';\n        }\n\n        const options: GooglePayPaymentOptions = { environment };\n\n        return new google.payments.api.PaymentsClient(options) as GooglePayClient;\n    }\n\n    private _handleError(error: Error): never {\n        throw new StandardError(error.message);\n    }\n\n    private _mapGooglePayAddressToRequestAddress(address: GooglePayAddress, id: string): BillingAddressUpdateRequestBody {\n        return {\n            id,\n            firstName: address.name.split(' ').slice(0, -1).join(' '),\n            lastName: address.name.split(' ').slice(-1).join(' '),\n            company: address.companyName,\n            address1: address.address1,\n            address2: address.address2 + address.address3 + address.address4 + address.address5,\n            city: address.locality,\n            stateOrProvince: address.administrativeArea,\n            stateOrProvinceCode: address.administrativeArea,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phoneNumber,\n            customFields: [],\n        };\n    }\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { AmountTransformer, LineItem } from '../cart';\nimport { mapToInternalLineItems } from '../cart';\nimport { Checkout } from '../checkout';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInteralOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInteralOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && lineItem.socialMedia.find(item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { AddressRequestBody } from '../address';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport { ShippingInitializeOptions, ShippingRequestOptions } from './shipping-request-options';\nimport {\n    ShippingStrategyActionType,\n    ShippingStrategyDeinitializeAction,\n    ShippingStrategyInitializeAction,\n    ShippingStrategySelectOptionAction,\n    ShippingStrategyUpdateAddressAction,\n} from './shipping-strategy-actions';\nimport { ShippingStrategy } from './strategies';\n\nexport default class ShippingStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<ShippingStrategy>\n    ) {}\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): ThunkAction<ShippingStrategyUpdateAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyUpdateAddressAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .updateAddress(address, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId }));\n                });\n        });\n    }\n\n    selectOption(shippingOptionId: string, options?: ShippingRequestOptions): ThunkAction<ShippingStrategySelectOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategySelectOptionAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.SelectOptionRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .selectOption(shippingOptionId, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.SelectOptionSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.SelectOptionFailed, error, { methodId }));\n                });\n        });\n    }\n\n    initialize(options?: ShippingInitializeOptions): ThunkAction<ShippingStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyInitializeAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n            const mergedOptions = { ...options, methodId };\n\n            observer.next(createAction(ShippingStrategyActionType.InitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(mergedOptions)\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.InitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.InitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    deinitialize(options?: ShippingRequestOptions): ThunkAction<ShippingStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyDeinitializeAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.DeinitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize({ ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.DeinitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.DeinitializeFailed, error, { methodId }));\n                });\n        });\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\nexport default class UnrecoverableError extends RequestError {\n    constructor(response: Response, message?: string) {\n        super(response, message || 'An unexpected error has occurred. The checkout process cannot continue as a result.');\n\n        this.type = 'unrecoverable';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { last } from 'lodash';\n\nimport ErrorResponseBody from './error-response-body';\nimport { RequestError, TimeoutError } from './errors';\n\nexport default class RequestErrorFactory {\n    private _factoryMethods: { [key: string]: ErrorFactoryMethod } = {};\n\n    constructor() {\n        this.register('default', (response, message) => new RequestError(response, message));\n        this.register('timeout', response => new TimeoutError(response));\n    }\n\n    register(type: string, factoryMethod: ErrorFactoryMethod): void {\n        this._factoryMethods[type] = factoryMethod;\n    }\n\n    createError(response: Response, message?: string): Error {\n        const factoryMethod = this._factoryMethods[this._getType(response)] || this._factoryMethods.default;\n\n        return factoryMethod(response, message);\n    }\n\n    private _getType(response: Response<ErrorResponseBody>): string {\n        if (response.status === 0) {\n            return 'timeout';\n        }\n\n        if (response.body && typeof response.body.type === 'string') {\n            return last(response.body.type.split('/')) || 'default';\n        }\n\n        const error = last(response.body && response.body.errors);\n\n        return error && error.code ? error.code : 'default';\n    }\n}\n\nexport type ErrorFactoryMethod = (response: Response, message?: string) => Error;\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport BillingAddress from './billing-address';\nimport { BillingAddressAction, BillingAddressActionType } from './billing-address-actions';\nimport BillingAddressState, { BillingAddressErrorsState, BillingAddressStatusesState } from './billing-address-state';\n\nconst DEFAULT_STATE: BillingAddressState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function billingAddressReducer(\n    state: BillingAddressState = DEFAULT_STATE,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressState {\n    const reducer = combineReducers<BillingAddressState, CheckoutAction | BillingAddressAction | OrderAction>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: BillingAddress | undefined,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddress | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return action.payload ? action.payload.billingAddress : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: BillingAddressErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...errors, loadError: action.payload };\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return { ...errors, updateError: undefined };\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n        return { ...errors, updateError: action.payload };\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return { ...errors, continueAsGuestError: undefined };\n\n    case BillingAddressActionType.ContinueAsGuestFailed:\n        return { ...errors, continueAsGuestError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: BillingAddressStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return { ...statuses, isLoading: true };\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...statuses, isLoading: false };\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n        return { ...statuses, isUpdating: true };\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return { ...statuses, isUpdating: false };\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n        return { ...statuses, isContinuingAsGuest: true };\n\n    case BillingAddressActionType.ContinueAsGuestFailed:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return { ...statuses, isContinuingAsGuest: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport Config from './config';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\nimport ConfigState, { ConfigErrorsState, ConfigStatusesState } from './config-state';\n\nconst DEFAULT_STATE: ConfigState = {\n    meta: {},\n    errors: {},\n    statuses: {},\n};\n\nexport default function configReducer(\n    state: ConfigState = DEFAULT_STATE,\n    action: LoadConfigAction\n): ConfigState {\n    const reducer = combineReducers<ConfigState, LoadConfigAction>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Config | undefined,\n    action: LoadConfigAction\n): Config | undefined {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return action.payload ? action.payload : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConfigErrorsState = DEFAULT_STATE.errors,\n    action: LoadConfigAction\n): ConfigErrorsState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case ConfigActionType.LoadConfigFailed:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConfigStatusesState = DEFAULT_STATE.statuses,\n    action: LoadConfigAction\n): ConfigStatusesState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigRequested:\n        return { ...statuses, isLoading: true };\n\n    case ConfigActionType.LoadConfigSucceeded:\n    case ConfigActionType.LoadConfigFailed:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport Country from './country';\nimport * as actionTypes from './country-action-types';\nimport CountryState, { CountryErrorsState, CountryStatusesState } from './country-state';\n\nconst DEFAULT_STATE: CountryState = {\n    errors: {},\n    statuses: {},\n};\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action\n */\nexport default function countryReducer(state: CountryState = DEFAULT_STATE, action: Action): CountryState {\n    const reducer = combineReducers<CountryState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: Country[] | undefined, action: Action): Country[] | undefined {\n    switch (action.type) {\n    case actionTypes.LOAD_COUNTRIES_SUCCEEDED:\n        return action.payload || [];\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(errors: CountryErrorsState = DEFAULT_STATE.errors, action: Action): CountryErrorsState {\n    switch (action.type) {\n    case actionTypes.LOAD_COUNTRIES_REQUESTED:\n    case actionTypes.LOAD_COUNTRIES_SUCCEEDED:\n        return { ...errors, loadError: undefined };\n\n    case actionTypes.LOAD_COUNTRIES_FAILED:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(statuses: CountryStatusesState = DEFAULT_STATE.statuses, action: Action): CountryStatusesState {\n    switch (action.type) {\n    case actionTypes.LOAD_COUNTRIES_REQUESTED:\n        return { ...statuses, isLoading: true };\n\n    case actionTypes.LOAD_COUNTRIES_SUCCEEDED:\n    case actionTypes.LOAD_COUNTRIES_FAILED:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentAction, PaymentActionType } from './payment-actions';\nimport PaymentResponseBody from './payment-response-body';\nimport PaymentState from './payment-state';\n\nexport default function paymentReducer(state: PaymentState = {}, action: PaymentAction): PaymentState {\n    const reducer = combineReducers<PaymentState, PaymentAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: PaymentResponseBody | undefined, action: PaymentAction): PaymentResponseBody | undefined {\n    switch (action.type) {\n    case PaymentActionType.SubmitPaymentSucceeded:\n        return action.payload;\n\n    default:\n        return data;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { mergeOrPush } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport { PaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { PaymentMethodErrorsState, PaymentMethodStatusesState } from './payment-method-state';\n\nconst DEFAULT_STATE: PaymentMethodState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function paymentMethodReducer(\n    state: PaymentMethodState = DEFAULT_STATE,\n    action: Action\n): PaymentMethodState {\n    const reducer = combineReducers<PaymentMethodState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentMethod[] | undefined,\n    action: PaymentMethodAction\n): PaymentMethod[] | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return action.payload ?\n            mergeOrPush(data || [], action.payload, {\n                id: action.payload.id,\n                gateway: action.payload.gateway,\n            }) :\n            data;\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return action.payload ? action.payload : [];\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: PaymentMethodMeta | undefined,\n    action: PaymentMethodAction\n): PaymentMethodMeta | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return action.meta ? { ...meta, ...action.meta } : meta;\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: PaymentMethodErrorsState = DEFAULT_STATE.errors,\n    action: PaymentMethodAction\n): PaymentMethodErrorsState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return { ...errors, loadError: action.payload };\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return {\n            ...errors,\n            loadMethodId: undefined,\n            loadMethodError: undefined,\n        };\n\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return {\n            ...errors,\n            loadMethodId: action.meta.methodId,\n            loadMethodError: action.payload,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentMethodStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentMethodAction\n): PaymentMethodStatusesState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n        return { ...statuses, isLoading: true };\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return { ...statuses, isLoading: false };\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n        return {\n            ...statuses,\n            isLoadingMethod: true,\n            loadMethodId: action.meta.methodId,\n        };\n\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return {\n            ...statuses,\n            isLoadingMethod: false,\n            loadMethodId: undefined,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { assign, findIndex, isPlainObject, pickBy } from 'lodash';\n\nimport { PartialDeep } from '../types';\n\n/**\n * Push an item to an array if it doesn't exist in the array. Otherwise, merge\n * with the existing item in the array. This function always returns a new array.\n */\nexport default function mergeOrPush<T extends object>(\n    array: T[],\n    item: T,\n    predicate: ((item: T) => boolean) | PartialDeep<T>\n): T[] {\n    const index = findIndex(array, typeof predicate === 'object' ? pickBy(predicate) : predicate);\n    const newArray = [...array];\n\n    if (index === -1) {\n        newArray.push(item);\n    } else {\n        newArray[index] = isPlainObject(item) ? assign({}, array[index], item) : item;\n    }\n\n    return newArray;\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentStrategyAction, PaymentStrategyActionType } from './payment-strategy-actions';\nimport PaymentStrategyState, { DEFAULT_STATE, PaymentStrategyErrorsState, PaymentStrategyStatusesState } from './payment-strategy-state';\n\nexport default function paymentStrategyReducer(\n    state: PaymentStrategyState = DEFAULT_STATE,\n    action: PaymentStrategyAction\n): PaymentStrategyState {\n    const reducer = combineReducers<PaymentStrategyState, PaymentStrategyAction>({\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: PaymentStrategyErrorsState = DEFAULT_STATE.errors,\n    action: PaymentStrategyAction\n): PaymentStrategyErrorsState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.InitializeFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.ExecuteRequested:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return {\n            ...errors,\n            executeError: undefined,\n            executeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.ExecuteFailed:\n        return {\n            ...errors,\n            executeError: action.payload,\n            executeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.FinalizeRequested:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return {\n            ...errors,\n            finalizeError: undefined,\n            finalizeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.FinalizeFailed:\n        return {\n            ...errors,\n            finalizeError: action.payload,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n        return {\n            ...errors,\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return {\n            ...errors,\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentStrategyAction\n): PaymentStrategyStatusesState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.InitializeFailed:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n            initializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.ExecuteRequested:\n        return {\n            ...statuses,\n            isExecuting: true,\n            executeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.ExecuteFailed:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return {\n            ...statuses,\n            isExecuting: false,\n            executeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.FinalizeRequested:\n        return {\n            ...statuses,\n            isFinalizing: true,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.FinalizeFailed:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return {\n            ...statuses,\n            isFinalizing: false,\n            finalizeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    return {\n        ...statuses,\n        isWidgetInteracting: true,\n        widgetInteractionMethodId: action.meta.methodId,\n     };\n\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n     return {\n        ...statuses,\n        isWidgetInteracting: false,\n        widgetInteractionMethodId: undefined,\n     };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport * as actionTypes from './instrument-action-types';\n\nimport Instrument from './instrument';\nimport InstrumentState, { InstrumentErrorState, InstrumentMeta, InstrumentStatusState } from './instrument-state';\n\nconst DEFAULT_STATE = {\n    data: [],\n    errors: {},\n    statuses: {},\n};\n\nexport default function instrumentReducer(state: InstrumentState = DEFAULT_STATE, action: Action): InstrumentState {\n    const reducer = combineReducers<InstrumentState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: Instrument[] = DEFAULT_STATE.data, action: Action): Instrument[] {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n        return action.payload.vaultedInstruments || [];\n\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n        return data.filter(instrument =>\n            instrument.bigpayToken !== action.meta.instrumentId\n        );\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(meta: InstrumentMeta | undefined, action: Action): InstrumentMeta | undefined {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n        return { ...meta, ...action.meta };\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(errors: InstrumentErrorState = DEFAULT_STATE.errors, action: Action): InstrumentErrorState {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_REQUESTED:\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n        return { ...errors, loadError: undefined };\n\n    case actionTypes.DELETE_INSTRUMENT_REQUESTED:\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n        return {\n            ...errors,\n            deleteError: undefined,\n            failedInstrument: undefined,\n        };\n\n    case actionTypes.LOAD_INSTRUMENTS_FAILED:\n        return { ...errors, loadError: action.payload };\n\n    case actionTypes.DELETE_INSTRUMENT_FAILED:\n        return {\n            ...errors,\n            deleteError: action.payload,\n            failedInstrument: action.meta.instrumentId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(statuses: InstrumentStatusState = DEFAULT_STATE.statuses, action: Action): InstrumentStatusState {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_REQUESTED:\n        return { ...statuses, isLoading: true };\n\n    case actionTypes.DELETE_INSTRUMENT_REQUESTED:\n        return {\n            ...statuses,\n            isDeleting: true,\n            deletingInstrument: action.meta.instrumentId,\n        };\n\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n    case actionTypes.LOAD_INSTRUMENTS_FAILED:\n        return { ...statuses, isLoading: false };\n\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n    case actionTypes.DELETE_INSTRUMENT_FAILED:\n        return {\n            ...statuses,\n            isDeleting: false,\n            deletingInstrument: undefined,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { AfterpayRemoteCheckout, AmazonPayRemoteCheckout } from './methods';\n\nimport * as actionTypes from './remote-checkout-action-types';\nimport RemoteCheckoutState, { RemoteCheckoutStateData } from './remote-checkout-state';\n\nconst DEFAULT_STATE: RemoteCheckoutState = {\n    data: {},\n};\n\ntype RemoteCheckout = AfterpayRemoteCheckout | AmazonPayRemoteCheckout;\n\nexport default function remoteCheckoutReducer(\n    state: RemoteCheckoutState = DEFAULT_STATE,\n    action: Action\n): RemoteCheckoutState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<RemoteCheckoutState>({\n        data: combineReducers<RemoteCheckoutStateData>({\n            [action.meta.methodId]: dataReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: RemoteCheckout = {},\n    action: Action\n): RemoteCheckout {\n    switch (action.type) {\n    case actionTypes.INITIALIZE_REMOTE_BILLING_SUCCEEDED:\n        return { ...data, billing: action.payload.billing };\n\n    case actionTypes.INITIALIZE_REMOTE_SHIPPING_SUCCEEDED:\n        return { ...data, shipping: action.payload.shipping };\n\n    case actionTypes.LOAD_REMOTE_SETTINGS_SUCCEEDED:\n        return { ...data, settings: action.payload };\n\n    case actionTypes.UPDATE_REMOTE_CHECKOUT:\n        return { ...data, ...action.payload };\n\n    default:\n        return data;\n    }\n}\n","import { createDataStore } from '@bigcommerce/data-store';\n\nimport { createRequestErrorFactory } from '../common/error';\n\nimport CheckoutStore, { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport createActionTransformer from './create-action-transformer';\nimport createCheckoutStoreReducer from './create-checkout-store-reducer';\nimport createInternalCheckoutSelectors from './create-internal-checkout-selectors';\n\nexport default function createCheckoutStore(\n    initialState: Partial<CheckoutStoreState> = {},\n    options?: CheckoutStoreOptions\n): CheckoutStore {\n    const actionTransformer = createActionTransformer(createRequestErrorFactory());\n    const stateTransformer = (state: CheckoutStoreState) => createInternalCheckoutSelectors(state);\n\n    return createDataStore(\n        createCheckoutStoreReducer(),\n        initialState,\n        { actionTransformer, stateTransformer, ...options }\n    );\n}\n","import { PaymentMethodInvalidError } from '../../payment/errors';\n\nimport { UnrecoverableError } from './errors';\nimport RequestErrorFactory from './request-error-factory';\n\nexport default function createRequestErrorFactory(): RequestErrorFactory {\n    const factory = new RequestErrorFactory();\n\n    const unrecoverableErrorTypes = [\n        'catalog_only',\n        'empty_cart',\n        'invalid_order_id',\n        'invalid_order_token',\n        'missing_order_token',\n        'missing_provider_token',\n        'missing_shipping_method',\n        'order_completion_error',\n        'order_could_not_be_finalized_error',\n        'order_create_failed',\n        'provider_fatal_error',\n        'provider_setup_error',\n        'stock_too_low',\n    ];\n\n    unrecoverableErrorTypes.forEach(type => {\n        factory.register(type, (response, message) => new UnrecoverableError(response, message));\n    });\n\n    factory.register('invalid_payment_provider', response => new PaymentMethodInvalidError(response));\n    factory.register('payment_config_not_found', response => new PaymentMethodInvalidError(response));\n\n    return factory;\n}\n","import { combineReducers, Action, Reducer } from '@bigcommerce/data-store';\n\nimport { billingAddressReducer } from '../billing';\nimport { cartReducer } from '../cart';\nimport { checkoutButtonReducer } from '../checkout-buttons';\nimport { configReducer } from '../config';\nimport { couponReducer, giftCertificateReducer } from '../coupon';\nimport { customerReducer, customerStrategyReducer } from '../customer';\nimport { countryReducer } from '../geography';\nimport { orderReducer } from '../order';\nimport { paymentMethodReducer, paymentReducer, paymentStrategyReducer } from '../payment';\nimport { instrumentReducer } from '../payment/instrument';\nimport { remoteCheckoutReducer } from '../remote-checkout';\nimport { consignmentReducer, shippingCountryReducer, shippingStrategyReducer } from '../shipping';\n\nimport checkoutReducer from './checkout-reducer';\nimport CheckoutStoreState from './checkout-store-state';\n\nexport default function createCheckoutStoreReducer(): Reducer<CheckoutStoreState, Action> {\n    return combineReducers({\n        billingAddress: billingAddressReducer,\n        cart: cartReducer,\n        checkout: checkoutReducer,\n        checkoutButton: checkoutButtonReducer,\n        config: configReducer,\n        consignments: consignmentReducer,\n        countries: countryReducer,\n        coupons: couponReducer,\n        customer: customerReducer,\n        customerStrategies: customerStrategyReducer,\n        giftCertificates: giftCertificateReducer,\n        instruments: instrumentReducer,\n        order: orderReducer,\n        payment: paymentReducer,\n        paymentMethods: paymentMethodReducer,\n        paymentStrategies: paymentStrategyReducer,\n        remoteCheckout: remoteCheckoutReducer,\n        shippingCountries: shippingCountryReducer,\n        shippingStrategies: shippingStrategyReducer,\n    });\n}\n","import { isBillingAddressLike } from '../billing';\nimport BillingAddress from '../billing/billing-address';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\nexport default function mapToInternalAddress(address: Address | BillingAddress, consignments?: Consignment[]): InternalAddress {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import Address from '../address/address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","export default function isPrivate(key: string): boolean {\n    return `${key}`.indexOf('$$') === 0 || `${key}`.indexOf('_') === 0;\n}\n","import { selector } from '../common/selector';\n\nimport Cart from './cart';\nimport CartState from './cart-state';\n\n@selector\nexport default class CartSelector {\n    constructor(\n        private _cart: CartState\n    ) {}\n\n    getCart(): Cart | undefined {\n        return this._cart.data;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._cart.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._cart.statuses.isLoading;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Coupon from './coupon';\nimport CouponState from './coupon-state';\n\n@selector\nexport default class CouponSelector {\n    constructor(\n        private _coupon: CouponState\n    ) {}\n\n    getCoupons(): Coupon[] | undefined {\n        return this._coupon.data;\n    }\n\n    getRemoveError(): Error | undefined {\n        return this._coupon.errors.removeCouponError;\n    }\n\n    getApplyError(): Error | undefined {\n        return this._coupon.errors.applyCouponError;\n    }\n\n    isApplying(): boolean {\n        return !!this._coupon.statuses.isApplyingCoupon;\n    }\n\n    isRemoving(): boolean {\n        return !!this._coupon.statuses.isRemovingCoupon;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Customer from './customer';\nimport CustomerState from './customer-state';\n\n@selector\nexport default class CustomerSelector {\n    constructor(\n        private _customer: CustomerState\n    ) {}\n\n    getCustomer(): Customer | undefined {\n        return this._customer.data;\n    }\n}\n","import CustomerStrategyState from './customer-strategy-state';\n\nexport default class CustomerStrategySelector {\n    constructor(\n        private _customerStrategies: CustomerStrategyState\n    ) {}\n\n    getSignInError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.signInMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.signInError;\n    }\n\n    getSignOutError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.signOutMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.signOutError;\n    }\n\n    getInitializeError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.initializeMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.initializeError;\n    }\n\n    getWidgetInteractionError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.widgetInteractionMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.widgetInteractionError;\n    }\n\n    isSigningIn(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.signInMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isSigningIn;\n    }\n\n    isSigningOut(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.signOutMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isSigningOut;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.initializeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isInitializing;\n    }\n\n    isWidgetInteracting(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.widgetInteractionMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isWidgetInteracting;\n    }}\n","import { selector } from '../common/selector';\n\nimport GiftCertificate from './gift-certificate';\nimport GiftCertificateState from './gift-certificate-state';\n\n@selector\nexport default class GiftCertificateSelector {\n    constructor(\n        private _giftCertificate: GiftCertificateState\n    ) {}\n\n    getGiftCertificates(): GiftCertificate[] | undefined {\n        return this._giftCertificate.data;\n    }\n\n    getRemoveError(): Error | undefined {\n        return this._giftCertificate.errors.removeGiftCertificateError;\n    }\n\n    getApplyError(): Error | undefined {\n        return this._giftCertificate.errors.applyGiftCertificateError;\n    }\n\n    isApplying(): boolean {\n        return !!this._giftCertificate.statuses.isApplyingGiftCertificate;\n    }\n\n    isRemoving(): boolean {\n        return !!this._giftCertificate.statuses.isRemovingGiftCertificate;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport { Address } from '../address';\n\nimport ConsignmentState from './consignment-state';\n\n@selector\nexport default class ShippingAddressSelector {\n    constructor(\n        private _consignments: ConsignmentState\n    ) {}\n\n    getShippingAddress(): Address | undefined {\n        const consignments = this._consignments.data;\n\n        if (!consignments || !consignments[0]) {\n            return;\n        }\n\n        return consignments[0].shippingAddress;\n    }\n}\n","import { selector } from '../common/selector';\nimport { Country } from '../geography';\n\nimport ShippingCountryState from './shipping-country-state';\n\n@selector\nexport default class ShippingCountrySelector {\n    constructor(\n        private _shippingCountries: ShippingCountryState\n    ) {}\n\n    getShippingCountries(): Country[] | undefined {\n        return this._shippingCountries.data;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._shippingCountries.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._shippingCountries.statuses.isLoading;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport ShippingStrategyState from './shipping-strategy-state';\n\n@selector\nexport default class ShippingStrategySelector {\n    constructor(\n        private _shippingStrategies: ShippingStrategyState\n    ) {}\n\n    getUpdateAddressError(methodId?: string): Error | undefined {\n        if (methodId && this._shippingStrategies.errors.updateAddressMethodId !== methodId) {\n            return;\n        }\n\n        return this._shippingStrategies.errors.updateAddressError;\n    }\n\n    getSelectOptionError(methodId?: string): Error | undefined {\n        if (methodId && this._shippingStrategies.errors.selectOptionMethodId !== methodId) {\n            return;\n        }\n\n        return this._shippingStrategies.errors.selectOptionError;\n    }\n\n    getInitializeError(methodId?: string): Error | undefined {\n        if (methodId && this._shippingStrategies.errors.initializeMethodId !== methodId) {\n            return;\n        }\n\n        return this._shippingStrategies.errors.initializeError;\n    }\n\n    isUpdatingAddress(methodId?: string): boolean {\n        if (methodId && this._shippingStrategies.statuses.updateAddressMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._shippingStrategies.statuses.isUpdatingAddress;\n    }\n\n    isSelectingOption(methodId?: string): boolean {\n        if (methodId && this._shippingStrategies.statuses.selectOptionMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._shippingStrategies.statuses.isSelectingOption;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId && this._shippingStrategies.statuses.initializeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._shippingStrategies.statuses.isInitializing;\n    }\n}\n","import { find } from 'lodash';\n\nimport { isAddressEqual, AddressRequestBody } from '../address';\nimport { CartSelector, PhysicalItem } from '../cart';\nimport { selector } from '../common/selector';\n\nimport Consignment from './consignment';\nimport ConsignmentState from './consignment-state';\nimport ShippingOption from './shipping-option';\n\n@selector\nexport default class ConsignmentSelector {\n    constructor(\n        private _consignments: ConsignmentState,\n        private _cart: CartSelector\n    ) {}\n\n    getConsignments(): Consignment[] | undefined {\n        return this._consignments.data;\n    }\n\n    getConsignmentById(id: string): Consignment | undefined {\n        const consignments = this._consignments.data;\n\n        if (!consignments || !consignments.length) {\n            return;\n        }\n\n        return find(consignments, { id });\n    }\n\n    getConsignmentByAddress(address: AddressRequestBody): Consignment | undefined {\n        const consignments = this._consignments.data;\n\n        if (!consignments || !consignments.length) {\n            return;\n        }\n\n        return find(consignments, consignment =>\n            isAddressEqual(consignment.shippingAddress, address)\n        );\n    }\n\n    getShippingOption(): ShippingOption | undefined {\n        const consignments = this._consignments.data;\n\n        if (consignments && consignments.length) {\n            return consignments[0].selectedShippingOption;\n        }\n    }\n\n    getLoadError(): Error | undefined {\n        return this._consignments.errors.loadError;\n    }\n\n    getCreateError(): Error | undefined {\n        return this._consignments.errors.createError;\n    }\n\n    getLoadShippingOptionsError(): Error | undefined {\n        return this._consignments.errors.loadShippingOptionsError;\n    }\n\n    getUnassignedItems(): PhysicalItem[] {\n        const cart = this._cart.getCart();\n\n        if (!cart) {\n            return [];\n        }\n\n        const assignedLineItemIds = (this.getConsignments() || []).reduce(\n            (itemIds, consignment) => itemIds.concat(consignment.lineItemIds),\n            [] as string[]\n        );\n\n        return (cart.lineItems.physicalItems || []).filter(\n            item => assignedLineItemIds.indexOf(item.id as string) < 0\n        );\n    }\n\n    getUpdateError(consignmentId?: string): Error | undefined {\n        if (consignmentId) {\n            return this._consignments.errors.updateError[consignmentId];\n        }\n\n        return find(this._consignments.errors.updateError);\n    }\n\n    getDeleteError(consignmentId?: string): Error | undefined {\n        if (consignmentId) {\n            return this._consignments.errors.deleteError[consignmentId];\n        }\n\n        return find(this._consignments.errors.deleteError);\n    }\n\n    getItemAssignmentError(address: AddressRequestBody): Error | undefined {\n        const consignment = this.getConsignmentByAddress(address);\n\n        return consignment ? this.getUpdateError(consignment.id) : this.getCreateError();\n    }\n\n    getUpdateShippingOptionError(consignmentId?: string): Error | undefined {\n        if (consignmentId) {\n            return this._consignments.errors.updateShippingOptionError[consignmentId];\n        }\n\n        return find(this._consignments.errors.updateShippingOptionError);\n    }\n\n    isLoading(): boolean {\n        return this._consignments.statuses.isLoading === true;\n    }\n\n    isLoadingShippingOptions(): boolean {\n        return this._consignments.statuses.isLoadingShippingOptions === true;\n    }\n\n    isCreating(): boolean {\n        return this._consignments.statuses.isCreating === true;\n    }\n\n    isUpdating(consignmentId?: string): boolean {\n        if (consignmentId) {\n            return this._consignments.statuses.isUpdating[consignmentId] === true;\n        }\n\n        return find(this._consignments.statuses.isUpdating) === true;\n    }\n\n    isDeleting(consignmentId?: string): boolean {\n        if (consignmentId) {\n            return this._consignments.statuses.isDeleting[consignmentId] === true;\n        }\n\n        return find(this._consignments.statuses.isDeleting) === true;\n    }\n\n    isAssigningItems(address: AddressRequestBody): boolean {\n        const consignment = this.getConsignmentByAddress(address);\n\n        return consignment ? this.isUpdating(consignment.id) : this.isCreating();\n    }\n\n    isUpdatingShippingOption(consignmentId?: string): boolean {\n        if (consignmentId) {\n            return this._consignments.statuses.isUpdatingShippingOption[consignmentId] === true;\n        }\n\n        return find(this._consignments.statuses.isUpdatingShippingOption) === true;\n    }\n}\n","import { identity, isEqual, pickBy } from 'lodash';\n\nimport Address from './address';\n\nexport default function isAddressEqual(addressA: Partial<Address>, addressB: Partial<Address>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<Address>): Partial<Address> {\n    return pickBy({\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.address1,\n        address2: address.address2,\n        city: address.city,\n        stateOrProvince: address.stateOrProvince,\n        countryCode: address.countryCode,\n        postalCode: address.postalCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    }, identity);\n}\n","import { BillingAddressSelector } from '../billing';\nimport { selector } from '../common/selector';\nimport { CouponSelector } from '../coupon';\n\nimport Order from './order';\nimport OrderState, { OrderMetaState } from './order-state';\n\n@selector\nexport default class OrderSelector {\n    constructor(\n        private _order: OrderState,\n        private _billingAddress: BillingAddressSelector,\n        private _coupons: CouponSelector\n    ) {}\n\n    getOrder(): Order | undefined {\n        const { data } = this._order;\n        const billingAddress = this._billingAddress.getBillingAddress();\n        const coupons = this._coupons.getCoupons() || [];\n\n        if (!data || !billingAddress) {\n            return;\n        }\n\n        return {\n            ...data,\n            billingAddress,\n            coupons,\n        };\n    }\n\n    getOrderMeta(): OrderMetaState | undefined {\n        return this._order.meta;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._order.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._order.statuses.isLoading;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing/billing-address-actions';\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { CouponAction, CouponActionType } from '../coupon/coupon-actions';\nimport { GiftCertificateAction, GiftCertificateActionType } from '../coupon/gift-certificate-actions';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping/consignment-actions';\n\nimport Cart from './cart';\nimport CartState, { CartErrorsState, CartStatusesState } from './cart-state';\n\nconst DEFAULT_STATE: CartState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function cartReducer(\n    state: CartState = DEFAULT_STATE,\n    action: Action\n): CartState {\n    const reducer = combineReducers<CartState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Cart | undefined,\n    action: BillingAddressAction | CheckoutAction | ConsignmentAction | CouponAction | GiftCertificateAction\n): Cart | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return action.payload ? { ...data, ...action.payload.cart } : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CartStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction\n): CartStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return { ...statuses, isLoading: true };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n\nfunction errorsReducer(\n    errors: CartErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction\n): CartErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { CustomerAction, CustomerActionType } from '../customer';\n\nimport Consignment from './consignment';\nimport { ConsignmentAction, ConsignmentActionType } from './consignment-actions';\nimport ConsignmentState, { ConsignmentErrorsState, ConsignmentStatusesState } from './consignment-state';\n\nconst DEFAULT_STATE: ConsignmentState = {\n    errors: {\n        updateShippingOptionError: {},\n        updateError: {},\n        deleteError: {},\n    },\n    statuses: {\n        isUpdating: {},\n        isUpdatingShippingOption: {},\n        isDeleting: {},\n    },\n};\n\nexport default function consignmentReducer(\n    state: ConsignmentState = DEFAULT_STATE,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentState {\n    const reducer = combineReducers<ConsignmentState, ConsignmentAction | CheckoutAction>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Consignment[] | undefined,\n    action: ConsignmentAction | CheckoutAction | CustomerAction\n): Consignment[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        return action.payload ? action.payload.consignments : data;\n\n    case CustomerActionType.SignOutCustomerSucceeded:\n        return [];\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConsignmentErrorsState = DEFAULT_STATE.errors,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return { ...errors, loadError: undefined };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return { ...errors, loadError: action.payload };\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n        return { ...errors, createError: undefined };\n\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return { ...errors, createError: action.payload };\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            errors.updateError[action.meta.id] = undefined;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            errors.updateError[action.meta.id] = action.payload;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            errors.deleteError[action.meta.id] = undefined;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            errors.deleteError[action.meta.id] = action.payload;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        if (action.meta) {\n            errors.updateShippingOptionError[action.meta.id] = undefined;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            errors.updateShippingOptionError[action.meta.id] = action.payload;\n        }\n\n        return errors;\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConsignmentStatusesState = DEFAULT_STATE.statuses,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return { ...statuses, isLoading: true };\n\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return { ...statuses, isLoadingShippingOptions: true };\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...statuses, isLoading: false };\n\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return { ...statuses, isLoadingShippingOptions: false };\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n        return { ...statuses, isCreating: true };\n\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return { ...statuses, isCreating: false };\n\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            statuses.isUpdating[action.meta.id] = true;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            statuses.isUpdating[action.meta.id] = false;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            statuses.isDeleting[action.meta.id] = true;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            statuses.isDeleting[action.meta.id] = false;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n        if (action.meta) {\n            statuses.isUpdatingShippingOption[action.meta.id] = true;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            statuses.isUpdatingShippingOption[action.meta.id] = false;\n        }\n\n        return statuses;\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport Coupon from './coupon';\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport CouponState, { CouponErrorsState, CouponStatusesState } from './coupon-state';\n\nconst DEFAULT_STATE: CouponState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function couponReducer(\n    state: CouponState = DEFAULT_STATE,\n    action: CouponAction | CheckoutAction | OrderAction\n): CouponState {\n    const reducer = combineReducers<CouponState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Coupon[] | undefined,\n    action: CouponAction | CheckoutAction | OrderAction\n): Coupon[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return action.payload ? action.payload.coupons : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CouponErrorsState = {},\n    action: CouponAction\n): CouponErrorsState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n    case CouponActionType.ApplyCouponSucceeded:\n        return { ...errors, applyCouponError: undefined };\n\n    case CouponActionType.ApplyCouponFailed:\n        return { ...errors, applyCouponError: action.payload };\n\n    case CouponActionType.RemoveCouponRequested:\n    case CouponActionType.RemoveCouponSucceeded:\n        return { ...errors, removeCouponError: undefined };\n\n    case CouponActionType.RemoveCouponFailed:\n        return { ...errors, removeCouponError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CouponStatusesState = {},\n    action: CouponAction\n): CouponStatusesState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n        return { ...statuses, isApplyingCoupon: true };\n\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.ApplyCouponFailed:\n        return { ...statuses, isApplyingCoupon: false };\n\n    case CouponActionType.RemoveCouponRequested:\n        return { ...statuses, isRemovingCoupon: true };\n\n    case CouponActionType.RemoveCouponSucceeded:\n    case CouponActionType.RemoveCouponFailed:\n        return { ...statuses, isRemovingCoupon: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\n\nimport Customer from './customer';\nimport CustomerState from './customer-state';\n\nconst DEFAULT_STATE: CustomerState = {};\n\nexport default function customerReducer(\n    state: CustomerState = DEFAULT_STATE,\n    action: CheckoutAction\n): CustomerState {\n    const reducer = combineReducers<CustomerState, CheckoutAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Customer | undefined,\n    action: CheckoutAction\n): Customer | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return action.payload ? { ...data, ...action.payload.customer } : data;\n\n    default:\n        return data;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping/consignment-actions';\n\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport GiftCertificate from './gift-certificate';\nimport { GiftCertificateAction, GiftCertificateActionType } from './gift-certificate-actions';\nimport GiftCertificateState, { GiftCertificateErrorsState, GiftCertificateStatusesState } from './gift-certificate-state';\n\nconst DEFAULT_STATE: GiftCertificateState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function giftCertificateReducer(\n    state: GiftCertificateState = DEFAULT_STATE,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificateState {\n    const reducer = combineReducers<GiftCertificateState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: GiftCertificate[] | undefined,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificate[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return action.payload ? action.payload.giftCertificates : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: GiftCertificateErrorsState = DEFAULT_STATE.errors,\n    action: GiftCertificateAction\n): GiftCertificateErrorsState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n        return { ...errors, applyGiftCertificateError: undefined };\n\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return { ...errors, applyGiftCertificateError: action.payload };\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return { ...errors, removeGiftCertificateError: undefined };\n\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return { ...errors, removeGiftCertificateError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: GiftCertificateStatusesState = DEFAULT_STATE.statuses,\n    action: GiftCertificateAction\n): GiftCertificateStatusesState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n        return { ...statuses, isApplyingGiftCertificate: true };\n\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return { ...statuses, isApplyingGiftCertificate: false };\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n        return { ...statuses, isRemovingGiftCertificate: true };\n\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return { ...statuses, isRemovingGiftCertificate: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { OrderAction, OrderActionType } from './order-actions';\nimport OrderState, { OrderDataState, OrderErrorsState, OrderMetaState, OrderStatusesState } from './order-state';\n\nconst DEFAULT_STATE: OrderState = {\n    errors: {},\n    meta: {},\n    statuses: {},\n};\n\nexport default function orderReducer(\n    state: OrderState = DEFAULT_STATE,\n    action: OrderAction\n): OrderState {\n    const reducer = combineReducers<OrderState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: OrderDataState | undefined,\n    action: OrderAction\n): OrderDataState | undefined {\n    switch (action.type) {\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n        return action.payload\n            ? omit({ ...data, ...action.payload }, ['billingAddress', 'coupons'])\n            : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: OrderMetaState | undefined,\n    action: OrderAction\n): OrderMetaState | undefined {\n    switch (action.type) {\n    case OrderActionType.FinalizeOrderSucceeded:\n    case OrderActionType.SubmitOrderSucceeded:\n        return action.payload ? {\n            ...meta,\n            ...action.meta,\n            callbackUrl: action.payload.order.callbackUrl,\n            orderToken: action.payload.order.token,\n            payment: action.payload.order && action.payload.order.payment,\n        } : meta;\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: OrderErrorsState = DEFAULT_STATE.errors,\n    action: OrderAction\n): OrderErrorsState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return { ...errors, loadError: undefined };\n\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: OrderStatusesState = DEFAULT_STATE.statuses,\n    action: OrderAction\n): OrderStatusesState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return { ...statuses, isLoading: true };\n\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { Country } from '../geography';\n\nimport * as actionTypes from './shipping-country-action-types';\nimport ShippingCountryState, { ShippingCountryErrorsState, ShippingCountryStatusesState } from './shipping-country-state';\n\nconst DEFAULT_STATE: ShippingCountryState = {\n    errors: {},\n    statuses: {},\n};\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action\n */\nexport default function shippingCountryReducer(state: ShippingCountryState = DEFAULT_STATE, action: Action): ShippingCountryState {\n    const reducer = combineReducers<ShippingCountryState>({\n        errors: errorsReducer,\n        data: dataReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: Country[] | undefined, action: Action): Country[] | undefined {\n    switch (action.type) {\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_SUCCEEDED:\n        return action.payload || [];\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(errors: ShippingCountryErrorsState = DEFAULT_STATE.errors, action: Action): ShippingCountryErrorsState {\n    switch (action.type) {\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_REQUESTED:\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_SUCCEEDED:\n        return { ...errors, loadError: undefined };\n\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_FAILED:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(statuses: ShippingCountryStatusesState = DEFAULT_STATE.statuses, action: Action): ShippingCountryStatusesState {\n    switch (action.type) {\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_REQUESTED:\n        return { ...statuses, isLoading: true };\n\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_SUCCEEDED:\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_FAILED:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","module.exports = require(\"@bigcommerce/bigpay-client\");","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { InternalOrderResponseBody } from './internal-order-responses';\nimport Order from './order';\n\nexport default class OrderRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<Order>> {\n        const url = `/api/storefront/orders/${orderId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const params = {\n            include: [\n                'payments',\n                'lineItems.physicalItems.socialMedia',\n                'lineItems.physicalItems.options',\n                'lineItems.digitalItems.socialMedia',\n                'lineItems.digitalItems.options',\n            ].join(','),\n        };\n\n        return this._requestSender.get(url, {\n            params,\n            headers,\n            timeout,\n        });\n    }\n\n    submitOrder(body: InternalOrderRequestBody, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = '/internalapi/v1/checkout/order';\n\n        return this._requestSender.post(url, { body, timeout });\n    }\n\n    finalizeOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = `/internalapi/v1/checkout/order/${orderId}`;\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { CheckoutValidator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { FinalizeOrderAction, LoadOrderAction, LoadOrderPaymentsAction, OrderActionType, SubmitOrderAction } from './order-actions';\nimport OrderRequestBody from './order-request-body';\nimport OrderRequestSender from './order-request-sender';\n\nexport default class OrderActionCreator {\n    constructor(\n        private _orderRequestSender: OrderRequestSender,\n        private _checkoutValidator: CheckoutValidator\n    ) {}\n\n    loadOrder(orderId: number, options?: RequestOptions): Observable<LoadOrderAction> {\n        return new Observable((observer: Observer<LoadOrderAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderFailed, response));\n                });\n        });\n    }\n\n    // TODO: Remove when checkout does not contain unrelated order data.\n    loadOrderPayments(orderId: number, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        return new Observable((observer: Observer<LoadOrderPaymentsAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderPaymentsRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderPaymentsSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderPaymentsFailed, response));\n                });\n        });\n    }\n\n    loadCurrentOrder(options?: RequestOptions): ThunkAction<LoadOrderAction, InternalCheckoutSelectors> {\n        return store => defer(() => {\n            const orderId = this._getCurrentOrderId(store.getState());\n\n            if (!orderId) {\n                throw new MissingDataError(MissingDataErrorType.MissingOrderId);\n            }\n\n            return this.loadOrder(orderId, options);\n        });\n    }\n\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<SubmitOrderAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(OrderActionType.SubmitOrderRequested)),\n            defer(() => {\n                const state = store.getState();\n                const externalSource = state.config.getExternalSource();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                return from(\n                    this._checkoutValidator.validate(checkout, options)\n                        .then(() => this._orderRequestSender.submitOrder(this._mapToOrderRequestBody(payload, checkout.customerMessage, externalSource), options))\n                ).pipe(\n                    switchMap(response => concat(\n                        // TODO: Remove once we can submit orders using storefront API\n                        this.loadOrder(response.body.data.order.orderId, options),\n                        of(createAction(OrderActionType.SubmitOrderSucceeded, response.body.data, { ...response.body.meta, token: response.headers.token }))\n                    ))\n                );\n            }).pipe(\n                catchError(error => throwErrorAction(OrderActionType.SubmitOrderFailed, error))\n            )\n        );\n    }\n\n    finalizeOrder(orderId: number, options?: RequestOptions): Observable<FinalizeOrderAction | LoadOrderAction> {\n        return concat(\n            of(createAction(OrderActionType.FinalizeOrderRequested)),\n            from(this._orderRequestSender.finalizeOrder(orderId, options))\n                .pipe(\n                    switchMap(response => concat(\n                        this.loadOrder(orderId, options),\n                        of(createAction(OrderActionType.FinalizeOrderSucceeded, response.body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(OrderActionType.FinalizeOrderFailed, error))\n        );\n    }\n\n    private _getCurrentOrderId(state: InternalCheckoutSelectors): number | undefined {\n        const order = state.order.getOrder();\n        const checkout = state.checkout.getCheckout();\n\n        return (order && order.orderId) || (checkout && checkout.orderId);\n    }\n\n    private _mapToOrderRequestBody(payload: OrderRequestBody, customerMessage: string, externalSource?: string): InternalOrderRequestBody {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            return {\n                ...order,\n                customerMessage,\n                externalSource,\n            };\n        }\n\n        return {\n            ...order,\n            customerMessage,\n            externalSource,\n            payment: {\n                paymentData: payment.paymentData,\n                name: payment.methodId,\n                gateway: payment.gatewayId,\n            },\n        };\n    }\n}\n","module.exports = require(\"rxjs/observable/throw\");","import { isEqual } from 'lodash';\n\nimport { PartialDeep } from '../common/types';\n\nimport Cart from './cart';\n\nexport default class CartComparator {\n    isEqual(cartA: Cart, cartB: Cart): boolean {\n        return isEqual(\n            this._normalize(cartA),\n            this._normalize(cartB)\n        );\n    }\n\n    private _normalize(cart: Cart): PartialDeep<Cart> {\n        return {\n            cartAmount: cart.cartAmount,\n            currency: cart.currency,\n            id: cart.id,\n            lineItems: {\n                digitalItems: cart.lineItems.digitalItems.map(item => ({\n                    extendedSalePrice: item.extendedSalePrice,\n                    productId: item.productId,\n                    quantity: item.quantity,\n                    variantId: item.variantId,\n                })),\n                giftCertificates: cart.lineItems.giftCertificates.map(item => ({\n                    amount: item.amount,\n                    recipient: item.recipient,\n                })),\n                physicalItems: cart.lineItems.physicalItems.map(item => ({\n                    extendedSalePrice: item.extendedSalePrice,\n                    productId: item.productId,\n                    quantity: item.quantity,\n                    variantId: item.variantId,\n                    giftWrapping: item.giftWrapping,\n                })),\n            },\n        };\n    }\n}\n","import StandardError from './standard-error';\n\nexport enum NotInitializedErrorType {\n    CheckoutButtonNotInitialized,\n    CustomerNotInitialized,\n    PaymentNotInitialized,\n    ShippingNotInitialized,\n}\n\nexport default class NotInitializedError extends StandardError {\n    constructor(\n        public subtype: NotInitializedErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.type = 'not_initialized';\n    }\n}\n\nfunction getErrorMessage(type: NotInitializedErrorType): string {\n    switch (type) {\n    case NotInitializedErrorType.CustomerNotInitialized:\n        return 'Unable to proceed because the customer step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.PaymentNotInitialized:\n        return 'Unable to proceed because the payment step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.ShippingNotInitialized:\n        return 'Unable to proceed because the shipping step of checkout has not been initialized.';\n\n    default:\n        return 'Unable to proceed because the required component has not been initialized.';\n    }\n}\n","module.exports = require(\"rxjs/observable/merge\");","module.exports = require(\"rxjs/observable/empty\");","import { BillingAddress } from '../billing';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\nexport default function mapFromInternalAddress(address: InternalAddress): Address | BillingAddress {\n    return {\n        id: address.id,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.addressLine1,\n        address2: address.addressLine2,\n        city: address.city,\n        stateOrProvince: address.province,\n        stateOrProvinceCode: address.provinceCode,\n        postalCode: address.postCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import isPrivate from './is-private';\nimport omitDeep from './omit-deep';\n\nexport default function omitPrivate(object: any): any {\n    return omitDeep(object, (value: any, key: string) => isPrivate(key));\n}\n","import { omitBy, transform } from 'lodash';\n\nexport default function omitDeep(object: any, predicate: (value: any, key: string) => boolean): any {\n    if (Array.isArray(object)) {\n        return object.map(value => omitDeep(value, predicate));\n    }\n\n    if (typeof object === 'object') {\n        return transform(omitBy(object, predicate), (result, value, key) => {\n            result[key] = omitDeep(value, predicate);\n        }, {});\n    }\n\n    return object;\n}\n","import { isEqual } from 'lodash';\n\nimport { omitPrivate } from '../common/utility';\n\nimport InternalAddress from './internal-address';\n\nexport default function isInternalAddressEqual(addressA: Partial<InternalAddress>, addressB: Partial<InternalAddress>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<InternalAddress>): Partial<InternalAddress> {\n    const ignoredKeys = ['id', 'provinceCode'];\n\n    return (Object.keys(omitPrivate(address) || {}) as Array<keyof InternalAddress>)\n        .reduce(\n            (result, key) => ignoredKeys.indexOf(key) === -1 && address[key] ?\n                { ...result, [key]: address[key] } :\n                result,\n            {}\n        );\n}\n","export default interface CustomerStrategyState {\n    errors: CustomerStrategyErrorsState;\n    statuses: CustomerStrategyStatusesState;\n}\n\nexport interface CustomerStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    signInError?: Error;\n    signInMethodId?: string;\n    signOutError?: Error;\n    signOutMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface CustomerStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isSigningIn?: boolean;\n    isSigningOut?: boolean;\n    signInMethodId?: string;\n    signOutMethodId?: string;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: CustomerStrategyState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CustomerStrategyAction, CustomerStrategyActionType } from './customer-strategy-actions';\nimport CustomerStrategyState, { CustomerStrategyErrorsState, CustomerStrategyStatusesState, DEFAULT_STATE } from './customer-strategy-state';\n\nexport default function customerStrategyReducer(\n    state: CustomerStrategyState = DEFAULT_STATE,\n    action: CustomerStrategyAction\n): CustomerStrategyState {\n    const reducer = combineReducers<CustomerStrategyState, CustomerStrategyAction>({\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: CustomerStrategyErrorsState = DEFAULT_STATE.errors,\n    action: CustomerStrategyAction\n): CustomerStrategyErrorsState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.InitializeFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignInRequested:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return {\n            ...errors,\n            signInError: undefined,\n            signInMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignInFailed:\n        return {\n            ...errors,\n            signInError: action.payload,\n            signInMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignOutRequested:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return {\n            ...errors,\n            signOutError: undefined,\n            signOutMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignOutFailed:\n        return {\n            ...errors,\n            signOutError: action.payload,\n            signOutMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n        return {\n            ...errors,\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return {\n            ...errors,\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CustomerStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: CustomerStrategyAction\n): CustomerStrategyStatusesState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.InitializeFailed:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n            initializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignInRequested:\n        return {\n            ...statuses,\n            isSigningIn: true,\n            signInMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignInFailed:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return {\n            ...statuses,\n            isSigningIn: false,\n            signInMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignOutRequested:\n        return {\n            ...statuses,\n            isSigningOut: true,\n            signOutMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignOutFailed:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return {\n            ...statuses,\n            isSigningOut: false,\n            signOutMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n        return {\n            ...statuses,\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n         };\n\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n         return {\n            ...statuses,\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n         };\n\n    default:\n        return statuses;\n    }\n}\n","export default interface ShippingStrategyState {\n    errors: ShippingStrategyErrorsState;\n    statuses: ShippingStrategyStatusesState;\n}\n\nexport interface ShippingStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    updateAddressError?: Error;\n    updateAddressMethodId?: string;\n    selectOptionError?: Error;\n    selectOptionMethodId?: string;\n}\n\nexport interface ShippingStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isUpdatingAddress?: boolean;\n    isSelectingOption?: boolean;\n    updateAddressMethodId?: string;\n    selectOptionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: ShippingStrategyState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { ShippingStrategyAction, ShippingStrategyActionType } from './shipping-strategy-actions';\nimport ShippingStrategyState, { DEFAULT_STATE, ShippingStrategyErrorsState, ShippingStrategyStatusesState } from './shipping-strategy-state';\n\nexport default function shippingStrategyReducer(\n    state: ShippingStrategyState = DEFAULT_STATE,\n    action: ShippingStrategyAction\n): ShippingStrategyState {\n    const reducer = combineReducers<ShippingStrategyState, ShippingStrategyAction>({\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: ShippingStrategyErrorsState = DEFAULT_STATE.errors,\n    action: ShippingStrategyAction\n): ShippingStrategyErrorsState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.InitializeFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return {\n            ...errors,\n            updateAddressError: undefined,\n            updateAddressMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n        return {\n            ...errors,\n            updateAddressError: action.payload,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return {\n            ...errors,\n            selectOptionError: undefined,\n            selectOptionMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n        return {\n            ...errors,\n            selectOptionError: action.payload,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: ShippingStrategyAction\n): ShippingStrategyStatusesState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.InitializeFailed:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n            initializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n        return {\n            ...statuses,\n            isUpdatingAddress: true,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return {\n            ...statuses,\n            isUpdatingAddress: false,\n            updateAddressMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n        return {\n            ...statuses,\n            isSelectingOption: true,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return {\n            ...statuses,\n            isSelectingOption: false,\n            selectOptionMethodId: undefined,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { RequestError } from '../../common/error/errors';\n\nexport default class PaymentMethodInvalidError extends RequestError {\n    constructor(response?: Response) {\n        super(response, 'There is a problem processing your payment. Please try again later.');\n\n        this.type = 'payment_method_invalid';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { pick } from 'lodash';\nimport { concat } from 'rxjs/observable/concat';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { mapToInternalAddress } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { InvalidArgumentError, StandardError } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { mapToInternalOrder, OrderActionCreator } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument from './is-vaulted-instrument';\nimport Payment from './payment';\nimport { InitializeOffsitePaymentAction, PaymentActionType, SubmitPaymentAction } from './payment-actions';\nimport PaymentMethod from './payment-method';\nimport PaymentMethodSelector from './payment-method-selector';\nimport PaymentRequestBody from './payment-request-body';\nimport PaymentRequestSender from './payment-request-sender';\n\nexport default class PaymentActionCreator {\n    constructor(\n        private _paymentRequestSender: PaymentRequestSender,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    submitPayment(payment: Payment): ThunkAction<SubmitPaymentAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentActionType.SubmitPaymentRequested)),\n            from(this._paymentRequestSender.submitPayment(\n                this._getPaymentRequestBody(payment, store.getState())\n            ))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._orderActionCreator.loadCurrentOrder()(store),\n                        of(createAction(PaymentActionType.SubmitPaymentSucceeded, body))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentActionType.SubmitPaymentFailed, error))\n        );\n    }\n\n    initializeOffsitePayment(payment: Payment): ThunkAction<InitializeOffsitePaymentAction, InternalCheckoutSelectors> {\n        return store =>\n            Observable.create((observer: Observer<InitializeOffsitePaymentAction>) => {\n                observer.next(createAction(PaymentActionType.InitializeOffsitePaymentRequested));\n\n                return this._paymentRequestSender.initializeOffsitePayment(\n                    this._getPaymentRequestBody(payment, store.getState())\n                )\n                    .then(() => {\n                        observer.next(createAction(PaymentActionType.InitializeOffsitePaymentSucceeded));\n                        observer.complete();\n                    })\n                    .catch(() => {\n                        observer.error(createErrorAction(PaymentActionType.InitializeOffsitePaymentFailed));\n                    });\n            });\n    }\n\n    private _getPaymentRequestBody(payment: Payment, state: InternalCheckoutSelectors): PaymentRequestBody {\n        if (!payment.paymentData) {\n            throw new InvalidArgumentError('Unable to construct payment request because `payment.paymentData` is not provided.');\n        }\n\n        const billingAddress = state.billingAddress.getBillingAddress();\n        const checkout = state.checkout.getCheckout();\n        const customer = state.customer.getCustomer();\n        const order = state.order.getOrder();\n        const paymentMethod = this._getPaymentMethod(payment, state.paymentMethods);\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n        const consignments = state.consignments.getConsignments();\n        const shippingOption = state.consignments.getShippingOption();\n        const storeConfig = state.config.getStoreConfig();\n        const contextConfig = state.config.getContextConfig();\n        const instrumentMeta = state.instruments.getInstrumentsMeta();\n        const paymentMeta = state.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = state.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && isVaultedInstrument(payment.paymentData) ?\n            `${state.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            state.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new StandardError();\n        }\n\n        return {\n            authToken,\n            paymentMethod,\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _getPaymentMethod(payment: Payment, paymentMethodSelector: PaymentMethodSelector): PaymentMethod | undefined {\n        const paymentMethod = paymentMethodSelector.getPaymentMethod(payment.methodId, payment.gatewayId);\n\n        if (!paymentMethod) {\n            return;\n        }\n\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        return paymentMethod;\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload);\n        });\n    }\n\n    private _transformResponse(response: any): Response {\n        return {\n            headers: {},\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadPaymentMethodsAction, LoadPaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\n\nexport default class PaymentMethodActionCreator {\n    constructor(\n        private _requestSender: PaymentMethodRequestSender\n    ) {}\n\n    loadPaymentMethods(options?: RequestOptions): Observable<LoadPaymentMethodsAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodsAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsRequested));\n\n            this._requestSender.loadPaymentMethods(options)\n                .then(response => {\n                    const meta = {\n                        deviceSessionId: response.headers['x-device-session-id'],\n                        sessionHash: response.headers['x-session-hash'],\n                    };\n\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsSucceeded, response.body, meta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodsFailed, response));\n                });\n        });\n    }\n\n    loadPaymentMethod(methodId: string, options?: RequestOptions): Observable<LoadPaymentMethodAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodRequested, undefined, { methodId }));\n\n            this._requestSender.loadPaymentMethod(methodId, options)\n                .then(response => {\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodSucceeded, response.body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodFailed, response, { methodId }));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport PaymentMethod from './payment-method';\n\nexport default class PaymentMethodRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadPaymentMethods({ timeout }: RequestOptions = {}): Promise<Response<PaymentMethod[]>> {\n        const url = '/api/storefront/payments';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n\n    loadPaymentMethod(methodId: string, { timeout }: RequestOptions = {}): Promise<Response<PaymentMethod>> {\n        const url = `/api/storefront/payments/${methodId}`;\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { empty } from 'rxjs/observable/empty';\nimport { of } from 'rxjs/observable/of';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { LoadOrderPaymentsAction, OrderActionCreator, OrderRequestBody } from '../order';\nimport { OrderFinalizationNotRequiredError } from '../order/errors';\n\nimport Payment from './payment';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from './payment-request-options';\nimport {\n    PaymentStrategyActionType,\n    PaymentStrategyDeinitializeAction,\n    PaymentStrategyExecuteAction,\n    PaymentStrategyFinalizeAction,\n    PaymentStrategyInitializeAction,\n    PaymentStrategyWidgetAction,\n} from './payment-strategy-actions';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport { PaymentStrategy } from './strategies';\n\nexport default class PaymentStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: PaymentStrategyRegistry,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<PaymentStrategyExecuteAction, InternalCheckoutSelectors> {\n        return store => new Observable((observer: Observer<PaymentStrategyExecuteAction>) => {\n            const state = store.getState();\n            const { payment = {} as Payment, useStoreCredit } = payload;\n            const meta = { methodId: payment.methodId };\n\n            let strategy: PaymentStrategy;\n\n            if (state.payment.isPaymentDataRequired(useStoreCredit)) {\n                const method = state.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n\n                if (!method) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                strategy = this._strategyRegistry.getByMethod(method);\n            } else {\n                strategy = this._strategyRegistry.get('nopaymentdatarequired');\n            }\n\n            observer.next(createAction(PaymentStrategyActionType.ExecuteRequested, undefined, meta));\n\n            strategy\n                .execute(payload, { ...options, methodId: payment.methodId, gatewayId: payment.gatewayId })\n                .then(() => {\n                    observer.next(createAction(PaymentStrategyActionType.ExecuteSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(PaymentStrategyActionType.ExecuteFailed, error, meta));\n                });\n        });\n    }\n\n    finalize(options?: RequestOptions): ThunkAction<PaymentStrategyFinalizeAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentStrategyActionType.FinalizeRequested)),\n            this._loadOrderPaymentsIfNeeded(store, options),\n            defer(() => {\n                const state = store.getState();\n                const payment = state.payment.getPaymentId();\n\n                if (!payment) {\n                    throw new OrderFinalizationNotRequiredError();\n                }\n\n                const method = state.paymentMethods.getPaymentMethod(payment.providerId, payment.gatewayId);\n\n                if (!method) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                return this._strategyRegistry.getByMethod(method)\n                    .finalize({ ...options, methodId: method.id, gatewayId: method.gateway })\n                    .then(() => createAction(PaymentStrategyActionType.FinalizeSucceeded, undefined, { methodId: payment.providerId }));\n            })\n        ).pipe(\n            catchError(error => {\n                const state = store.getState();\n                const payment = state.payment.getPaymentId();\n\n                return throwErrorAction(PaymentStrategyActionType.FinalizeFailed, error, { methodId: payment && payment.providerId });\n            })\n        );\n    }\n\n    initialize(options: PaymentInitializeOptions): ThunkAction<PaymentStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<PaymentStrategyInitializeAction>) => {\n            const state = store.getState();\n            const { methodId, gatewayId } = options;\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            observer.next(createAction(PaymentStrategyActionType.InitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.getByMethod(method)\n                .initialize({ ...options, methodId, gatewayId })\n                .then(() => {\n                    observer.next(createAction(PaymentStrategyActionType.InitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(PaymentStrategyActionType.InitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    deinitialize(options: PaymentRequestOptions): ThunkAction<PaymentStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<PaymentStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const { methodId, gatewayId } = options;\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            observer.next(createAction(PaymentStrategyActionType.DeinitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.getByMethod(method)\n                .deinitialize({ ...options, methodId, gatewayId })\n                .then(() => {\n                    observer.next(createAction(PaymentStrategyActionType.DeinitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(PaymentStrategyActionType.DeinitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: PaymentRequestOptions): ThunkAction<PaymentStrategyWidgetAction> {\n        return store => Observable.create((observer: Observer<PaymentStrategyWidgetAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(PaymentStrategyActionType.WidgetInteractionStarted, undefined, meta));\n\n            method().then(() => {\n                observer.next(createAction(PaymentStrategyActionType.WidgetInteractionFinished, undefined, meta));\n                observer.complete();\n            })\n            .catch(error => {\n                observer.error(createErrorAction(PaymentStrategyActionType.WidgetInteractionFailed, error, meta));\n            });\n        });\n    }\n\n    private _loadOrderPaymentsIfNeeded(store: ReadableCheckoutStore, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        const state = store.getState();\n        const checkout = state.checkout.getCheckout();\n\n        if (checkout && checkout.orderId) {\n            return this._orderActionCreator.loadOrderPayments(checkout.orderId, options);\n        }\n\n        return empty();\n    }\n}\n","import { ReadableDataStore } from '@bigcommerce/data-store';\nimport { some } from 'lodash';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { Registry } from '../common/registry';\nimport { RegistryOptions } from '../common/registry/registry';\n\nimport PaymentMethod from './payment-method';\nimport * as paymentMethodTypes from './payment-method-types';\nimport PaymentStrategy from './strategies/payment-strategy';\n\nexport default class PaymentStrategyRegistry extends Registry<PaymentStrategy> {\n    constructor(\n        private _store: ReadableDataStore<InternalCheckoutSelectors>,\n        options?: PaymentStrategyRegistryOptions\n    ) {\n        super(options);\n    }\n\n    getByMethod(paymentMethod?: PaymentMethod): PaymentStrategy {\n        if (!paymentMethod) {\n            return this.get();\n        }\n\n        const token = this._getToken(paymentMethod);\n        const cacheToken = paymentMethod.gateway || paymentMethod.id;\n\n        return this.get(token, cacheToken);\n    }\n\n    private _getToken(paymentMethod: PaymentMethod): string {\n        const methodId = paymentMethod.gateway || paymentMethod.id;\n\n        if (this.hasFactory(methodId)) {\n            return methodId;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.OFFLINE) {\n            return 'offline';\n        }\n\n        if (this._isLegacyMethod(paymentMethod)) {\n            return 'legacy';\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.HOSTED) {\n            return 'offsite';\n        }\n\n        return 'creditcard';\n    }\n\n    private _isLegacyMethod(paymentMethod: PaymentMethod): boolean {\n        const config = this._store.getState().config.getStoreConfig();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const { clientSidePaymentProviders } = config.paymentSettings;\n\n        if (!clientSidePaymentProviders || paymentMethod.gateway === 'adyen') {\n            return false;\n        }\n\n        return !some(clientSidePaymentProviders, id =>\n            paymentMethod.id === id || paymentMethod.gateway === id\n        );\n    }\n}\n\nexport interface PaymentStrategyRegistryOptions extends RegistryOptions {\n    clientSidePaymentProviders?: string[];\n}\n","import Checkout from '../../../checkout/checkout';\nimport {\n    MissingDataError,\n    MissingDataErrorType,\n    StandardError\n} from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\nimport BraintreeSDKCreator from '../braintree/braintree-sdk-creator';\n\nimport {\n    GooglePaymentData,\n    GooglePayDataRequestV1,\n    GooglePayInitializer,\n    GooglePayPaymentDataRequestV1,\n    TokenizePayload\n} from './googlepay';\nimport { GooglePayBraintreeSDK } from './index';\n\nexport default class GooglePayBraintreeInitializer implements GooglePayInitializer {\n    private _googlePaymentInstance!: GooglePayBraintreeSDK;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator\n    ) {}\n\n    initialize(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean): Promise<GooglePayPaymentDataRequestV1> {\n        if (!paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return this._braintreeSDKCreator.getGooglePaymentComponent()\n            .then(googleBraintreePaymentInstance => {\n                this._googlePaymentInstance = googleBraintreePaymentInstance;\n\n                return this._createGooglePayPayload(\n                    googleBraintreePaymentInstance,\n                    checkout,\n                    paymentMethod.initializationData.platformToken,\n                    hasShippingAddress);\n            }).catch((error: Error) => {\n                throw new StandardError(error.message);\n            });\n    }\n\n    teardown(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        return this._googlePaymentInstance.parseResponse(paymentData);\n    }\n\n    private _createGooglePayPayload(googleBraintreePaymentInstance: GooglePayBraintreeSDK,\n                                    checkout: Checkout,\n                                    platformToken: string,\n                                    hasShippingAddress: boolean): GooglePayPaymentDataRequestV1 {\n        if (!platformToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePaymentDataRequest: GooglePayDataRequestV1 = {\n            merchantInfo: {\n                authJwt: platformToken,\n            },\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: checkout.grandTotal.toString(),\n            },\n            cardRequirements: {\n                // We recommend collecting billing address information, at minimum\n                // billing postal code, and passing that billing postal code with all\n                // Google Pay transactions as a best practice.\n                billingAddressRequired: true,\n                billingAddressFormat: 'FULL',\n            },\n            shippingAddressRequired: !hasShippingAddress,\n            emailRequired: true,\n            phoneNumberRequired: true,\n        };\n\n        return googleBraintreePaymentInstance.createPaymentDataRequest(googlePaymentDataRequest) as GooglePayPaymentDataRequestV1;\n    }\n}\n","export const INTERNAL_USE_ONLY = 'This API endpoint is for internal use only and may change in the future';\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class TimeoutError extends RequestError {\n    constructor(response?: Response) {\n        super(response, 'The request has timed out or aborted.');\n\n        this.type = 'timeout';\n    }\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nexport default function bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nexport default function bindDecorator<T extends Constructor<object>>(target: T): T;\nexport default function bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this);\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","/// <reference path=\"../payment/bigpay-client.d.ts\" />\nimport { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { CheckoutStore } from '../checkout';\n\nexport default function createPaymentClient(store: CheckoutStore) {\n    const paymentClient = createBigpayClient();\n\n    store.subscribe(\n        state => {\n            const config = state.config.getStoreConfig();\n\n            if (config) {\n                paymentClient.setHost(config.paymentSettings.bigpayBaseUrl);\n            }\n        },\n        state => state.config.getStoreConfig()\n    );\n\n    return paymentClient;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { ConfigRequestSender } from '.';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\n\nexport default class ConfigActionCreator {\n    constructor(\n        private _configRequestSender: ConfigRequestSender\n    ) {}\n\n    loadConfig(options?: RequestOptions): ThunkAction<LoadConfigAction> {\n        return store => Observable.create((observer: Observer<LoadConfigAction>) => {\n            const state = store.getState();\n            const config = state.config.getConfig();\n\n            if (config) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ConfigActionType.LoadConfigRequested));\n\n            this._configRequestSender.loadConfig(options)\n                .then(response => {\n                    observer.next(createAction(ConfigActionType.LoadConfigSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConfigActionType.LoadConfigFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport Config from './config';\n\nexport default class ConfigRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadConfig({ timeout }: RequestOptions = {}): Promise<Response<Config>> {\n        const url = '/api/storefront/checkout-settings';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentMethod,\n}\n\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { createErrorAction, Action } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { of } from 'rxjs/observable/of';\nimport { _throw } from 'rxjs/observable/throw';\nimport { Observable } from 'rxjs/Observable';\n\nexport default function throwErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    error?: TPayload,\n    meta?: TMeta\n): Observable<Action<TPayload, TMeta, TType>> {\n    if (isErrorAction(error)) {\n        return concat(of(error), _throw(createErrorAction(type, error.payload, meta)));\n    }\n\n    return _throw(createErrorAction(type, error, meta));\n}\n\nfunction isErrorAction(action: any): action is Action {\n    return action && action.type && action.error;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Response } from '@bigcommerce/request-sender';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { Checkout, InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType, StandardError } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { GuestCredentials } from '../customer';\n\nimport { BillingAddressRequestSender } from '.';\nimport { BillingAddressUpdateRequestBody } from './billing-address';\nimport { BillingAddressActionType, ContinueAsGuestAction, UpdateBillingAddressAction } from './billing-address-actions';\n\nexport default class BillingAddressActionCreator {\n    constructor(\n        private _requestSender: BillingAddressRequestSender\n    ) {}\n\n    continueAsGuest(\n        credentials: GuestCredentials,\n        options?: RequestOptions\n    ): ThunkAction<ContinueAsGuestAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ContinueAsGuestAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const customer = state.customer.getCustomer();\n\n            if (customer && !customer.isGuest) {\n                throw new StandardError('Cannot continue as guest: customer is logged in.');\n            }\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            let billingAddressRequestBody;\n\n            if (!billingAddress) {\n                billingAddressRequestBody = credentials;\n            } else {\n                const { country, ...existingBillingAddressRequestBody } = billingAddress;\n\n                billingAddressRequestBody = {\n                    ...existingBillingAddressRequestBody,\n                    ...credentials,\n                };\n            }\n\n            observer.next(createAction(BillingAddressActionType.ContinueAsGuestRequested));\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.ContinueAsGuestSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.ContinueAsGuestFailed, response));\n                });\n        });\n    }\n\n    updateAddress(\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): ThunkAction<UpdateBillingAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateBillingAddressAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(BillingAddressActionType.UpdateBillingAddressRequested));\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            // If email is not present in the address provided by the client, then\n            // fall back to the stored email as it could have been set separately\n            // using a convenience method. We can't rely on billingAddress having\n            // an ID to consider that there's a preexisting email, as billingAddress\n            // object from Order doesn't have an ID.\n            const billingAddressRequestBody = {\n                ...address,\n                email: typeof address.email === 'undefined' && billingAddress ? billingAddress.email : address.email,\n            };\n\n            if (billingAddress && billingAddress.id) {\n                billingAddressRequestBody.id = billingAddress.id;\n            }\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.UpdateBillingAddressSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.UpdateBillingAddressFailed, response));\n                });\n        });\n    }\n\n    private _createOrUpdateBillingAddress(\n        checkoutId: string,\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): Promise<Response<Checkout>> {\n        if (!address.id) {\n            return this._requestSender.createAddress(checkoutId, address, options);\n        }\n\n        return this._requestSender.updateAddress(checkoutId, address, options);\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../address';\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { BillingAddressUpdateRequestBody } from './billing-address';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class BillingAddressRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createAddress(checkoutId: string, address: Partial<AddressRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: address, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateAddress(checkoutId: string, address: Partial<BillingAddressUpdateRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = address;\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nexport default class Registry<T> {\n    private _factories: { [key: string]: Factory<T> };\n    private _instances: { [key: string]: T };\n    private _options: RegistryOptions;\n\n    constructor(options?: RegistryOptions) {\n        this._factories = {};\n        this._instances = {};\n        this._options = { defaultToken: 'default', ...options };\n    }\n\n    get(token: string = this._options.defaultToken, cacheToken: string = token): T {\n        try {\n            return this._getInstance(token, cacheToken);\n        } catch (error) {\n            return this._getInstance(this._options.defaultToken, cacheToken);\n        }\n    }\n\n    register(token: string, factory: Factory<T>): void {\n        if (this.hasFactory(token)) {\n            throw new InvalidArgumentError(`'${token}' is already registered.`);\n        }\n\n        this._factories[token] = factory;\n    }\n\n    hasFactory(token: string): boolean {\n        return !!this._factories[token];\n    }\n\n    hasInstance(token: string): boolean {\n        return !!this._instances[token];\n    }\n\n    private _getInstance(token: string, cacheToken: string): T {\n        if (!this.hasInstance(cacheToken)) {\n            const factory = this._factories[token];\n\n            if (!factory) {\n                throw new InvalidArgumentError(`'${token}' is not registered.`);\n            }\n\n            this._instances[cacheToken] = factory();\n        }\n\n        return this._instances[cacheToken];\n    }\n}\n\nexport type Factory<T> = () => T;\n\nexport interface RegistryOptions {\n    defaultToken: string;\n}\n","import StandardError from './standard-error';\n\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.type = 'invalid_argument';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class RemoteCheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    initializeBilling(methodName: string, params: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/billing`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializeShipping(methodName: string, params: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/shipping`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializePayment(methodName: string, params: InitializePaymentOptions, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/payment`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    loadSettings(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/settings`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    signOut(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/signout`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    generateToken({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout-token';\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    trackAuthorizationEvent({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout/events/shopper-checkout-service-provider-authorization-requested';\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n\nexport interface InitializePaymentOptions {\n    authorizationToken?: string;\n    customerMessage?: string;\n    referenceId?: string;\n    useStoreCredit?: boolean;\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport * as actionTypes from './remote-checkout-action-types';\nimport RemoteCheckoutRequestSender, { InitializePaymentOptions } from './remote-checkout-request-sender';\nimport { RemoteCheckoutStateData } from './remote-checkout-state';\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action<T>\n */\nexport default class RemoteCheckoutActionCreator {\n    constructor(\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender\n    ) {}\n\n    initializeBilling(methodId: string, params: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.INITIALIZE_REMOTE_BILLING_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeBilling(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(actionTypes.INITIALIZE_REMOTE_BILLING_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.INITIALIZE_REMOTE_BILLING_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    initializeShipping(methodId: string, params: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.INITIALIZE_REMOTE_SHIPPING_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeShipping(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(actionTypes.INITIALIZE_REMOTE_SHIPPING_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.INITIALIZE_REMOTE_SHIPPING_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    initializePayment(methodId: string, params: InitializePaymentOptions, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.INITIALIZE_REMOTE_PAYMENT_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializePayment(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(actionTypes.INITIALIZE_REMOTE_PAYMENT_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.INITIALIZE_REMOTE_PAYMENT_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    loadSettings(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.LOAD_REMOTE_SETTINGS_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.loadSettings(methodId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(actionTypes.LOAD_REMOTE_SETTINGS_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.LOAD_REMOTE_SETTINGS_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    signOut(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.SIGN_OUT_REMOTE_CUSTOMER_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.signOut(methodId, options)\n                .then(() => {\n                    observer.next(createAction(actionTypes.SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.SIGN_OUT_REMOTE_CUSTOMER_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    updateCheckout<K extends keyof RemoteCheckoutStateData>(methodId: K, data: Partial<RemoteCheckoutStateData[K]>): Action {\n        return createAction(actionTypes.UPDATE_REMOTE_CHECKOUT, data, { methodId });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayScriptLoader {\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadWidget(method: PaymentMethod, onPaymentReady?: () => void): Promise<Event> {\n        const {\n            config: { merchantId, testMode },\n            initializationData: { region = 'us' } = {},\n        } = method;\n\n        const url = 'https://' +\n            (region.toLowerCase() !== 'us' ? 'static-eu.' : 'static-na.') +\n            'payments-amazon.com/OffAmazonPayments/' +\n            `${region.toLowerCase()}/` +\n            (testMode ? 'sandbox/' : '') +\n            (region.toLowerCase() !== 'us' ? 'lpa/' : '') +\n            `js/Widgets.js?sellerId=${merchantId}`;\n\n        this._configureWidget(method, onPaymentReady);\n\n        return this._scriptLoader.loadScript(url);\n    }\n\n    private _configureWidget(method: PaymentMethod, onPaymentReady?: () => void): void {\n        const onLoginReady = () => {\n            if (!this._window.amazon) {\n                return;\n            }\n\n            this._window.amazon.Login.setClientId(method.initializationData.clientId);\n            this._window.amazon.Login.setUseCookie(true);\n        };\n\n        if (this._window.amazon && this._window.amazon.Login) {\n            onLoginReady();\n        } else {\n            this._window.onAmazonLoginReady = onLoginReady;\n        }\n\n        if (this._window.OffAmazonPayments && onPaymentReady) {\n            onPaymentReady();\n        } else {\n            this._window.onAmazonPaymentsReady = onPaymentReady;\n        }\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class OrderFinalizationNotRequiredError extends StandardError {\n    constructor() {\n        super('The current order does not need to be finalized at this stage.');\n\n        this.type = 'order_finalization_not_required';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class RemoteCheckoutSynchronizationError extends StandardError {\n    constructor(\n        public error?: Error\n    ) {\n        super('Unable to synchronize your checkout details with a third party provider. Please try again later.');\n\n        this.type = 'remote_checkout_synchronization';\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { StandardError } from '../../../common/error/errors';\n\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalScriptLoader {\n    private _window: PaypalHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadPaypal(): Promise<PaypalSDK> {\n        return this._scriptLoader\n            .loadScript('//www.paypalobjects.com/api/checkout.min.js')\n            .then(() => {\n                if (!this._window.paypal) {\n                    throw new StandardError();\n                }\n\n                return this._window.paypal;\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { StandardError } from '../../../common/error/errors/index';\n\nimport {\n    GooglePayHostWindow,\n    GooglePaySDK\n} from './googlepay';\n\nexport default class GooglePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GooglePayHostWindow = window\n    ) {}\n\n    load(): Promise<GooglePaySDK> {\n        return this._scriptLoader\n            .loadScript('https://pay.google.com/gp/p/js/pay.js')\n            .then(() => {\n                if (!this._window.google) {\n                    throw new StandardError();\n                }\n\n                return this._window.google;\n            });\n    }\n}\n"],"sourceRoot":""}