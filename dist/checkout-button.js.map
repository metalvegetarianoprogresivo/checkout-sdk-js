{"version":3,"sources":["webpack://checkoutKit/webpack/bootstrap","webpack://checkoutKit/external \"tslib\"","webpack://checkoutKit/external \"@bigcommerce/data-store\"","webpack://checkoutKit/external \"lodash\"","webpack://checkoutKit/./src/shipping/consignment-actions.ts","webpack://checkoutKit/external \"rxjs/Observable\"","webpack://checkoutKit/external \"rxjs/operators\"","webpack://checkoutKit/external \"rxjs/observable/concat\"","webpack://checkoutKit/external \"rxjs/observable/of\"","webpack://checkoutKit/./src/common/error/errors/standard-error.ts","webpack://checkoutKit/./src/common/utility/set-prototype-of.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-actions.ts","webpack://checkoutKit/./src/coupon/coupon-actions.ts","webpack://checkoutKit/./src/billing/billing-address-actions.ts","webpack://checkoutKit/./src/coupon/gift-certificate-actions.ts","webpack://checkoutKit/external \"rxjs/observable/defer\"","webpack://checkoutKit/./src/payment/payment-status-types.ts","webpack://checkoutKit/external \"rxjs/observable/from\"","webpack://checkoutKit/./src/checkout/checkout-actions.ts","webpack://checkoutKit/./src/order/order-actions.ts","webpack://checkoutKit/external \"@bigcommerce/script-loader\"","webpack://checkoutKit/./src/cart/errors/cart-changed-error.ts","webpack://checkoutKit/./src/checkout/checkout-validator.ts","webpack://checkoutKit/./src/common/error/errors/request-error.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-selector.ts","webpack://checkoutKit/./src/customer/customer-strategy-actions.ts","webpack://checkoutKit/./src/payment/payment-strategy-actions.ts","webpack://checkoutKit/./src/payment/payment-method-actions.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-action-types.ts","webpack://checkoutKit/./src/payment/instrument/instrument-action-types.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-actions.ts","webpack://checkoutKit/./src/common/http-request/content-type.ts","webpack://checkoutKit/./src/config/config-actions.ts","webpack://checkoutKit/./src/geography/country-action-types.ts","webpack://checkoutKit/./src/shipping/shipping-country-action-types.ts","webpack://checkoutKit/./src/payment/payment-strategy-state.ts","webpack://checkoutKit/./src/checkout/checkout-default-includes.ts","webpack://checkoutKit/./src/customer/customer-actions.ts","webpack://checkoutKit/./src/payment/payment-actions.ts","webpack://checkoutKit/external \"@bigcommerce/request-sender\"","webpack://checkoutKit/./src/payment/payment-method-types.ts","webpack://checkoutKit/./src/common/selector/cache-key-resolver.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-error-selector.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-status-selector.ts","webpack://checkoutKit/./src/checkout-buttons/create-checkout-button-selectors.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-initializer.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-strategy-action-creator.ts","webpack://checkoutKit/./src/checkout-buttons/strategies/checkout-button-strategy.ts","webpack://checkoutKit/./src/checkout-buttons/strategies/braintree-paypal-button-strategy.ts","webpack://checkoutKit/./src/checkout-buttons/strategies/googlepay/googlepay-braintree-button-strategy.ts","webpack://checkoutKit/./src/checkout-buttons/create-checkout-button-initializer.ts","webpack://checkoutKit/./src/checkout-buttons/create-checkout-button-registry.ts","webpack://checkoutKit/external \"@bigcommerce/form-poster\"","webpack://checkoutKit/./src/checkout/create-action-transformer.ts","webpack://checkoutKit/./src/checkout/checkout-selector.ts","webpack://checkoutKit/./src/checkout/checkout-reducer.ts","webpack://checkoutKit/./src/billing/billing-address-selector.ts","webpack://checkoutKit/./src/common/utility/create-freeze-proxy.ts","webpack://checkoutKit/./src/config/config-selector.ts","webpack://checkoutKit/./src/form/form-selector.ts","webpack://checkoutKit/./src/geography/country-selector.ts","webpack://checkoutKit/./src/payment/payment-selector.ts","webpack://checkoutKit/./src/payment/payment-method-selector.ts","webpack://checkoutKit/./src/payment/payment-strategy-selector.ts","webpack://checkoutKit/./src/payment/instrument/instrument-selector.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-selector.ts","webpack://checkoutKit/./src/checkout/create-internal-checkout-selectors.ts","webpack://checkoutKit/./src/checkout-buttons/checkout-button-reducer.ts","webpack://checkoutKit/./src/shipping/consignment-action-creator.ts","webpack://checkoutKit/./src/shipping/consignment-request-sender.ts","webpack://checkoutKit/./src/common/utility/is-equal.ts","webpack://checkoutKit/./src/common/selector/selector-decorator.ts","webpack://checkoutKit/./src/checkout/checkout-request-sender.ts","webpack://checkoutKit/./src/checkout/checkout-action-creator.ts","webpack://checkoutKit/./src/common/error/errors/unrecoverable-error.ts","webpack://checkoutKit/./src/common/error/request-error-factory.ts","webpack://checkoutKit/./src/billing/billing-address-reducer.ts","webpack://checkoutKit/./src/config/config-reducer.ts","webpack://checkoutKit/./src/geography/country-reducer.ts","webpack://checkoutKit/./src/payment/payment-reducer.ts","webpack://checkoutKit/./src/payment/payment-method-reducer.ts","webpack://checkoutKit/./src/common/utility/merge-or-push.ts","webpack://checkoutKit/./src/payment/payment-strategy-reducer.ts","webpack://checkoutKit/./src/payment/instrument/instrument-reducer.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-reducer.ts","webpack://checkoutKit/./src/checkout/create-checkout-store.ts","webpack://checkoutKit/./src/common/error/create-request-error-factory.ts","webpack://checkoutKit/./src/checkout/create-checkout-store-reducer.ts","webpack://checkoutKit/./src/common/utility/is-private.ts","webpack://checkoutKit/./src/cart/cart-selector.ts","webpack://checkoutKit/./src/coupon/coupon-selector.ts","webpack://checkoutKit/./src/customer/customer-selector.ts","webpack://checkoutKit/./src/customer/customer-strategy-selector.ts","webpack://checkoutKit/./src/coupon/gift-certificate-selector.ts","webpack://checkoutKit/./src/shipping/shipping-address-selector.ts","webpack://checkoutKit/./src/shipping/shipping-country-selector.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-selector.ts","webpack://checkoutKit/./src/shipping/consignment-selector.ts","webpack://checkoutKit/./src/address/is-address-equal.ts","webpack://checkoutKit/./src/order/order-selector.ts","webpack://checkoutKit/./src/cart/cart-reducer.ts","webpack://checkoutKit/./src/shipping/consignment-reducer.ts","webpack://checkoutKit/./src/coupon/coupon-reducer.ts","webpack://checkoutKit/./src/customer/customer-reducer.ts","webpack://checkoutKit/./src/coupon/gift-certificate-reducer.ts","webpack://checkoutKit/./src/order/order-reducer.ts","webpack://checkoutKit/./src/shipping/shipping-country-reducer.ts","webpack://checkoutKit/external \"rxjs/observable/throw\"","webpack://checkoutKit/./src/common/http-request/internal-api-headers.ts","webpack://checkoutKit/external \"@bigcommerce/bigpay-client\"","webpack://checkoutKit/external \"rxjs/observable/merge\"","webpack://checkoutKit/./src/order/order-request-sender.ts","webpack://checkoutKit/./src/order/order-action-creator.ts","webpack://checkoutKit/./src/cart/cart-comparator.ts","webpack://checkoutKit/./src/payment/strategies/braintree/braintree-script-loader.ts","webpack://checkoutKit/./src/payment/strategies/braintree/braintree-sdk-creator.ts","webpack://checkoutKit/./src/common/http-request/to-form-url-encoded.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-action-creator.ts","webpack://checkoutKit/./src/address/map-from-internal-address.ts","webpack://checkoutKit/./src/shipping/strategies/shipping-strategy.ts","webpack://checkoutKit/./src/shipping/strategies/amazon-pay-shipping-strategy.ts","webpack://checkoutKit/./src/shipping/strategies/default-shipping-strategy.ts","webpack://checkoutKit/./src/shipping/create-shipping-strategy-registry.ts","webpack://checkoutKit/./src/common/utility/omit-private.ts","webpack://checkoutKit/./src/common/utility/omit-deep.ts","webpack://checkoutKit/./src/address/is-internal-address-equal.ts","webpack://checkoutKit/./src/customer/customer-strategy-state.ts","webpack://checkoutKit/./src/customer/customer-strategy-reducer.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-state.ts","webpack://checkoutKit/./src/shipping/shipping-strategy-reducer.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay-payment-processor.ts","webpack://checkoutKit/./src/payment/errors/payment-method-invalid-error.ts","webpack://checkoutKit/./src/common/error/errors/timeout-error.ts","webpack://checkoutKit/./src/common/utility/bind-decorator.ts","webpack://checkoutKit/./src/payment/create-payment-client.ts","webpack://checkoutKit/./src/config/config-action-creator.ts","webpack://checkoutKit/./src/config/config-request-sender.ts","webpack://checkoutKit/./src/common/error/errors/missing-data-error.ts","webpack://checkoutKit/./src/common/error/throw-error-action.ts","webpack://checkoutKit/./src/common/error/errors/not-initialized-error.ts","webpack://checkoutKit/./src/billing/billing-address-action-creator.ts","webpack://checkoutKit/./src/billing/billing-address-request-sender.ts","webpack://checkoutKit/./src/common/registry/registry.ts","webpack://checkoutKit/./src/common/error/errors/invalid-argument-error.ts","webpack://checkoutKit/./src/payment/payment-method-action-creator.ts","webpack://checkoutKit/./src/payment/payment-method-request-sender.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-request-sender.ts","webpack://checkoutKit/./src/remote-checkout/remote-checkout-action-creator.ts","webpack://checkoutKit/./src/payment/strategies/amazon-pay/amazon-pay-script-loader.ts","webpack://checkoutKit/./src/remote-checkout/errors/remote-checkout-synchronization-error.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay-script-loader.ts","webpack://checkoutKit/./src/payment/strategies/googlepay/googlepay-braintree-initializer.ts","webpack://checkoutKit/./src/payment/payment-request-sender.ts","webpack://checkoutKit/./src/payment/strategies/paypal/paypal-script-loader.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","ConsignmentActionType","standard_error_StandardError","_super","StandardError","message","_this","this","type","setPrototypeOf","__proto__","_newTarget","Error","captureStackTrace","stack","external_tslib_","ShippingStrategyActionType","CouponActionType","BillingAddressActionType","GiftCertificateActionType","ACKNOWLEDGE","FINALIZE","CheckoutActionType","OrderActionType","CartChangedError","checkout_validator_CheckoutValidator","CheckoutValidator","_checkoutRequestSender","validate","checkout","options","missing_data_error","MissingCheckout","loadCheckout","id","then","response","comparator","cart_comparator","grandTotal","body","_compareCoupons","coupons","_compareGiftCertificates","giftCertificates","isEqual","cart","cart_changed_error","couponsA","couponsB","external_lodash_","giftCertificatesA","giftCertificatesB","DEFAULT_RESPONSE","headers","status","statusText","RequestError","_a","_b","_c","errors","Array","isArray","reduce","result","error","concat","join","joinErrors","detail","title","tslib__WEBPACK_IMPORTED_MODULE_0__","CheckoutButtonSelector","_checkoutButton","getState","isInitializing","methodId","method","statuses","lodash__WEBPACK_IMPORTED_MODULE_1__","isDeinitializing","getInitializeError","initializeError","getDeinitializeError","deinitializeError","_common_selector__WEBPACK_IMPORTED_MODULE_2__","CustomerStrategyActionType","PaymentStrategyActionType","PaymentMethodActionType","INITIALIZE_REMOTE_BILLING_REQUESTED","INITIALIZE_REMOTE_BILLING_SUCCEEDED","INITIALIZE_REMOTE_BILLING_FAILED","INITIALIZE_REMOTE_SHIPPING_REQUESTED","INITIALIZE_REMOTE_SHIPPING_SUCCEEDED","INITIALIZE_REMOTE_SHIPPING_FAILED","INITIALIZE_REMOTE_PAYMENT_REQUESTED","INITIALIZE_REMOTE_PAYMENT_SUCCEEDED","INITIALIZE_REMOTE_PAYMENT_FAILED","LOAD_REMOTE_SETTINGS_REQUESTED","LOAD_REMOTE_SETTINGS_SUCCEEDED","LOAD_REMOTE_SETTINGS_FAILED","SIGN_OUT_REMOTE_CUSTOMER_REQUESTED","SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED","SIGN_OUT_REMOTE_CUSTOMER_FAILED","UPDATE_REMOTE_CHECKOUT","LOAD_INSTRUMENTS_REQUESTED","LOAD_INSTRUMENTS_SUCCEEDED","LOAD_INSTRUMENTS_FAILED","DELETE_INSTRUMENT_REQUESTED","DELETE_INSTRUMENT_SUCCEEDED","DELETE_INSTRUMENT_FAILED","CheckoutButtonActionType","ContentType","__webpack_exports__","ConfigActionType","LOAD_COUNTRIES_REQUESTED","LOAD_COUNTRIES_SUCCEEDED","LOAD_COUNTRIES_FAILED","LOAD_SHIPPING_COUNTRIES_REQUESTED","LOAD_SHIPPING_COUNTRIES_SUCCEEDED","LOAD_SHIPPING_COUNTRIES_FAILED","DEFAULT_STATE","CustomerActionType","PaymentActionType","HOSTED","OFFLINE","CacheKeyResolver","_lastId","_maps","getKey","args","_i","arguments","length","_resolveMap","apply","index","map","parentMaps","cacheKey","usedCount","_generateKey","slice","getUsedCount","isMatched","parentMaps_1","maps","push","CheckoutButtonErrorSelector","selectors","checkoutButton","getInitializeButtonError","getDeinitializeButtonError","selector_decorator","CheckoutButtonStatusSelector","isInitializingButton","isDeinitializingButton","createCheckoutButtonSelectors","checkout_button_error_selector","checkout_button_status_selector","CheckoutButtonInitializer","_store","_buttonStrategyActionCreator","_state","subscribe","state","subscriber","filters","filter","initializeButton","action","initialize","dispatch","queueId","deinitializeButton","deinitialize","CheckoutButtonStrategyActionCreator","_registry","_paymentMethodActionCreator","meta","concat_","of_","data_store_","checkout_button_actions","InitializeButtonRequested","undefined","loadPaymentMethod","defer_","InitializeButtonSucceeded","pipe","operators_","throw_error_action","InitializeButtonFailed","DeinitializeButtonRequested","DeinitializeButtonSucceeded","DeinitializeButtonFailed","CheckoutButtonStrategy","_isInitialized","Promise","resolve","BraintreePaypalButtonStrategy","_checkoutActionCreator","_braintreeSDKCreator","_paypalScriptLoader","_formPoster","_offerCredit","paypalOptions","braintreepaypalcredit","braintreepaypal","paymentMethod","_paymentMethod","paymentMethods","getPaymentMethod","invalid_argument_error","clientToken","MissingPaymentMethod","all","getPaypalCheckout","loadPaypal","paypalCheckout","paypal","_paypalCheckout","Button","render","env","config","testMode","commit","shouldProcessPayment","style","shape","label","payment","_setupPayment","onPaymentError","onAuthorize","data","_tokenizePayment","onAuthorizeError","container","teardown","onError","loadDefaultCheckout","getCheckout","getStoreConfig","customer","getCustomer","address","addresses","not_initialized_error","CheckoutButtonNotInitialized","MissingCheckoutConfig","createPayment","flow","enableShippingAddress","shippingAddressEditable","shippingAddressOverride","_mapToBraintreeAddress","amount","currency","code","offerCredit","catch","tokenizePayment","getDataCollector","payload","deviceData","postForm","payment_type","provider","nonce","device_data","shipping_address","JSON","stringify","_mapToLegacyShippingAddress","billing_address","_mapToLegacyBillingAddress","shippingAddress","details","recipientName","split","firstName","lastName","email","first_name","last_name","phone_number","phone","address_line_1","line1","address_line_2","line2","city","country_code","countryCode","postal_code","postalCode","billingAddress","address1","address2","stateOrProvinceCode","checkout_button_strategy","GooglePayBraintreeButtonStrategy","_googlePayScriptLoader","_googlePayPaymentProcessor","googlepaybraintree","_methodId","stateCheckout","_checkout","MissingCart","_walletButton","_createSignInButton","addEventListener","_handleWalletButtonClick","containerId","document","querySelector","googlePayButton","createButton","_onPaymentSelectComplete","appendChild","event","preventDefault","displayWallet","paymentData","cardInfo","handleSuccess","updateBillingAddress","Accept","Content-Type","_onError","bind_decorator","createCheckoutButtonInitializer","store","create_checkout_store","requestSender","request_sender_","checkout_button_initializer","checkout_button_strategy_action_creator","registry","registry_registry","scriptLoader","script_loader_","paymentClient","create_payment_client","checkoutActionCreator","checkout_action_creator","checkout_request_sender","config_action_creator","config_request_sender","googlepayScriptLoader","payment_request_sender","order_action_creator","order_request_sender","checkout_validator","googlepay_script_loader","braintreeScriptLoader","braintree_script_loader","braintreeSDKCreator","braintree_sdk_creator","paymentMethodActionCreator","payment_method_action_creator","payment_method_request_sender","formPoster","form_poster_","register","braintree_paypal_button_strategy","paypal_script_loader","googlepay_braintree_button_strategy","googlepay_payment_processor","googlepay_braintree_initializer","billing_address_action_creator","billing_address_request_sender","shipping_strategy_action_creator","create_shipping_strategy_registry","createCheckoutButtonRegistry","createActionTransformer","requestErrorFactory","action$","rxjs_observable_from__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","every","isResponse","createError","CheckoutSelector","_billingAddress","_cart","_consignments","_coupons","_customer","_giftCertificates","getBillingAddress","getCart","consignments","getConsignments","getCoupons","getGiftCertificates","getLoadError","loadError","isLoading","getUpdateError","updateError","isUpdating","_common_selector__WEBPACK_IMPORTED_MODULE_1__","checkoutReducer","_bigcommerce_data_store__WEBPACK_IMPORTED_MODULE_1__","dataReducer","errorsReducer","statusesReducer","reducer","_checkout_actions__WEBPACK_IMPORTED_MODULE_8__","LoadCheckoutSucceeded","UpdateCheckoutSucceeded","_billing__WEBPACK_IMPORTED_MODULE_3__","UpdateBillingAddressSucceeded","_coupon__WEBPACK_IMPORTED_MODULE_4__","ApplyCouponSucceeded","RemoveCouponSucceeded","_shipping__WEBPACK_IMPORTED_MODULE_7__","CreateConsignmentsSucceeded","UpdateConsignmentSucceeded","DeleteConsignmentSucceeded","UpdateShippingOptionSucceeded","_coupon__WEBPACK_IMPORTED_MODULE_5__","ApplyGiftCertificateSucceeded","RemoveGiftCertificateSucceeded","lodash__WEBPACK_IMPORTED_MODULE_2__","_order__WEBPACK_IMPORTED_MODULE_6__","SubmitOrderSucceeded","orderId","order","LoadCheckoutRequested","LoadCheckoutFailed","UpdateCheckoutRequested","UpdateCheckoutFailed","BillingAddressSelector","getContinueAsGuestError","continueAsGuestError","isContinuingAsGuest","createFreezeProxy","target","trap","proxy","iteratee","getPrototypeOf","traversePrototypeOf","getOwnPropertyNames","forEach","charAt","createProxy","ConfigSelector","_config","getConfig","storeConfig","getContextConfig","context","FormSelector","getShippingAddressFields","countries","selectedCountry","formFields","shippingAddressFields","field","_processField","getBillingAddressFields","billingAddressFields","_processCountry","_processProvince","_processsPostCode","country","items","default","fieldType","itemtype","subdivisions","required","hasPostalCodes","Boolean","CountrySelector","_countries","getCountries","PaymentSelector","_order","getPaymentId","internalPayment","_getInternalPayment","providerId","gatewayId","gateway","_getHostedPayment","_getGatewayPayment","getPaymentStatus","replace","step","getPaymentToken","getOrderMeta","token","getPaymentRedirectUrl","redirectUrl","isPaymentDataRequired","useStoreCredit","storeCredit","isPaymentDataSubmitted","payment_status_types","getOrder","payments","providerType","payment_method_types","PaymentMethodSelector","_paymentMethods","getPaymentMethods","getPaymentMethodsMeta","getLoadMethodError","loadMethodId","loadMethodError","isLoadingMethod","PaymentStrategySelector","_paymentStrategies","payment_strategy_state","initializeMethodId","getExecuteError","executeMethodId","executeError","getFinalizeError","finalizeMethodId","finalizeError","getWidgetInteractingError","widgetInteractionMethodId","widgetInteractionError","isExecuting","isFinalizing","isWidgetInteracting","InstrumentSelector","_instruments","getInstruments","getInstrumentsMeta","getDeleteError","instrumentId","failedInstrument","deleteError","isDeleting","deletingInstrument","RemoteCheckoutSelector","_remoteCheckout","createInternalCheckoutSelectors","billing_address_selector","cart_selector","checkout_button_selector","config_selector","country_selector","coupon_selector","customer_selector","customerStrategies","customer_strategy_selector","form","form_selector","gift_certificate_selector","instruments","instrument_selector","payment_method_selector","paymentStrategies","payment_strategy_selector","shipping_address_selector","remoteCheckout","remote_checkout_selector","shippingCountries","shipping_country_selector","shippingStrategies","shipping_strategy_selector","consignment_selector","checkout_selector","order_selector","payment_selector","shouldWarnMutation","keys","createFreezeProxies","checkoutButtonReducer","_checkout_button_actions__WEBPACK_IMPORTED_MODULE_2__","ConsignmentActionCreator","_consignmentRequestSender","assignItemsByAddress","consignment","existingConsignment","getConsignmentByAddress","_createOrUpdateConsignment","lineItems","_combineLineItems","selectShippingOption","rxjs_Observable__WEBPACK_IMPORTED_MODULE_3__","observer","_common_error_errors__WEBPACK_IMPORTED_MODULE_4__","MissingConsignments","consignmentUpdateBody","shippingOptionId","consignmentMeta","next","_consignment_actions__WEBPACK_IMPORTED_MODULE_5__","UpdateShippingOptionRequested","updateConsignment","complete","UpdateShippingOptionFailed","loadShippingOptions","LoadShippingOptionsRequested","params","include","LoadShippingOptionsSucceeded","LoadShippingOptionsFailed","updateAddress","_getConsignmentRequestBody","createConsignments","CreateConsignmentsRequested","CreateConsignmentsFailed","UpdateConsignmentRequested","UpdateConsignmentFailed","deleteConsignment","consignmentId","DeleteConsignmentRequested","DeleteConsignmentFailed","updateShippingOption","_isUpdateConsignmentRequest","physicalItems","item","itemId","quantity","lineItemIds","request","DEFAULT_PARAMS","ConsignmentRequestSender","_requestSender","checkoutId","timeout","url","_common_http_request__WEBPACK_IMPORTED_MODULE_1__","JsonV1","post","put","delete","objectA","objectB","length_1","isArrayEqual","Date","getTime","isDateEqual","RegExp","toString","isRegExpEqual","keyFilter","keysA","keysB","length_2","isObjectEqual","selectorDecorator","decoratedTarget","class_1","descriptor","getOwnPropertyDescriptor","resolver","cache_key_resolver","memoizedMethod","cachedValue","newValue","is_private","cache","set","selectorMethodDecorator","CheckoutRequestSender","_common_http_request__WEBPACK_IMPORTED_MODULE_0__","_checkout_default_includes__WEBPACK_IMPORTED_MODULE_1__","updateCheckout","CheckoutActionCreator","_configActionCreator","rxjs_observable_concat__WEBPACK_IMPORTED_MODULE_1__","rxjs_observable_of__WEBPACK_IMPORTED_MODULE_4__","_bigcommerce_data_store__WEBPACK_IMPORTED_MODULE_0__","_checkout_actions__WEBPACK_IMPORTED_MODULE_10__","rxjs_observable_merge__WEBPACK_IMPORTED_MODULE_3__","loadConfig","rxjs_observable_defer__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","_common_error__WEBPACK_IMPORTED_MODULE_7__","_common_error_errors__WEBPACK_IMPORTED_MODULE_8__","rxjs_Observable__WEBPACK_IMPORTED_MODULE_6__","_common_error_errors__WEBPACK_IMPORTED_MODULE_9__","loadCurrentCheckout","UnrecoverableError","request_error","RequestErrorFactory","_factoryMethods","timeout_error","factoryMethod","_getType","billingAddressReducer","billing_address_actions","ContinueAsGuestSucceeded","checkout_actions","order_actions","LoadOrderSucceeded","UpdateBillingAddressRequested","UpdateBillingAddressFailed","ContinueAsGuestRequested","ContinueAsGuestFailed","config_reducer_DEFAULT_STATE","configReducer","config_reducer_dataReducer","config_reducer_errorsReducer","config_reducer_statusesReducer","config_actions","LoadConfigSucceeded","LoadConfigFailed","LoadConfigRequested","country_reducer_DEFAULT_STATE","countryReducer","country_reducer_dataReducer","country_reducer_errorsReducer","country_reducer_statusesReducer","country_action_types","paymentReducer","payment_reducer_dataReducer","payment_actions","SubmitPaymentSucceeded","payment_method_reducer_DEFAULT_STATE","paymentMethodReducer","payment_method_reducer_dataReducer","payment_method_reducer_errorsReducer","metaReducer","payment_method_reducer_statusesReducer","payment_method_actions","LoadPaymentMethodSucceeded","array","predicate","newArray","mergeOrPush","LoadPaymentMethodsSucceeded","LoadPaymentMethodsRequested","LoadPaymentMethodsFailed","LoadPaymentMethodRequested","LoadPaymentMethodFailed","paymentStrategyReducer","payment_strategy_reducer_errorsReducer","payment_strategy_reducer_statusesReducer","payment_strategy_actions","InitializeRequested","InitializeSucceeded","InitializeFailed","DeinitializeRequested","DeinitializeSucceeded","deinitializeMethodId","DeinitializeFailed","ExecuteRequested","ExecuteSucceeded","ExecuteFailed","FinalizeRequested","FinalizeSucceeded","FinalizeFailed","WidgetInteractionStarted","WidgetInteractionFinished","WidgetInteractionFailed","instrument_reducer_DEFAULT_STATE","instrumentReducer","instrument_reducer_dataReducer","instrument_reducer_errorsReducer","instrument_reducer_metaReducer","instrument_reducer_statusesReducer","instrument_action_types","vaultedInstruments","instrument","bigpayToken","remote_checkout_reducer_DEFAULT_STATE","remoteCheckoutReducer","remote_checkout_reducer_dataReducer","remote_checkout_action_types","billing","shipping","settings","createCheckoutStore","initialState","actionTransformer","create_action_transformer","factory","request_error_factory","unrecoverable_error","payment_method_invalid_error","createRequestErrorFactory","cart_reducer","checkout_reducer","checkout_button_reducer","consignment_reducer","coupon_reducer","customer_reducer","customer_strategy_reducer","gift_certificate_reducer","order_reducer","shipping_country_reducer","shipping_strategy_reducer","stateTransformer","create_internal_checkout_selectors","isPrivate","indexOf","CartSelector","CouponSelector","_coupon","getRemoveError","removeCouponError","getApplyError","applyCouponError","isApplying","isApplyingCoupon","isRemoving","isRemovingCoupon","CustomerSelector","CustomerStrategySelector","_customerStrategies","getSignInError","signInMethodId","signInError","getSignOutError","signOutMethodId","signOutError","getWidgetInteractionError","isSigningIn","isSigningOut","GiftCertificateSelector","_giftCertificate","removeGiftCertificateError","applyGiftCertificateError","isApplyingGiftCertificate","isRemovingGiftCertificate","ShippingAddressSelector","getShippingAddress","ShippingCountrySelector","_shippingCountries","getShippingCountries","ShippingStrategySelector","_shippingStrategies","getUpdateAddressError","updateAddressMethodId","updateAddressError","getSelectOptionError","selectOptionMethodId","selectOptionError","isUpdatingAddress","isSelectingOption","ConsignmentSelector","getConsignmentById","_address__WEBPACK_IMPORTED_MODULE_2__","getShippingOption","selectedShippingOption","getCreateError","getLoadShippingOptionsError","loadShippingOptionsError","getUnassignedItems","assignedLineItemIds","itemIds","getItemAssignmentError","getUpdateShippingOptionError","updateShippingOptionError","isLoadingShippingOptions","isCreating","isAssigningItems","isUpdatingShippingOption","_common_selector__WEBPACK_IMPORTED_MODULE_3__","isAddressEqual","addressA","addressB","lodash__WEBPACK_IMPORTED_MODULE_0__","normalize","company","stateOrProvince","customFields","OrderSelector","cartReducer","_billing_billing_address_actions__WEBPACK_IMPORTED_MODULE_2__","_checkout__WEBPACK_IMPORTED_MODULE_3__","_shipping_consignment_actions__WEBPACK_IMPORTED_MODULE_6__","_coupon_coupon_actions__WEBPACK_IMPORTED_MODULE_4__","_coupon_gift_certificate_actions__WEBPACK_IMPORTED_MODULE_5__","consignmentReducer","_checkout__WEBPACK_IMPORTED_MODULE_2__","_consignment_actions__WEBPACK_IMPORTED_MODULE_4__","_customer__WEBPACK_IMPORTED_MODULE_3__","SignOutCustomerSucceeded","couponReducer","_coupon_actions__WEBPACK_IMPORTED_MODULE_4__","_order__WEBPACK_IMPORTED_MODULE_3__","ApplyCouponRequested","ApplyCouponFailed","RemoveCouponRequested","RemoveCouponFailed","customerReducer","giftCertificateReducer","_shipping_consignment_actions__WEBPACK_IMPORTED_MODULE_3__","_gift_certificate_actions__WEBPACK_IMPORTED_MODULE_5__","ApplyGiftCertificateRequested","ApplyGiftCertificateFailed","RemoveGiftCertificateRequested","RemoveGiftCertificateFailed","orderReducer","_order_actions__WEBPACK_IMPORTED_MODULE_3__","LoadOrderPaymentsSucceeded","FinalizeOrderSucceeded","callbackUrl","orderToken","LoadOrderRequested","LoadOrderPaymentsRequested","LoadOrderFailed","LoadOrderPaymentsFailed","shippingCountryReducer","_shipping_country_action_types__WEBPACK_IMPORTED_MODULE_2__","INTERNAL_USE_ONLY","OrderRequestSender","loadOrder","submitOrder","finalizeOrder","OrderActionCreator","_orderRequestSender","_checkoutValidator","rxjs_Observable__WEBPACK_IMPORTED_MODULE_7__","_order_actions__WEBPACK_IMPORTED_MODULE_10__","loadOrderPayments","loadCurrentOrder","rxjs_observable_defer__WEBPACK_IMPORTED_MODULE_3__","_getCurrentOrderId","MissingOrderId","rxjs_observable_concat__WEBPACK_IMPORTED_MODULE_2__","rxjs_observable_of__WEBPACK_IMPORTED_MODULE_5__","SubmitOrderRequested","rxjs_observable_from__WEBPACK_IMPORTED_MODULE_4__","_mapToOrderRequestBody","customerMessage","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","_common_error__WEBPACK_IMPORTED_MODULE_8__","SubmitOrderFailed","FinalizeOrderRequested","FinalizeOrderFailed","CartComparator","cartA","cartB","_normalize","cartAmount","digitalItems","extendedSalePrice","productId","variantId","recipient","giftWrapping","BraintreeScriptLoader","_scriptLoader","_window","window","loadClient","loadScript","braintree","client","_common_error_errors__WEBPACK_IMPORTED_MODULE_0__","load3DS","threeDSecure","loadDataCollector","dataCollector","loadPaypalCheckout","loadVisaCheckout","visaCheckout","loadGooglePayment","googlePayment","BraintreeSDKCreator","_braintreeScriptLoader","_dataCollectors","_clientToken","getClient","_common_error_errors__WEBPACK_IMPORTED_MODULE_1__","PaymentNotInitialized","_client","authorization","getPaypal","_paypal","get3DS","_3ds","cached","kount","getVisaCheckout","_visaCheckout","getGooglePaymentComponent","_googlePay","_teardown","mod","toFormUrlEncoded","encodeURIComponent","ShippingStrategyActionCreator","_strategyRegistry","rxjs_Observable__WEBPACK_IMPORTED_MODULE_2__","_shipping_strategy_actions__WEBPACK_IMPORTED_MODULE_3__","UpdateAddressRequested","UpdateAddressSucceeded","UpdateAddressFailed","selectOption","SelectOptionRequested","SelectOptionSucceeded","SelectOptionFailed","mergedOptions","mapFromInternalAddress","addressLine1","addressLine2","province","provinceCode","postCode","ShippingStrategy","AmazonPayShippingStrategy","_consignmentActionCreator","_remoteCheckoutActionCreator","amazonOptions","amazon","reject","loadWidget","_createAddressBook","optionId","onAddressSelect","onReady","merchantId","getElementById","OffAmazonPayments","ShippingNotInitialized","widget","Widgets","AddressBook","design","designMode","scope","sellerId","orderReference","_synchronizeShippingAddress","_updateOrderReference","referenceId","remote_checkout_synchronization_error","shipping_strategy_actions","initializeShipping","remoteAddress","is_internal_address_equal","map_from_internal_address","getAmazonOrderReferenceId","shipping_strategy","DefaultShippingStrategy","createShippingStrategyRegistry","checkoutRequestSender","consignmentRequestSender","consignment_request_sender","amazon_pay_shipping_strategy","consignment_action_creator","remote_checkout_action_creator","remote_checkout_request_sender","amazon_pay_script_loader","default_shipping_strategy","omitPrivate","omitDeep","isInternalAddressEqual","ignoredKeys","customerStrategyReducer","customer_strategy_actions","SignInRequested","SignInSucceeded","SignInFailed","SignOutRequested","SignOutSucceeded","SignOutFailed","shippingStrategyReducer","ButtonType","ButtonColor","googlepay_payment_processor_GooglePayPaymentProcessor","GooglePayPaymentProcessor","_googlePayInitializer","_billingAddressActionCreator","_shippingStrategyActionCreator","_configureWallet","onClick","buttonType","buttonColor","Short","Default","_googlePaymentsClient","remoteBillingAddress","googlePayAddressMapped","_mapGooglePayAddressToBillingAddress","updateShippingAddress","_mapGooglePayAddressToShippingAddress","_googlePaymentDataRequest","isReadyToPay","allowedPaymentMethods","loadPaymentData","err","statusCode","parseResponse","tokenizedPayload","_postForm","hasShippingAddress","load","googlePay","googlePayPaymentDataRequest","_getGooglePaymentsClient","standard_error","_getCardInformation","cardInformation","cardType","number","lastFour","google","environment","api","PaymentsClient","companyName","address3","address4","address5","locality","administrativeArea","phoneNumber","postPaymentData","to_form_url_encoded","card_information","PaymentMethodInvalidError","TimeoutError","bindDecorator","bindMethodDecorator","bindClassDecorator","boundMethod","_bigcommerce_bigpay_client__WEBPACK_IMPORTED_MODULE_0__","createPaymentClient","setHost","paymentSettings","bigpayBaseUrl","ConfigActionCreator","_configRequestSender","rxjs_Observable__WEBPACK_IMPORTED_MODULE_1__","_config_actions__WEBPACK_IMPORTED_MODULE_2__","ConfigRequestSender","X-API-INTERNAL","MissingDataErrorType","MissingDataError","subtype","MissingOrderConfig","MissingOrder","MissingPayment","getErrorMessage","_standard_error__WEBPACK_IMPORTED_MODULE_1__","throwErrorAction","isErrorAction","rxjs_observable_of__WEBPACK_IMPORTED_MODULE_2__","rxjs_observable_throw__WEBPACK_IMPORTED_MODULE_3__","NotInitializedErrorType","NotInitializedError","CustomerNotInitialized","BillingAddressActionCreator","continueAsGuest","credentials","_common_error_errors__WEBPACK_IMPORTED_MODULE_3__","isGuest","billingAddressRequestBody","existingBillingAddressRequestBody","_billing_address_actions__WEBPACK_IMPORTED_MODULE_5__","_createOrUpdateBillingAddress","createAddress","BillingAddressRequestSender","Registry","_factories","_instances","_options","defaultToken","cacheToken","_getInstance","hasFactory","_error_errors__WEBPACK_IMPORTED_MODULE_1__","hasInstance","InvalidArgumentError","PaymentMethodActionCreator","loadPaymentMethods","_payment_method_actions__WEBPACK_IMPORTED_MODULE_2__","deviceSessionId","sessionHash","PaymentMethodRequestSender","RemoteCheckoutRequestSender","initializeBilling","methodName","initializePayment","loadSettings","signOut","generateToken","trackAuthorizationEvent","RemoteCheckoutActionCreator","_remoteCheckoutRequestSender","_remote_checkout_action_types__WEBPACK_IMPORTED_MODULE_2__","AmazonPayScriptLoader","onPaymentReady","initializationData","region","toLowerCase","_configureWidget","onLoginReady","Login","setClientId","clientId","setUseCookie","onAmazonLoginReady","onAmazonPaymentsReady","RemoteCheckoutSynchronizationError","GooglePayScriptLoader","GooglePayBraintreeInitializer","googleBraintreePaymentInstance","_googlePaymentInstance","_createGooglePayPayload","platformToken","googlePaymentDataRequest","merchantInfo","authJwt","transactionInfo","currencyCode","totalPriceStatus","totalPrice","cardRequirements","billingAddressRequired","billingAddressFormat","shippingAddressRequired","emailRequired","phoneNumberRequired","createPaymentDataRequest","PaymentRequestSender","submitPayment","_transformResponse","initializeOffsitePayment","PaypalScriptLoader"],"mappings":"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","file":"checkout-button.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 171);\n","module.exports = require(\"tslib\");","module.exports = require(\"@bigcommerce/data-store\");","module.exports = require(\"lodash\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nimport { ConsignmentMeta } from './consignment';\n\nexport enum ConsignmentActionType {\n    CreateConsignmentsRequested = 'CREATE_CONSIGNMENTS_REQUESTED',\n    CreateConsignmentsSucceeded = 'CREATE_CONSIGNMENTS_SUCCEEDED',\n    CreateConsignmentsFailed = 'CREATE_CONSIGNMENTS_FAILED',\n\n    UpdateConsignmentRequested = 'UPDATE_CONSIGNMENT_REQUESTED',\n    UpdateConsignmentSucceeded = 'UPDATE_CONSIGNMENT_SUCCEEDED',\n    UpdateConsignmentFailed = 'UPDATE_CONSIGNMENT_FAILED',\n\n    DeleteConsignmentRequested = 'DELETE_CONSIGNMENT_REQUESTED',\n    DeleteConsignmentSucceeded = 'DELETE_CONSIGNMENT_SUCCEEDED',\n    DeleteConsignmentFailed = 'DELETE_CONSIGNMENT_FAILED',\n\n    UpdateShippingOptionRequested = 'UPDATE_SHIPPING_OPTION_REQUESTED',\n    UpdateShippingOptionSucceeded = 'UPDATE_SHIPPING_OPTION_SUCCEEDED',\n    UpdateShippingOptionFailed = 'UPDATE_SHIPPING_OPTION_FAILED',\n\n    LoadShippingOptionsRequested = 'LOAD_SHIPPING_OPTIONS_REQUESTED',\n    LoadShippingOptionsSucceeded = 'LOAD_SHIPPING_OPTIONS_SUCCEEDED',\n    LoadShippingOptionsFailed = 'LOAD_SHIPPING_OPTIONS_FAILED',\n}\n\nexport type ConsignmentAction =\n    CreateConsignmentsAction |\n    UpdateConsignmentAction |\n    DeleteConsignmentAction |\n    UpdateShippingOptionAction |\n    LoadShippingOptionsAction;\n\nexport type CreateConsignmentsAction =\n    CreateConsignmentsRequestedAction |\n    CreateConsignmentsSucceededAction |\n    CreateConsignmentsFailedAction;\n\nexport type UpdateConsignmentAction =\n    UpdateConsignmentRequestedAction |\n    UpdateConsignmentSucceededAction |\n    UpdateConsignmentFailedAction;\n\nexport type DeleteConsignmentAction =\n    DeleteConsignmentRequestedAction |\n    DeleteConsignmentSucceededAction |\n    DeleteConsignmentFailedAction;\n\nexport type UpdateShippingOptionAction =\n    UpdateShippingOptionRequestedAction |\n    UpdateShippingOptionSucceededAction |\n    UpdateShippingOptionFailedAction;\n\nexport type LoadShippingOptionsAction =\n    LoadShippingOptionsRequestedAction |\n    LoadShippingOptionsSucceededAction |\n    LoadShippingOptionsFailedAction;\n\nexport interface CreateConsignmentsRequestedAction extends Action {\n    type: ConsignmentActionType.CreateConsignmentsRequested;\n}\n\nexport interface CreateConsignmentsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.CreateConsignmentsSucceeded;\n}\n\nexport interface CreateConsignmentsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.CreateConsignmentsFailed;\n}\n\nexport interface UpdateConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentRequested;\n}\n\nexport interface UpdateConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentSucceeded;\n}\n\nexport interface UpdateConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentFailed;\n}\n\nexport interface DeleteConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentRequested;\n}\n\nexport interface DeleteConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentSucceeded;\n}\n\nexport interface DeleteConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentFailed;\n}\n\nexport interface UpdateShippingOptionRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionRequested;\n}\n\nexport interface UpdateShippingOptionSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionSucceeded;\n}\n\nexport interface UpdateShippingOptionFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionFailed;\n}\n\nexport interface LoadShippingOptionsRequestedAction extends Action {\n    type: ConsignmentActionType.LoadShippingOptionsRequested;\n}\n\nexport interface LoadShippingOptionsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.LoadShippingOptionsSucceeded;\n}\n\nexport interface LoadShippingOptionsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.LoadShippingOptionsFailed;\n}\n","module.exports = require(\"rxjs/Observable\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"rxjs/observable/concat\");","module.exports = require(\"rxjs/observable/of\");","import { setPrototypeOf } from '../../utility';\n\nexport default class StandardError extends Error {\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ShippingStrategyActionType {\n    UpdateAddressFailed = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_FAILED',\n    UpdateAddressRequested = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_REQUESTED',\n    UpdateAddressSucceeded = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_SUCCEEDED',\n    SelectOptionFailed = 'SHIPPING_STRATEGY_SELECT_OPTION_FAILED',\n    SelectOptionRequested = 'SHIPPING_STRATEGY_SELECT_OPTION_REQUESTED',\n    SelectOptionSucceeded = 'SHIPPING_STRATEGY_SELECT_OPTION_SUCCEEDED',\n    InitializeFailed = 'SHIPPING_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'SHIPPING_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'SHIPPING_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'SHIPPING_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'SHIPPING_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'SHIPPING_STRATEGY_DEINITIALIZE_SUCCEEDED',\n}\n\nexport type ShippingStrategyAction =\n    ShippingStrategyUpdateAddressAction |\n    ShippingStrategySelectOptionAction |\n    ShippingStrategyInitializeAction |\n    ShippingStrategyDeinitializeAction;\n\nexport type ShippingStrategyUpdateAddressAction =\n    UpdateAddressRequestedAction |\n    UpdateAddressSucceededAction |\n    UpdateAddressFailedAction;\n\nexport type ShippingStrategySelectOptionAction =\n    SelectOptionRequestedAction |\n    SelectOptionSucceededAction |\n    SelectOptionFailedAction;\n\nexport type ShippingStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type ShippingStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport interface UpdateAddressRequestedAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressRequested;\n}\n\nexport interface UpdateAddressSucceededAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressSucceeded;\n}\n\nexport interface UpdateAddressFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.UpdateAddressFailed;\n}\n\nexport interface SelectOptionRequestedAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionRequested;\n}\n\nexport interface SelectOptionSucceededAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionSucceeded;\n}\n\nexport interface SelectOptionFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.SelectOptionFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.DeinitializeFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum CouponActionType {\n    ApplyCouponRequested = 'APPLY_COUPON_REQUESTED',\n    ApplyCouponSucceeded = 'APPLY_COUPON_SUCCEEDED',\n    ApplyCouponFailed = 'APPLY_COUPON_FAILED',\n\n    RemoveCouponRequested = 'REMOVE_COUPON_REQUESTED',\n    RemoveCouponSucceeded = 'REMOVE_COUPON_SUCCEEDED',\n    RemoveCouponFailed = 'REMOVE_COUPON_FAILED',\n}\n\nexport type CouponAction =\n    ApplyCouponAction |\n    RemoveCouponAction;\n\nexport type ApplyCouponAction =\n    ApplyCouponRequestedAction |\n    ApplyCouponSucceededAction |\n    ApplyCouponFailedAction;\n\nexport type RemoveCouponAction =\n    RemoveCouponRequestedAction |\n    RemoveCouponSucceededAction |\n    RemoveCouponFailedAction;\n\nexport interface ApplyCouponRequestedAction extends Action {\n    type: CouponActionType.ApplyCouponRequested;\n}\n\nexport interface ApplyCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.ApplyCouponSucceeded;\n}\n\nexport interface ApplyCouponFailedAction extends Action<Error> {\n    type: CouponActionType.ApplyCouponFailed;\n}\n\nexport interface RemoveCouponRequestedAction extends Action {\n    type: CouponActionType.RemoveCouponRequested;\n}\n\nexport interface RemoveCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.RemoveCouponSucceeded;\n}\n\nexport interface RemoveCouponFailedAction extends Action<Error> {\n    type: CouponActionType.RemoveCouponFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum BillingAddressActionType {\n    UpdateBillingAddressRequested = 'UPDATE_BILLING_ADDRESS_REQUESTED',\n    UpdateBillingAddressSucceeded = 'UPDATE_BILLING_ADDRESS_SUCCEEDED',\n    UpdateBillingAddressFailed = 'UPDATE_BILLING_ADDRESS_FAILED',\n\n    ContinueAsGuestRequested = 'CONTINUE_AS_GUEST_REQUESTED',\n    ContinueAsGuestSucceeded = 'CONTINUE_AS_GUEST_SUCCEEDED',\n    ContinueAsGuestFailed = 'CONTINUE_AS_GUEST_FAILED',\n}\n\nexport type BillingAddressAction =\n    ContinueAsGuestAction |\n    UpdateBillingAddressAction;\n\nexport type UpdateBillingAddressAction =\n    UpdateBillingAddressRequested |\n    UpdateBillingAddressSucceeded |\n    UpdateBillingAddressFailed;\n\nexport type ContinueAsGuestAction =\n    ContinueAsGuestRequested |\n    ContinueAsGuestSucceeded |\n    ContinueAsGuestFailed;\n\nexport interface UpdateBillingAddressRequested extends Action {\n    type: BillingAddressActionType.UpdateBillingAddressRequested;\n}\n\nexport interface UpdateBillingAddressSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.UpdateBillingAddressSucceeded;\n}\n\nexport interface UpdateBillingAddressFailed extends Action<Error> {\n    type: BillingAddressActionType.UpdateBillingAddressFailed;\n}\n\nexport interface ContinueAsGuestRequested extends Action {\n    type: BillingAddressActionType.ContinueAsGuestRequested;\n}\n\nexport interface ContinueAsGuestSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.ContinueAsGuestSucceeded;\n}\n\nexport interface ContinueAsGuestFailed extends Action<Error> {\n    type: BillingAddressActionType.ContinueAsGuestFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum GiftCertificateActionType {\n    ApplyGiftCertificateRequested = 'APPLY_GIFT_CERTIFICATE_REQUESTED',\n    ApplyGiftCertificateSucceeded = 'APPLY_GIFT_CERTIFICATE_SUCCEEDED',\n    ApplyGiftCertificateFailed = 'APPLY_GIFT_CERTIFICATE_FAILED',\n\n    RemoveGiftCertificateRequested = 'REMOVE_GIFT_CERTIFICATE_REQUESTED',\n    RemoveGiftCertificateSucceeded = 'REMOVE_GIFT_CERTIFICATE_SUCCEEDED',\n    RemoveGiftCertificateFailed = 'REMOVE_GIFT_CERTIFICATE_FAILED',\n}\n\nexport type GiftCertificateAction =\n    ApplyGiftCertificateAction |\n    RemoveGiftCertificateAction;\n\nexport type ApplyGiftCertificateAction =\n    ApplyGiftCertificateRequestedAction |\n    ApplyGiftCertificateSucceededAction |\n    ApplyGiftCertificateFailedAction;\n\nexport type RemoveGiftCertificateAction =\n    RemoveGiftCertificateRequestedAction |\n    RemoveGiftCertificateSucceededAction |\n    RemoveGiftCertificateFailedAction;\n\nexport interface ApplyGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.ApplyGiftCertificateRequested;\n}\n\nexport interface ApplyGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.ApplyGiftCertificateSucceeded;\n}\n\nexport interface ApplyGiftCertificateFailedAction extends Action<Error> {\n    type: GiftCertificateActionType.ApplyGiftCertificateFailed;\n}\n\nexport interface RemoveGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.RemoveGiftCertificateRequested;\n}\n\nexport interface RemoveGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.RemoveGiftCertificateSucceeded;\n}\n\nexport interface RemoveGiftCertificateFailedAction extends Action<Error> {\n    type: GiftCertificateActionType.RemoveGiftCertificateFailed;\n}\n","module.exports = require(\"rxjs/observable/defer\");","export const ACKNOWLEDGE = 'ACKNOWLEDGE';\nexport const FINALIZE = 'FINALIZE';\nexport const INITIALIZE = 'INITIALIZE';\n","module.exports = require(\"rxjs/observable/from\");","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadConfigAction } from '../config/config-actions';\n\nimport Checkout from './checkout';\n\nexport enum CheckoutActionType {\n    LoadCheckoutRequested = 'LOAD_CHECKOUT_REQUESTED',\n    LoadCheckoutSucceeded = 'LOAD_CHECKOUT_SUCCEEDED',\n    LoadCheckoutFailed = 'LOAD_CHECKOUT_FAILED',\n\n    UpdateCheckoutRequested = 'UPDATE_CHECKOUT_REQUESTED',\n    UpdateCheckoutSucceeded = 'UPDATE_CHECKOUT_SUCCEEDED',\n    UpdateCheckoutFailed = 'UPDATE_CHECKOUT_FAILED',\n}\n\nexport type CheckoutAction = LoadCheckoutAction | UpdateCheckoutAction;\n\nexport type LoadCheckoutAction =\n    LoadCheckoutRequestedAction |\n    LoadCheckoutSucceededAction |\n    LoadCheckoutFailedAction |\n    LoadConfigAction;\n\nexport type UpdateCheckoutAction =\n    UpdateCheckoutRequestedAction |\n    UpdateCheckoutSucceededAction |\n    UpdateCheckoutFailedAction;\n\nexport interface LoadCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.LoadCheckoutRequested;\n}\n\nexport interface LoadCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.LoadCheckoutSucceeded;\n}\n\nexport interface LoadCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.LoadCheckoutFailed;\n}\n\nexport interface UpdateCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.UpdateCheckoutRequested;\n}\n\nexport interface UpdateCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.UpdateCheckoutSucceeded;\n}\n\nexport interface UpdateCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.UpdateCheckoutFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { InternalOrderResponseData } from './internal-order-responses';\nimport Order from './order';\n\nexport enum OrderActionType {\n    LoadOrderRequested = 'LOAD_ORDER_REQUESTED',\n    LoadOrderSucceeded = 'LOAD_ORDER_SUCCEEDED',\n    LoadOrderFailed = 'LOAD_ORDER_FAILED',\n\n    LoadOrderPaymentsRequested = 'LOAD_ORDER_PAYMENTS_REQUESTED',\n    LoadOrderPaymentsSucceeded = 'LOAD_ORDER_PAYMENTS_SUCCEEDED',\n    LoadOrderPaymentsFailed = 'LOAD_ORDER_PAYMENTS_FAILED',\n\n    SubmitOrderRequested = 'SUBMIT_ORDER_REQUESTED',\n    SubmitOrderSucceeded = 'SUBMIT_ORDER_SUCCEEDED',\n    SubmitOrderFailed = 'SUBMIT_ORDER_FAILED',\n\n    FinalizeOrderRequested = 'FINALIZE_ORDER_REQUESTED',\n    FinalizeOrderSucceeded = 'FINALIZE_ORDER_SUCCEEDED',\n    FinalizeOrderFailed = 'FINALIZE_ORDER_FAILED',\n}\n\nexport type OrderAction = LoadOrderAction |\n    LoadOrderPaymentsAction |\n    SubmitOrderAction |\n    FinalizeOrderAction;\n\nexport type LoadOrderPaymentsAction = LoadOrderPaymentsRequestedAction |\n    LoadOrderPaymentsSucceededAction |\n    LoadOrderPaymentsFailedAction;\n\nexport type LoadOrderAction =\n    LoadOrderRequestedAction |\n    LoadOrderSucceededAction |\n    LoadOrderFailedAction;\n\nexport type SubmitOrderAction =\n    SubmitOrderRequestedAction |\n    SubmitOrderSucceededAction |\n    SubmitOrderFailedAction |\n    LoadOrderAction;\n\nexport type FinalizeOrderAction =\n    FinalizeOrderRequestedAction |\n    FinalizeOrderSucceededAction |\n    FinalizeOrderFailedAction |\n    LoadOrderAction;\n\nexport interface LoadOrderRequestedAction extends Action {\n    type: OrderActionType.LoadOrderRequested;\n}\n\nexport interface LoadOrderSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderSucceeded;\n}\n\nexport interface LoadOrderFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderFailed;\n}\n\nexport interface LoadOrderPaymentsRequestedAction extends Action {\n    type: OrderActionType.LoadOrderPaymentsRequested;\n}\n\nexport interface LoadOrderPaymentsSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderPaymentsSucceeded;\n}\n\nexport interface LoadOrderPaymentsFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderPaymentsFailed;\n}\n\nexport interface SubmitOrderRequestedAction extends Action {\n    type: OrderActionType.SubmitOrderRequested;\n}\n\nexport interface SubmitOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.SubmitOrderSucceeded;\n}\n\nexport interface SubmitOrderFailedAction extends Action<Error> {\n    type: OrderActionType.SubmitOrderFailed;\n}\n\nexport interface FinalizeOrderRequestedAction extends Action {\n    type: OrderActionType.FinalizeOrderRequested;\n}\n\nexport interface FinalizeOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.FinalizeOrderSucceeded;\n}\n\nexport interface FinalizeOrderFailedAction extends Action<Error> {\n    type: OrderActionType.FinalizeOrderFailed;\n}\n","module.exports = require(\"@bigcommerce/script-loader\");","import { StandardError } from '../../common/error/errors';\n\nexport default class CartChangedError extends StandardError {\n    constructor() {\n        super('An update to your shopping cart has been detected and your available shipping costs have been updated.');\n\n        this.type = 'cart_changed';\n    }\n}\n","import { isEqual, map } from 'lodash';\n\nimport { CartComparator } from '../cart';\nimport { CartChangedError } from '../cart/errors';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { Coupon, GiftCertificate } from '../coupon';\n\nimport Checkout from './checkout';\nimport CheckoutRequestSender from './checkout-request-sender';\n\nexport default class CheckoutValidator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    validate(checkout?: Checkout, options?: RequestOptions): Promise<void> {\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        return this._checkoutRequestSender.loadCheckout(checkout.id, options)\n            .then(response => {\n                const comparator = new CartComparator();\n\n                if (checkout.grandTotal === response.body.grandTotal\n                    && this._compareCoupons(checkout.coupons, response.body.coupons)\n                    && this._compareGiftCertificates(checkout.giftCertificates, response.body.giftCertificates)\n                    && comparator.isEqual(checkout.cart, response.body.cart)\n                ) {\n                    return;\n                }\n\n                throw new CartChangedError();\n            });\n    }\n\n    private _compareCoupons(couponsA: Coupon[], couponsB: Coupon[]): boolean {\n        return isEqual(map(couponsA, 'code'), map(couponsB, 'code'));\n    }\n\n    private _compareGiftCertificates(giftCertificatesA: GiftCertificate[], giftCertificatesB: GiftCertificate[]): boolean {\n        return isEqual(map(giftCertificatesA, 'code'), map(giftCertificatesB, 'code'));\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport StandardError from './standard-error';\n\nconst DEFAULT_RESPONSE = {\n    body: {},\n    headers: {},\n    status: 0,\n    statusText: '',\n};\n\nexport default class RequestError extends StandardError {\n    body: any;\n    headers: { [key: string]: any; };\n    status: number;\n    statusText: string;\n\n    constructor({ body = {}, headers, status, statusText }: Response = DEFAULT_RESPONSE, message?: string) {\n        super(joinErrors(body.errors) || body.detail || body.title || message || 'An unexpected error has occurred.');\n\n        this.type = 'request';\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.statusText = statusText;\n    }\n}\n\nfunction joinErrors(errors: Array<string | { code: string, message: string }>): string | undefined {\n    if (!Array.isArray(errors)) {\n        return;\n    }\n\n    return errors.reduce((result: string[], error) => {\n        if (typeof error === 'string') {\n            return [...result, error];\n        }\n\n        if (error && error.message) {\n            return [...result, error.message];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { find, some, values } from 'lodash';\n\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonState from './checkout-button-state';\n\n@selector\nexport default class CheckoutButtonSelector {\n    constructor(\n        private _checkoutButton: CheckoutButtonState\n    ) {}\n\n    getState(): CheckoutButtonState {\n        return this._checkoutButton;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId) {\n            const method = this._checkoutButton.statuses[methodId];\n\n            return (method && method.isInitializing) === true;\n        }\n\n        return some(this._checkoutButton.statuses, { isInitializing: true });\n    }\n\n    isDeinitializing(methodId?: string): boolean {\n        if (methodId) {\n            const method = this._checkoutButton.statuses[methodId];\n\n            return (method && method.isDeinitializing) === true;\n        }\n\n        return some(this._checkoutButton.statuses, { isDeinitializing: true });\n    }\n\n    getInitializeError(methodId?: string): Error | undefined {\n        const method = methodId ?\n            this._checkoutButton.errors[methodId] :\n            find(values(this._checkoutButton.errors), method => !!(method && method.initializeError));\n\n        return method && method.initializeError;\n    }\n\n    getDeinitializeError(methodId?: string): Error | undefined {\n        const method = methodId ?\n            this._checkoutButton.errors[methodId] :\n            find(values(this._checkoutButton.errors), method => !!(method && method.deinitializeError));\n\n        return method && method.deinitializeError;\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum CustomerStrategyActionType {\n    SignInFailed = 'CUSTOMER_STRATEGY_SIGN_IN_FAILED',\n    SignInRequested = 'CUSTOMER_STRATEGY_SIGN_IN_REQUESTED',\n    SignInSucceeded = 'CUSTOMER_STRATEGY_SIGN_IN_SUCCEEDED',\n    SignOutFailed = 'CUSTOMER_STRATEGY_SIGN_OUT_FAILED',\n    SignOutRequested = 'CUSTOMER_STRATEGY_SIGN_OUT_REQUESTED',\n    SignOutSucceeded = 'CUSTOMER_STRATEGY_SIGN_OUT_SUCCEEDED',\n    InitializeFailed = 'CUSTOMER_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'CUSTOMER_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'CUSTOMER_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'CUSTOMER_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'CUSTOMER_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'CUSTOMER_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type CustomerStrategyAction =\n    CustomerStrategySignInAction |\n    CustomerStrategySignOutAction |\n    CustomerStrategyInitializeAction |\n    CustomerStrategyDeinitializeAction |\n    CustomerStrategyWidgetAction;\n\nexport type CustomerStrategySignInAction =\n    SignInRequestedAction |\n    SignInSucceededAction |\n    SignInFailedAction;\n\nexport type CustomerStrategySignOutAction =\n    SignOutRequestedAction |\n    SignOutSucceededAction |\n    SignOutFailedAction;\n\nexport type CustomerStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type CustomerStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type CustomerStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface SignInRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignInRequested;\n}\n\nexport interface SignInSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignInSucceeded;\n}\n\nexport interface SignInFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignInFailed;\n}\n\nexport interface SignOutRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignOutRequested;\n}\n\nexport interface SignOutSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignOutSucceeded;\n}\n\nexport interface SignOutFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignOutFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderPaymentsAction } from '../order';\n\nexport enum PaymentStrategyActionType {\n    ExecuteFailed = 'PAYMENT_STRATEGY_EXECUTE_FAILED',\n    ExecuteRequested = 'PAYMENT_STRATEGY_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'PAYMENT_STRATEGY_EXECUTE_SUCCEEDED',\n    FinalizeFailed = 'PAYMENT_STRATEGY_FINALIZE_FAILED',\n    FinalizeRequested = 'PAYMENT_STRATEGY_FINALIZE_REQUESTED',\n    FinalizeSucceeded = 'PAYMENT_STRATEGY_FINALIZE_SUCCEEDED',\n    InitializeFailed = 'PAYMENT_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'PAYMENT_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'PAYMENT_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'PAYMENT_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'PAYMENT_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'PAYMENT_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type PaymentStrategyAction =\n    PaymentStrategyExecuteAction |\n    PaymentStrategyFinalizeAction |\n    PaymentStrategyInitializeAction |\n    PaymentStrategyDeinitializeAction |\n    PaymentStrategyWidgetAction;\n\nexport type PaymentStrategyExecuteAction =\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyFinalizeAction =\n    FinalizeRequestedAction |\n    FinalizeSucceededAction |\n    FinalizeFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type PaymentStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type PaymentStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface ExecuteRequestedAction extends Action {\n    type: PaymentStrategyActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action {\n    type: PaymentStrategyActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.ExecuteFailed;\n}\n\nexport interface FinalizeRequestedAction extends Action {\n    type: PaymentStrategyActionType.FinalizeRequested;\n}\n\nexport interface FinalizeSucceededAction extends Action {\n    type: PaymentStrategyActionType.FinalizeSucceeded;\n}\n\nexport interface FinalizeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.FinalizeFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport enum PaymentMethodActionType {\n    LoadPaymentMethodRequested = 'LOAD_PAYMENT_METHOD_REQUESTED',\n    LoadPaymentMethodSucceeded = 'LOAD_PAYMENT_METHOD_SUCCEEDED',\n    LoadPaymentMethodFailed = 'LOAD_PAYMENT_METHOD_FAILED',\n\n    LoadPaymentMethodsRequested = 'LOAD_PAYMENT_METHODS_REQUESTED',\n    LoadPaymentMethodsSucceeded = 'LOAD_PAYMENT_METHODS_SUCCEEDED',\n    LoadPaymentMethodsFailed = 'LOAD_PAYMENT_METHODS_FAILED',\n}\n\nexport type PaymentMethodAction = LoadPaymentMethodAction | LoadPaymentMethodsAction;\n\nexport type LoadPaymentMethodAction =\n    LoadPaymentMethodRequestedAction |\n    LoadPaymentMethodSucceededAction |\n    LoadPaymentMethodFailedAction;\n\nexport type LoadPaymentMethodsAction =\n    LoadPaymentMethodsRequestedAction |\n    LoadPaymentMethodsSucceededAction |\n    LoadPaymentMethodsFailedAction;\n\nexport interface LoadPaymentMethodRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodRequested;\n}\n\nexport interface LoadPaymentMethodSucceededAction extends Action<PaymentMethod> {\n    type: PaymentMethodActionType.LoadPaymentMethodSucceeded;\n}\n\nexport interface LoadPaymentMethodFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodFailed;\n}\n\nexport interface LoadPaymentMethodsRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodsRequested;\n}\n\nexport interface LoadPaymentMethodsSucceededAction extends Action<PaymentMethod[], PaymentMethodMeta> {\n    type: PaymentMethodActionType.LoadPaymentMethodsSucceeded;\n}\n\nexport interface LoadPaymentMethodsFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodsFailed;\n}\n","export const INITIALIZE_REMOTE_BILLING_REQUESTED = 'INITIALIZE_REMOTE_BILLING_REQUESTED';\nexport const INITIALIZE_REMOTE_BILLING_SUCCEEDED = 'INITIALIZE_REMOTE_BILLING_SUCCEEDED';\nexport const INITIALIZE_REMOTE_BILLING_FAILED = 'INITIALIZE_REMOTE_BILLING_FAILED';\n\nexport const INITIALIZE_REMOTE_SHIPPING_REQUESTED = 'INITIALIZE_REMOTE_SHIPPING_REQUESTED';\nexport const INITIALIZE_REMOTE_SHIPPING_SUCCEEDED = 'INITIALIZE_REMOTE_SHIPPING_SUCCEEDED';\nexport const INITIALIZE_REMOTE_SHIPPING_FAILED = 'INITIALIZE_REMOTE_SHIPPING_FAILED';\n\nexport const INITIALIZE_REMOTE_PAYMENT_REQUESTED = 'INITIALIZE_REMOTE_PAYMENT_REQUESTED';\nexport const INITIALIZE_REMOTE_PAYMENT_SUCCEEDED = 'INITIALIZE_REMOTE_PAYMENT_SUCCEEDED';\nexport const INITIALIZE_REMOTE_PAYMENT_FAILED = 'INITIALIZE_REMOTE_PAYMENT_FAILED';\n\nexport const LOAD_REMOTE_SETTINGS_REQUESTED = 'LOAD_REMOTE_SETTINGS_REQUESTED';\nexport const LOAD_REMOTE_SETTINGS_SUCCEEDED = 'LOAD_REMOTE_SETTINGS_SUCCEEDED';\nexport const LOAD_REMOTE_SETTINGS_FAILED = 'LOAD_REMOTE_SETTINGS_FAILED';\n\nexport const SIGN_OUT_REMOTE_CUSTOMER_REQUESTED = 'SIGN_OUT_REMOTE_CUSTOMER_REQUESTED';\nexport const SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED = 'SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED';\nexport const SIGN_OUT_REMOTE_CUSTOMER_FAILED = 'SIGN_OUT_REMOTE_CUSTOMER_FAILED';\n\nexport const UPDATE_REMOTE_CHECKOUT = 'UPDATE_REMOTE_CHECKOUT';\n","export const LOAD_INSTRUMENTS_REQUESTED = 'LOAD_INSTRUMENTS_REQUESTED';\nexport const LOAD_INSTRUMENTS_SUCCEEDED = 'LOAD_INSTRUMENTS_SUCCEEDED';\nexport const LOAD_INSTRUMENTS_FAILED = 'LOAD_INSTRUMENTS_FAILED';\n\nexport const DELETE_INSTRUMENT_REQUESTED = 'DELETE_INSTRUMENT_REQUESTED';\nexport const DELETE_INSTRUMENT_SUCCEEDED = 'DELETE_INSTRUMENT_SUCCEEDED';\nexport const DELETE_INSTRUMENT_FAILED = 'DELETE_INSTRUMENT_FAILED';\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadPaymentMethodAction } from '../payment';\n\nexport enum CheckoutButtonActionType {\n    InitializeButtonFailed = 'INITIALIZE_BUTTON_FAILED',\n    InitializeButtonRequested = 'INITIALIZE_BUTTON_REQUESTED',\n    InitializeButtonSucceeded = 'INITIALIZE_BUTTON_SUCCEEDED',\n\n    DeinitializeButtonFailed = 'DEINITIALIZE_BUTTON_FAILED',\n    DeinitializeButtonRequested = 'DEINITIALIZE_BUTTON_REQUESTED',\n    DeinitializeButtonSucceeded = 'DEINITIALIZE_BUTTON_SUCCEEDED',\n}\n\nexport type CheckoutButtonAction = InitializeButtonAction | DeinitializeButtonAction;\n\nexport type InitializeButtonAction =\n    InitializeButtonRequestedAction |\n    InitializeButtonSucceededAction |\n    InitializeButtonFailedAction |\n    LoadPaymentMethodAction;\n\nexport type DeinitializeButtonAction =\n    DeinitializeButtonRequestedAction |\n    DeinitializeButtonSucceededAction |\n    DeinitializeButtonFailedAction;\n\nexport interface CheckoutButtonActionMeta {\n    methodId: string;\n}\n\nexport interface InitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonRequested;\n}\n\nexport interface InitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonSucceeded;\n}\n\nexport interface InitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonFailed;\n}\n\nexport interface DeinitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonRequested;\n}\n\nexport interface DeinitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonSucceeded;\n}\n\nexport interface DeinitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonFailed;\n}\n","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","import { Action } from '@bigcommerce/data-store';\n\nimport Config from './config';\n\nexport enum ConfigActionType {\n    LoadConfigRequested = 'LOAD_CONFIG_REQUESTED',\n    LoadConfigSucceeded = 'LOAD_CONFIG_SUCCEEDED',\n    LoadConfigFailed = 'LOAD_CONFIG_FAILED',\n}\n\nexport type LoadConfigAction =\n    LoadConfigRequestedAction |\n    LoadConfigSucceededAction |\n    LoadConfigFailedAction;\n\nexport interface LoadConfigRequestedAction extends Action {\n    type: ConfigActionType.LoadConfigRequested;\n}\n\nexport interface LoadConfigSucceededAction extends Action<Config> {\n    type: ConfigActionType.LoadConfigSucceeded;\n}\n\nexport interface LoadConfigFailedAction extends Action<Error> {\n    type: ConfigActionType.LoadConfigFailed;\n}\n","export const LOAD_COUNTRIES_REQUESTED = 'LOAD_COUNTRIES_REQUESTED';\nexport const LOAD_COUNTRIES_SUCCEEDED = 'LOAD_COUNTRIES_SUCCEEDED';\nexport const LOAD_COUNTRIES_FAILED = 'LOAD_COUNTRIES_FAILED';\n","export const LOAD_SHIPPING_COUNTRIES_REQUESTED = 'LOAD_SHIPPING_COUNTRIES_REQUESTED';\nexport const LOAD_SHIPPING_COUNTRIES_SUCCEEDED = 'LOAD_SHIPPING_COUNTRIES_SUCCEEDED';\nexport const LOAD_SHIPPING_COUNTRIES_FAILED = 'LOAD_SHIPPING_COUNTRIES_FAILED';\n","export default interface PaymentStrategyState {\n    errors: PaymentStrategyErrorsState;\n    statuses: PaymentStrategyStatusesState;\n}\n\nexport interface PaymentStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    executeError?: Error;\n    executeMethodId?: string;\n    finalizeError?: Error;\n    finalizeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface PaymentStrategyStatusesState {\n    deinitializeMethodId?: string;\n    executeMethodId?: string;\n    finalizeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isExecuting?: boolean;\n    isFinalizing?: boolean;\n    isInitializing?: boolean;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: PaymentStrategyState = {\n    errors: {},\n    statuses: {},\n};\n","const DEFAULT_INCLUDES = [\n    'cart.lineItems.physicalItems.options',\n    'cart.lineItems.digitalItems.options',\n    'customer',\n    'payments',\n    'promotions.banners',\n];\n\nexport default DEFAULT_INCLUDES;\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadCheckoutAction } from '../checkout';\n\nimport { InternalCustomerResponseData } from './internal-customer-responses';\n\nexport enum CustomerActionType {\n    SignInCustomerRequested = 'SIGN_IN_CUSTOMER_REQUESTED',\n    SignInCustomerSucceeded = 'SIGN_IN_CUSTOMER_SUCCEEDED',\n    SignInCustomerFailed = 'SIGN_IN_CUSTOMER_FAILED',\n\n    SignOutCustomerRequested = 'SIGN_OUT_CUSTOMER_REQUESTED',\n    SignOutCustomerSucceeded = 'SIGN_OUT_CUSTOMER_SUCCEEDED',\n    SignOutCustomerFailed = 'SIGN_OUT_CUSTOMER_FAILED',\n}\n\nexport type CustomerAction =\n    SignInCustomerAction |\n    SignOutCustomerAction;\n\nexport type SignInCustomerAction =\n    SignInCustomerRequestedAction |\n    SignInCustomerSucceededAction |\n    SignInCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport type SignOutCustomerAction =\n    SignOutCustomerRequestedAction |\n    SignOutCustomerSucceededAction |\n    SignOutCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport interface SignInCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignInCustomerRequested;\n}\n\nexport interface SignInCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignInCustomerSucceeded;\n}\n\nexport interface SignInCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignInCustomerFailed;\n}\n\nexport interface SignOutCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignOutCustomerRequested;\n}\n\nexport interface SignOutCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignOutCustomerSucceeded;\n}\n\nexport interface SignOutCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignOutCustomerFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderAction } from '../order';\n\nimport PaymentResponseBody from './payment-response-body';\n\nexport enum PaymentActionType {\n    SubmitPaymentRequested = 'SUBMIT_PAYMENT_REQUESTED',\n    SubmitPaymentSucceeded = 'SUBMIT_PAYMENT_SUCCEEDED',\n    SubmitPaymentFailed = 'SUBMIT_PAYMENT_FAILED',\n\n    InitializeOffsitePaymentRequested = 'INITIALIZE_OFFSITE_PAYMENT_REQUESTED',\n    InitializeOffsitePaymentSucceeded = 'INITIALIZE_OFFSITE_PAYMENT_SUCCEEDED',\n    InitializeOffsitePaymentFailed = 'INITIALIZE_OFFSITE_PAYMENT_FAILED',\n}\n\nexport type PaymentAction = SubmitPaymentAction |\n    InitializeOffsitePaymentAction;\n\nexport type SubmitPaymentAction =\n    SubmitPaymentRequestedAction |\n    SubmitPaymentSucceededAction |\n    SubmitPaymentFailedAction |\n    LoadOrderAction;\n\nexport type InitializeOffsitePaymentAction =\n    InitializeOffsitePaymentRequestedAction |\n    InitializeOffsitePaymentSucceededAction |\n    InitializeOffsitePaymentFailedAction;\n\nexport interface SubmitPaymentRequestedAction extends Action {\n    type: PaymentActionType.SubmitPaymentRequested;\n}\n\nexport interface SubmitPaymentSucceededAction extends Action<PaymentResponseBody> {\n    type: PaymentActionType.SubmitPaymentSucceeded;\n}\n\nexport interface SubmitPaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.SubmitPaymentFailed;\n}\n\nexport interface InitializeOffsitePaymentRequestedAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentRequested;\n}\n\nexport interface InitializeOffsitePaymentSucceededAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentSucceeded;\n}\n\nexport interface InitializeOffsitePaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.InitializeOffsitePaymentFailed;\n}\n","module.exports = require(\"@bigcommerce/request-sender\");","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","export default class CacheKeyResolver {\n    private _lastId = 0;\n    private _maps: CacheKeyMap[] = [];\n\n    getKey(...args: any[]): string {\n        const { index, map, parentMaps } = this._resolveMap(...args);\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n\n            return map.cacheKey;\n        }\n\n        return this._generateKey(parentMaps, args.slice(index));\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMaps = this._maps;\n\n        while (parentMaps.length) {\n            let isMatched = false;\n\n            for (const map of parentMaps) {\n                if (map.value !== args[index]) {\n                    continue;\n                }\n\n                if ((args.length === 0 || index === args.length - 1) && map.cacheKey) {\n                    return { index, map, parentMaps };\n                }\n\n                isMatched = true;\n                parentMaps = map.maps;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMaps };\n    }\n\n    private _generateKey(maps: CacheKeyMap[], args: any[]): string {\n        let index = 0;\n        let parentMaps = maps;\n        let map!: CacheKeyMap;\n\n        do {\n            map = {\n                usedCount: 1,\n                value: args[index],\n                maps: [],\n            };\n\n            parentMaps.push(map);\n\n            parentMaps = map.maps;\n            index++;\n        } while (index < args.length);\n\n        map.cacheKey = `${++this._lastId}`;\n\n        return map.cacheKey;\n    }\n}\n\ninterface CacheKeyMap {\n    maps: CacheKeyMap[];\n    value: any;\n    usedCount: number;\n    cacheKey?: string;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMaps: CacheKeyMap[];\n    map?: CacheKeyMap;\n}\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\n\n@selector\nexport default class CheckoutButtonErrorSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    getInitializeButtonError(methodId?: string): Error | undefined {\n        return this._checkoutButton.getInitializeError(methodId);\n    }\n\n    getDeinitializeButtonError(methodId?: string): Error | undefined {\n        return this._checkoutButton.getDeinitializeError(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\n\n@selector\nexport default class CheckoutButtonStatusSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    isInitializingButton(methodId?: string): boolean {\n        return this._checkoutButton.isInitializing(methodId);\n    }\n\n    isDeinitializingButton(methodId?: string): boolean {\n        return this._checkoutButton.isDeinitializing(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\n\nimport CheckoutButtonErrorSelector from './checkout-button-error-selector';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStatusSelector from './checkout-button-status-selector';\n\nexport default function createCheckoutButtonSelectors(selectors: InternalCheckoutSelectors): CheckoutButtonSelectors {\n    const errors = new CheckoutButtonErrorSelector(selectors);\n    const statuses = new CheckoutButtonStatusSelector(selectors);\n\n    return {\n        errors,\n        statuses,\n    };\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../checkout';\n\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonSelectors from './create-checkout-button-selectors';\n\nexport default class CheckoutButtonInitializer {\n    private _state: CheckoutButtonSelectors;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _buttonStrategyActionCreator: CheckoutButtonStrategyActionCreator\n    ) {\n        this._state = createCheckoutButtonSelectors(this._store.getState());\n\n        this._store.subscribe(state => {\n            this._state = createCheckoutButtonSelectors(state);\n        });\n    }\n\n    /**\n     * Returns a snapshot of the current state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * state. You can query the state by calling any of its getter methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.errors.getInitializeButtonError());\n     * console.log(state.statuses.isInitializingButton());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutButtonSelectors {\n        return this._state;\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the current state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.statuses.isInitializingButton());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.errors.getInitializeButtonError();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.errors.getInitializeButtonError())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutButtonSelectors) => void,\n        ...filters: Array<(state: CheckoutButtonSelectors) => any>\n    ): () => void {\n        return this._store.subscribe(\n            () => subscriber(this.getState()),\n            state => state.checkoutButton.getState(),\n            ...filters.map(filter => (state: InternalCheckoutSelectors) => filter(createCheckoutButtonSelectors(state)))\n        );\n    }\n\n    /**\n     * Initializes the checkout button of a payment method.\n     *\n     * When the checkout button is initialized, it will be inserted into the DOM,\n     * ready to be interacted with by the customer.\n     *\n     * ```js\n     * initializer.initializeButton({\n     *     methodId: 'braintreepaypal',\n     *     braintreepaypal: {\n     *         container: '#checkoutButton',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeButton(options: CheckoutButtonInitializeOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.initialize(options);\n\n        return this._store.dispatch(action, { queueId: `${options.methodId}ButtonStrategy` })\n            .then(() => this.getState());\n    }\n\n    /**\n     * De-initializes the checkout button by performing any necessary clean-ups.\n     *\n     * ```js\n     * await service.deinitializeButton({\n     *     methodId: 'braintreepaypal',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeButton(options: CheckoutButtonOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.deinitialize(options);\n\n        return this._store.dispatch(action, { queueId: `${options.methodId}ButtonStrategy` })\n            .then(() => this.getState());\n    }\n}\n","import { createAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { of } from 'rxjs/observable/of';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\n\nimport { throwErrorAction } from '../common/error';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator } from '../payment';\n\nimport { CheckoutButtonActionType, DeinitializeButtonAction, InitializeButtonAction } from './checkout-button-actions';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport { CheckoutButtonStrategy } from './strategies';\n\nexport default class CheckoutButtonStrategyActionCreator {\n    constructor(\n        private _registry: Registry<CheckoutButtonStrategy>,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Observable<InitializeButtonAction> {\n        const meta = { methodId: options.methodId };\n\n        return concat(\n            of(createAction(CheckoutButtonActionType.InitializeButtonRequested, undefined, meta)),\n            this._paymentMethodActionCreator.loadPaymentMethod(options.methodId, options),\n            defer(() => this._registry.get(options.methodId).initialize(options)\n                .then(() => createAction(CheckoutButtonActionType.InitializeButtonSucceeded, undefined, meta)))\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutButtonActionType.InitializeButtonFailed, error, meta))\n        );\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Observable<DeinitializeButtonAction> {\n        const meta = { methodId: options.methodId };\n\n        return concat(\n            of(createAction(CheckoutButtonActionType.DeinitializeButtonRequested, undefined, meta)),\n            defer(() => this._registry.get(options.methodId).deinitialize(options)\n                .then(() => createAction(CheckoutButtonActionType.DeinitializeButtonSucceeded, undefined, meta)))\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutButtonActionType.DeinitializeButtonFailed, error, meta))\n        );\n    }\n}\n","import { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from '../checkout-button-options';\n\nexport default abstract class CheckoutButtonStrategy {\n    protected _isInitialized = false;\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        this._isInitialized = true;\n\n        return Promise.resolve();\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Promise<void> {\n        this._isInitialized = false;\n\n        return Promise.resolve();\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { Address, LegacyAddress } from '../../address';\nimport { CheckoutActionCreator, CheckoutStore } from '../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../common/error/errors';\nimport { PaymentMethod } from '../../payment';\nimport { BraintreeAddress, BraintreeError, BraintreePaypalCheckout, BraintreeSDKCreator, BraintreeTokenizePayload } from '../../payment/strategies/braintree';\nimport { PaypalAuthorizeData, PaypalScriptLoader } from '../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from '../checkout-button-options';\n\nimport CheckoutButtonStrategy from './checkout-button-strategy';\n\nexport default class BraintreePaypalButtonStrategy extends CheckoutButtonStrategy {\n    private _paypalCheckout?: BraintreePaypalCheckout;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _offerCredit: boolean = false\n    ) {\n        super();\n    }\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        if (this._isInitialized) {\n            return super.initialize(options);\n        }\n\n        const paypalOptions = this._offerCredit ? options.braintreepaypalcredit : options.braintreepaypal;\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paypalOptions) {\n            throw new InvalidArgumentError();\n        }\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return Promise.all([\n            this._braintreeSDKCreator.getPaypalCheckout(),\n            this._paypalScriptLoader.loadPaypal(),\n        ])\n            .then(([paypalCheckout, paypal]) => {\n                this._paypalCheckout = paypalCheckout;\n\n                return paypal.Button.render({\n                    env: paymentMethod.config.testMode ? 'sandbox' : 'production',\n                    commit: paypalOptions.shouldProcessPayment ? true : false,\n                    style: {\n                        shape: 'rect',\n                        label: this._offerCredit ? 'credit' : undefined,\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: () => this._setupPayment(paypalOptions.onPaymentError),\n                    onAuthorize: data => this._tokenizePayment(data, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, paypalOptions.container);\n            })\n            .then(() => super.initialize(options));\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Promise<void> {\n        if (!this._isInitialized) {\n            return super.deinitialize(options);\n        }\n\n        this._paypalCheckout = undefined;\n        this._paymentMethod = undefined;\n\n        this._braintreeSDKCreator.teardown();\n\n        return super.deinitialize(options);\n    }\n\n    private _setupPayment(onError?: (error: BraintreeError | StandardError) => void): Promise<string> {\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const checkout = state.checkout.getCheckout();\n                const config = state.config.getStoreConfig();\n                const customer = state.customer.getCustomer();\n                const address = customer && customer.addresses && customer.addresses[0];\n\n                if (!this._paypalCheckout) {\n                    throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                return this._paypalCheckout.createPayment({\n                    flow: 'checkout',\n                    enableShippingAddress: true,\n                    shippingAddressEditable: false,\n                    shippingAddressOverride: address ? this._mapToBraintreeAddress(address) : undefined,\n                    amount: checkout.grandTotal,\n                    currency: config.currency.code,\n                    offerCredit: this._offerCredit,\n                });\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        shouldProcessPayment?: boolean,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<BraintreeTokenizePayload> {\n        if (!this._paypalCheckout || !this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return Promise.all([\n            this._paypalCheckout.tokenizePayment(data),\n            this._braintreeSDKCreator.getDataCollector({ paypal: true }),\n        ])\n            .then(([payload, { deviceData }]) => {\n                this._formPoster.postForm('/checkout.php', {\n                    payment_type: 'paypal',\n                    provider: methodId,\n                    action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                    nonce: payload.nonce,\n                    device_data: deviceData,\n                    shipping_address: JSON.stringify(this._mapToLegacyShippingAddress(payload)),\n                    billing_address: JSON.stringify(this._mapToLegacyBillingAddress(payload)),\n                });\n\n                return payload;\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _mapToLegacyShippingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const shippingAddress = payload.details.shippingAddress;\n        const recipientName = shippingAddress && shippingAddress.recipientName || '';\n        const [firstName, lastName] = recipientName.split(' ');\n\n        return {\n            email: payload.details.email,\n            first_name: firstName,\n            last_name: lastName,\n            phone_number: shippingAddress && shippingAddress.phone || payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToLegacyBillingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const billingAddress = payload.details.billingAddress;\n        const shippingAddress = payload.details.shippingAddress;\n\n        if (billingAddress) {\n            return {\n                email: payload.details.email,\n                first_name: billingAddress.firstName || payload.details.firstName,\n                last_name: billingAddress.lastName || payload.details.lastName,\n                phone_number: billingAddress.phone || payload.details.phone,\n                address_line_1: billingAddress.line1,\n                address_line_2: billingAddress.line2,\n                city: billingAddress.city,\n                state: billingAddress.state,\n                country_code: billingAddress.countryCode,\n                postal_code: billingAddress.postalCode,\n            };\n        }\n\n        return {\n            email: payload.details.email,\n            first_name: payload.details.firstName,\n            last_name: payload.details.lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToBraintreeAddress(address: Address): BraintreeAddress {\n        return {\n            line1: address.address1,\n            line2: address.address2,\n            city: address.city,\n            state: address.stateOrProvinceCode,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phone,\n            recipientName: `${address.firstName} ${address.lastName}`,\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { Checkout, CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { PaymentInitializeOptions, PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { GooglePayAddress, GooglePayBraintreeSDK, GooglePayPaymentOptions, GooglePayPaymentStrategy, GooglePayScriptLoader, GooglePaySDK } from '../../../payment/strategies/googlepay';\nimport GooglePayPaymentProcessor from '../../../payment/strategies/googlepay/googlepay-payment-processor';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nimport { GooglePayBraintreeButtonInitializeOptions } from './googlepay-braintree-button-options';\n\nexport default class GooglePayBraintreeButtonStrategy extends CheckoutButtonStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _methodId!: string;\n    private _checkout?: Checkout;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _formPoster: FormPoster,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {\n        super();\n    }\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        if (this._isInitialized) {\n            return super.initialize(options);\n        }\n\n        const { googlepaybraintree, methodId } = options;\n\n        if (!googlepaybraintree || !methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._methodId = methodId;\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(stateCheckout => {\n                this._checkout = stateCheckout.checkout.getCheckout();\n                if (!this._checkout || !this._checkout.cart.id) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                return this._googlePayPaymentProcessor.initialize(methodId)\n                    .then(() => {\n                        this._walletButton = this._createSignInButton(googlepaybraintree.container);\n\n                        if (this._walletButton) {\n                            this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n                        }\n                    });\n            }).then(() => super.initialize(options));\n    }\n\n    deinitialize(options: CheckoutButtonOptions): Promise<void> {\n        if (!this._isInitialized) {\n            return super.deinitialize(options);\n        }\n\n        this._paymentMethod = undefined;\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => super.deinitialize(options));\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const googlePayButton = this._googlePayPaymentProcessor.createButton(() => this._onPaymentSelectComplete);\n\n        container.appendChild(googlePayButton);\n\n        return googlePayButton;\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n\n        let billingAddress: GooglePayAddress;\n        let shippingAddress: GooglePayAddress;\n\n        return this._googlePayPaymentProcessor.displayWallet()\n            .then(paymentData => {\n                billingAddress = paymentData.cardInfo.billingAddress;\n                shippingAddress = paymentData.shippingAddress;\n                return this._googlePayPaymentProcessor.handleSuccess(paymentData);\n            })\n            .then(() => {\n                return Promise.all([\n                    this._googlePayPaymentProcessor.updateBillingAddress(billingAddress),\n                    // this._googlePayPaymentProcessor.updateShippingAddress(shippingAddress),\n                ]).then(() => this._onPaymentSelectComplete());\n            });\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n\n    private _onError(error?: Error): void {\n        if (error) {\n            throw new Error(error.message);\n        }\n    }\n\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { createCheckoutStore } from '../checkout';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\n\nimport CheckoutButtonInitializer from './checkout-button-initializer';\nimport CheckoutButtonInitializerOptions from './checkout-button-initializer-options';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonRegistry from './create-checkout-button-registry';\n\n/**\n * Creates an instance of `CheckoutButtonInitializer`.\n *\n * ```js\n * const initializer = createCheckoutButtonInitializer();\n *\n * initializer.initializeButton({\n *     methodId: 'braintreepaypal',\n *     braintreepaypal: {\n *         container: '#checkoutButton',\n *     },\n * });\n * ```\n *\n * Please note that `CheckoutButtonInitializer` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @alpha\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutButtonInitializer`.\n */\nexport default function createCheckoutButtonInitializer(\n    options?: CheckoutButtonInitializerOptions\n): CheckoutButtonInitializer {\n    const store = createCheckoutStore();\n    const requestSender = createRequestSender();\n\n    return new CheckoutButtonInitializer(\n        store,\n        new CheckoutButtonStrategyActionCreator(\n            createCheckoutButtonRegistry(store, requestSender),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender))\n        )\n    );\n}\n","import { createFormPoster, FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport CheckoutValidator from '../checkout/checkout-validator';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { createPaymentClient, PaymentActionCreator, PaymentMethodActionCreator, PaymentMethodRequestSender, PaymentRequestSender, PaymentStrategyActionCreator, PaymentStrategyRegistry } from '../payment';\nimport { BraintreeScriptLoader, BraintreeSDKCreator } from '../payment/strategies/braintree';\nimport { GooglePayBraintreeInitializer, GooglePayPaymentStrategy, GooglePayScriptLoader } from '../payment/strategies/googlepay';\nimport GooglePayPaymentProcessor from '../payment/strategies/googlepay/googlepay-payment-processor';\nimport { PaypalScriptLoader } from '../payment/strategies/paypal';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\nimport { createShippingStrategyRegistry, ConsignmentActionCreator, ConsignmentRequestSender, ShippingStrategyActionCreator } from '../shipping';\n\nimport { BraintreePaypalButtonStrategy, CheckoutButtonStrategy, GooglePayBraintreeButtonStrategy } from './strategies';\n\nexport default function createCheckoutButtonRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<CheckoutButtonStrategy> {\n    const registry = new Registry<CheckoutButtonStrategy>();\n    const scriptLoader = getScriptLoader();\n    const paymentClient = createPaymentClient(store);\n    const checkoutActionCreator = new CheckoutActionCreator(\n        new CheckoutRequestSender(requestSender),\n        new ConfigActionCreator(new ConfigRequestSender(requestSender))\n    );\n    const paymentRequestSender = new PaymentRequestSender(paymentClient);\n    const orderActionCreator = new OrderActionCreator(\n        new OrderRequestSender(requestSender),\n        new CheckoutValidator(new CheckoutRequestSender(requestSender)));\n    const googlepayScriptLoader = new GooglePayScriptLoader(scriptLoader);\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const formPoster = createFormPoster();\n\n    registry.register('braintreepaypal', () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            formPoster\n        )\n    );\n\n    registry.register('braintreepaypalcredit', () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            formPoster,\n            true\n        )\n    );\n\n    registry.register('googlepaybraintree', () =>\n        new GooglePayBraintreeButtonStrategy(\n            store,\n            formPoster,\n            googlepayScriptLoader,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            new GooglePayPaymentProcessor(\n                store,\n                paymentMethodActionCreator,\n                new GooglePayScriptLoader(scriptLoader),\n                new GooglePayBraintreeInitializer(braintreeSDKCreator),\n                new BillingAddressActionCreator(new BillingAddressRequestSender(requestSender)),\n                new ShippingStrategyActionCreator(createShippingStrategyRegistry(store, requestSender)),\n                requestSender\n            )\n        )\n    );\n\n    return registry;\n}\n","module.exports = require(\"@bigcommerce/form-poster\");","import { Action } from '@bigcommerce/data-store';\nimport { from } from 'rxjs/observable/from';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, Subscribable } from 'rxjs/Observable';\n\nimport { RequestErrorFactory } from '../common/error';\n\nexport default function createActionTransformer(\n    requestErrorFactory: RequestErrorFactory\n): (action: Subscribable<Action>) => Observable<Action> {\n    return action$ => from(action$).pipe(catchError<Action, never>(action => {\n        if (action instanceof Error || action.payload instanceof Error) {\n            throw action;\n        }\n\n        if (isResponse(action.payload)) {\n            throw { ...action, payload: requestErrorFactory.createError(action.payload) };\n        }\n\n        throw action;\n    }));\n}\n\nfunction isResponse(object: any) {\n    if (!object || typeof object !== 'object') {\n        return false;\n    }\n\n    return ['body', 'headers', 'status', 'statusText'].every(key =>\n        object.hasOwnProperty(key)\n    );\n}\n","import { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { selector } from '../common/selector';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector } from '../customer';\nimport { ConsignmentSelector } from '../shipping';\n\nimport Checkout from './checkout';\nimport CheckoutState from './checkout-state';\n\n@selector\nexport default class CheckoutSelector {\n    constructor(\n        private _checkout: CheckoutState,\n        private _billingAddress: BillingAddressSelector,\n        private _cart: CartSelector,\n        private _consignments: ConsignmentSelector,\n        private _coupons: CouponSelector,\n        private _customer: CustomerSelector,\n        private _giftCertificates: GiftCertificateSelector\n    ) {}\n\n    getCheckout(): Checkout | undefined {\n        const { data } = this._checkout;\n        const billingAddress = this._billingAddress.getBillingAddress();\n        const cart = this._cart.getCart();\n        const customer = this._customer.getCustomer();\n        const consignments = this._consignments.getConsignments() || [];\n        const coupons = this._coupons.getCoupons() || [];\n        const giftCertificates = this._giftCertificates.getGiftCertificates() || [];\n\n        if (!data || !cart || !customer) {\n            return;\n        }\n\n        return {\n            ...data,\n            billingAddress,\n            cart,\n            customer,\n            consignments,\n            coupons,\n            giftCertificates,\n        };\n    }\n\n    getLoadError(): Error | undefined {\n        return this._checkout.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return this._checkout.statuses.isLoading === true;\n    }\n\n    getUpdateError(): Error | undefined {\n        return this._checkout.errors.updateError;\n    }\n\n    isUpdating(): boolean {\n        return this._checkout.statuses.isUpdating === true;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport { CheckoutAction, CheckoutActionType } from './checkout-actions';\nimport CheckoutState, { CheckoutDataState, CheckoutErrorsState, CheckoutStatusesState } from './checkout-state';\n\nconst DEFAULT_STATE: CheckoutState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function checkoutReducer(\n    state: CheckoutState = DEFAULT_STATE,\n    action: Action\n): CheckoutState {\n    const reducer = combineReducers<CheckoutState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutDataState | undefined,\n    action: CheckoutAction | BillingAddressAction | ConsignmentAction | CouponAction | GiftCertificateAction | OrderAction\n): CheckoutDataState | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return action.payload\n            ? omit({ ...data, ...action.payload }, ['billingAddress', 'cart', 'consignments', 'customer', 'coupons', 'giftCertifcates'])\n            : data;\n\n    case OrderActionType.SubmitOrderSucceeded:\n        return action.payload && data\n            ? { ...data, orderId: action.payload.order.orderId }\n            : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CheckoutErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | OrderAction\n): CheckoutErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return {\n            ...errors,\n            loadError: undefined,\n        };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return {\n            ...errors,\n            loadError: action.payload,\n        };\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return {\n            ...errors,\n            updateError: undefined,\n        };\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n        return {\n            ...errors,\n            updateError: action.payload,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | OrderAction\n): CheckoutStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return {\n            ...statuses,\n            isLoading: true,\n        };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return {\n            ...statuses,\n            isLoading: false,\n        };\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n        return {\n            ...statuses,\n            isUpdating: true,\n        };\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return {\n            ...statuses,\n            isUpdating: false,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport BillingAddress from './billing-address';\nimport BillingAddressState from './billing-address-state';\n\n@selector\nexport default class BillingAddressSelector {\n    constructor(\n        private _billingAddress: BillingAddressState\n    ) {}\n\n    getBillingAddress(): BillingAddress | undefined {\n        return this._billingAddress.data;\n    }\n\n    getUpdateError(): Error | undefined {\n        return this._billingAddress.errors.updateError;\n    }\n\n    getContinueAsGuestError(): Error | undefined {\n        return this._billingAddress.errors.continueAsGuestError;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._billingAddress.errors.loadError;\n    }\n\n    isUpdating(): boolean {\n        return !!this._billingAddress.statuses.isUpdating;\n    }\n\n    isContinuingAsGuest(): boolean {\n        return !!this._billingAddress.statuses.isContinuingAsGuest;\n    }\n\n    isLoading(): boolean {\n        return !!this._billingAddress.statuses.isLoading;\n    }\n}\n","import { deepFreeze } from '@bigcommerce/data-store';\n\n// tslint:disable-next-line:ban-types\ntype FunctionProperties<T> = { [K in keyof T]: T[K] extends Function ? T[K] : never };\n\nexport default function createFreezeProxy<T extends object>(target: T): T {\n    return createProxy(target, (target, name) =>\n        (...args: any[]) => deepFreeze(target[name].call(target, ...args))\n    );\n}\n\nexport function createFreezeProxies<T extends { [key: string]: object }>(map: T): T {\n    return Object.keys(map)\n        .reduce((result, key) => {\n            result[key] = createFreezeProxy(map[key]);\n\n            return result;\n        }, {} as T);\n}\n\nfunction createProxy<T extends object>(target: T, trap: (target: FunctionProperties<T>, name: keyof FunctionProperties<T>, proxy: T) => any): T {\n    const proxy = Object.create(target);\n\n    traversePrototypeOf(target, prototype => {\n        Object.getOwnPropertyNames(prototype)\n            .forEach(name => {\n                if (name === 'constructor' || typeof proxy[name] !== 'function' || name.charAt(0) === '_') {\n                    return;\n                }\n\n                proxy[name] = trap(target as FunctionProperties<T>, name as keyof T, proxy);\n            });\n    });\n\n    return proxy;\n}\n\nfunction traversePrototypeOf(target: object, iteratee: (prototype: object) => void): void {\n    let prototype = Object.getPrototypeOf(target);\n\n    while (prototype) {\n        iteratee(prototype);\n\n        prototype = Object.getPrototypeOf(prototype);\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Config, { ContextConfig, StoreConfig } from './config';\nimport ConfigState from './config-state';\n\n@selector\nexport default class ConfigSelector {\n    constructor(\n        private _config: ConfigState\n    ) {}\n\n    getConfig(): Config | undefined {\n        return this._config.data;\n    }\n\n    getStoreConfig(): StoreConfig | undefined {\n        return this._config.data && this._config.data.storeConfig;\n    }\n\n    getContextConfig(): ContextConfig | undefined {\n        return this._config.data && this._config.data.context;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._config.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._config.statuses.isLoading;\n    }\n}\n","import { find } from 'lodash';\n\nimport { selector } from '../common/selector';\nimport { ConfigState } from '../config';\nimport { Country } from '../geography';\n\nimport FormField from './form-field';\n\n@selector\nexport default class FormSelector {\n    constructor(\n        private _config: ConfigState\n    ) {}\n\n    getShippingAddressFields(countries: Country[] = [], countryCode: string): FormField[] {\n        const selectedCountry = find(countries, { code: countryCode });\n        const fields = this._config.data ? this._config.data.storeConfig.formFields.shippingAddressFields : [];\n\n        return fields.map((field: any) => this._processField(field, countries, selectedCountry));\n    }\n\n    getBillingAddressFields(countries: Country[] = [], countryCode: string): FormField[] {\n        const selectedCountry = find(countries, { code: countryCode });\n        const fields = this._config.data ? this._config.data.storeConfig.formFields.billingAddressFields : [];\n\n        return fields.map((field: any) => this._processField(field, countries, selectedCountry));\n    }\n\n    private _processField(field: FormField, countries: Country[], selectedCountry?: Country): FormField {\n        if (field.name === 'countryCode') {\n            return this._processCountry(field, countries, selectedCountry);\n        }\n\n        if (field.name === 'stateOrProvince') {\n            return this._processProvince(field, selectedCountry);\n        }\n\n        if (field.name === 'postalCode') {\n            return this._processsPostCode(field, selectedCountry);\n        }\n\n        return field;\n    }\n\n    private _processCountry(field: FormField, countries: Country[] = [], country?: Country): FormField {\n        if (!countries.length) {\n            return field;\n        }\n\n        const { code = '' } = country || {};\n        const items = countries.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            options: { items },\n            default: code,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    private _processProvince(field: FormField, country?: Country): FormField {\n        const { subdivisions = [] } = country || {};\n\n        if (!subdivisions.length) {\n            return {\n                ...field,\n                required: false,\n            };\n        }\n\n        const items = subdivisions.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            name: 'stateOrProvinceCode',\n            options: { items },\n            required: true,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    private _processsPostCode(field: FormField, country?: Country): FormField {\n        const { hasPostalCodes = [] } = country || {};\n\n        if (hasPostalCodes === undefined) {\n            return field;\n        }\n\n        return { ...field, required: Boolean(hasPostalCodes) };\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Country from './country';\nimport CountryState from './country-state';\n\n@selector\nexport default class CountrySelector {\n    constructor(\n        private _countries: CountryState\n    ) {}\n\n    getCountries(): Country[] | undefined {\n        return this._countries.data;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._countries.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._countries.statuses.isLoading;\n    }\n}\n","import { find } from 'lodash';\n\nimport { CheckoutPayment, CheckoutSelector } from '../checkout';\nimport { selector } from '../common/selector';\nimport { GatewayOrderPayment, InternalOrderPayment, OrderSelector } from '../order';\n\nimport PaymentMethod from './payment-method';\nimport { HOSTED } from './payment-method-types';\nimport { ACKNOWLEDGE, FINALIZE } from './payment-status-types';\n\n@selector\nexport default class PaymentSelector {\n    constructor(\n        private _checkout: CheckoutSelector,\n        private _order: OrderSelector\n    ) {}\n\n    getPaymentId(): { providerId: string, gatewayId?: string } | undefined {\n        const internalPayment = this._getInternalPayment();\n\n        if (internalPayment && internalPayment.id) {\n            return {\n                providerId: internalPayment.id,\n                gatewayId: internalPayment.gateway,\n            };\n        }\n\n        const payment = this._getHostedPayment() || this._getGatewayPayment();\n\n        if (payment && payment.providerId) {\n            return {\n                providerId: payment.providerId,\n                gatewayId: payment.gatewayId,\n            };\n        }\n    }\n\n    getPaymentStatus(): string | undefined {\n        const internalPayment = this._getInternalPayment();\n\n        if (internalPayment && internalPayment.status) {\n            return internalPayment.status.replace('PAYMENT_STATUS_', '');\n        }\n\n        const payment = this._getHostedPayment() || this._getGatewayPayment();\n\n        if (payment) {\n            return payment.detail.step;\n        }\n    }\n\n    getPaymentToken(): string | undefined {\n        const meta = this._order.getOrderMeta();\n\n        return meta && meta.token;\n    }\n\n    getPaymentRedirectUrl(): string | undefined {\n        const payment = this._getInternalPayment();\n\n        return payment && payment.redirectUrl;\n    }\n\n    isPaymentDataRequired(useStoreCredit: boolean = false): boolean {\n        const checkout = this._checkout.getCheckout();\n\n        if (!checkout) {\n            return false;\n        }\n\n        const grandTotal = checkout.grandTotal || 0;\n        const storeCredit = checkout.customer.storeCredit || 0;\n\n        return (useStoreCredit ? grandTotal - storeCredit : grandTotal) > 0;\n    }\n\n    isPaymentDataSubmitted(paymentMethod?: PaymentMethod): boolean {\n        if (paymentMethod && paymentMethod.nonce) {\n            return true;\n        }\n\n        return this.getPaymentStatus() === ACKNOWLEDGE || this.getPaymentStatus() === FINALIZE;\n    }\n\n    private _getInternalPayment(): InternalOrderPayment | undefined {\n        const meta = this._order.getOrderMeta();\n\n        return meta && meta.payment;\n    }\n\n    private _getGatewayPayment(): GatewayOrderPayment | undefined {\n        const order = this._order.getOrder();\n\n        return find(order && order.payments, ({ providerId }) =>\n            providerId !== 'giftcertificate' && providerId !== 'storecredit'\n        ) as GatewayOrderPayment;\n    }\n\n    private _getHostedPayment(): CheckoutPayment | undefined {\n        const checkout = this._checkout.getCheckout();\n\n        return find(checkout && checkout.payments, ({ providerType }) =>\n            providerType === HOSTED\n        );\n    }\n}\n","import { find } from 'lodash';\n\nimport { selector } from '../common/selector';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState from './payment-method-state';\n\n@selector\nexport default class PaymentMethodSelector {\n    constructor(\n        private _paymentMethods: PaymentMethodState\n    ) {}\n\n    getPaymentMethods(): PaymentMethod[] | undefined {\n        return this._paymentMethods.data;\n    }\n\n    getPaymentMethodsMeta(): PaymentMethodMeta | undefined {\n        return this._paymentMethods.meta;\n    }\n\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined {\n        return gatewayId ?\n            find(this._paymentMethods.data, { id: methodId, gateway: gatewayId }) :\n            find(this._paymentMethods.data, { id: methodId });\n    }\n\n    getLoadError(): Error | undefined {\n        return this._paymentMethods.errors && this._paymentMethods.errors.loadError;\n    }\n\n    getLoadMethodError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentMethods.errors.loadMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentMethods.errors.loadMethodError;\n    }\n\n    isLoading(): boolean {\n        return !!this._paymentMethods.statuses.isLoading;\n    }\n\n    isLoadingMethod(methodId?: string): boolean {\n        if (methodId && this._paymentMethods.statuses.loadMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentMethods.statuses.isLoadingMethod;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport PaymentStrategyState, { DEFAULT_STATE } from './payment-strategy-state';\n\n@selector\nexport default class PaymentStrategySelector {\n    constructor(\n        private _paymentStrategies: PaymentStrategyState = DEFAULT_STATE\n    ) {}\n\n    getInitializeError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.initializeMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.initializeError;\n    }\n\n    getExecuteError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.executeMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.executeError;\n    }\n\n    getFinalizeError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.finalizeMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.finalizeError;\n    }\n\n    getWidgetInteractingError(methodId?: string): Error | undefined {\n        if (methodId && this._paymentStrategies.errors.widgetInteractionMethodId !== methodId) {\n            return;\n        }\n\n        return this._paymentStrategies.errors.widgetInteractionError;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.initializeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isInitializing;\n    }\n\n    isExecuting(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.executeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isExecuting;\n    }\n\n    isFinalizing(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.finalizeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isFinalizing;\n    }\n\n    isWidgetInteracting(methodId?: string): boolean {\n        if (methodId && this._paymentStrategies.statuses.widgetInteractionMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._paymentStrategies.statuses.isWidgetInteracting;\n    }\n}\n","import Instrument from './instrument';\nimport InstrumentState, { InstrumentMeta } from './instrument-state';\n\nexport default class InstrumentSelector {\n    constructor(\n        private _instruments: InstrumentState\n    ) {}\n\n    getInstruments(): Instrument[] | undefined {\n        return this._instruments.data;\n    }\n\n    getInstrumentsMeta(): InstrumentMeta | undefined {\n        return this._instruments.meta;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._instruments.errors && this._instruments.errors.loadError;\n    }\n\n    getDeleteError(instrumentId?: string): Error | undefined {\n        if (!this._instruments.errors || (instrumentId && this._instruments.errors.failedInstrument !== instrumentId)) {\n            return;\n        }\n\n        return this._instruments.errors.deleteError;\n    }\n\n    isLoading(): boolean {\n        return !!(this._instruments.statuses && this._instruments.statuses.isLoading);\n    }\n\n    isDeleting(instrumentId?: string): boolean {\n        if (!this._instruments.statuses || (instrumentId && this._instruments.statuses.deletingInstrument !== instrumentId)) {\n            return false;\n        }\n\n        return !!this._instruments.statuses.isDeleting;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport RemoteCheckoutState, { RemoteCheckoutStateData } from './remote-checkout-state';\n\n@selector\nexport default class RemoteCheckoutSelector {\n    constructor(\n        private _remoteCheckout: RemoteCheckoutState\n    ) {}\n\n    getCheckout<TMethodId extends keyof RemoteCheckoutStateData>(\n        methodId: TMethodId\n    ): RemoteCheckoutStateData[TMethodId] | undefined {\n        return this._remoteCheckout.data[methodId];\n    }\n}\n","import { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { CheckoutButtonSelector } from '../checkout-buttons';\nimport { createFreezeProxies } from '../common/utility';\nimport { ConfigSelector } from '../config';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector, CustomerStrategySelector } from '../customer';\nimport { FormSelector } from '../form';\nimport { CountrySelector } from '../geography';\nimport { OrderSelector } from '../order';\nimport { PaymentSelector } from '../payment';\nimport { PaymentMethodSelector, PaymentStrategySelector } from '../payment';\nimport { InstrumentSelector } from '../payment/instrument';\nimport { RemoteCheckoutSelector } from '../remote-checkout';\nimport { ConsignmentSelector, ShippingAddressSelector, ShippingCountrySelector, ShippingStrategySelector } from '../shipping';\n\nimport CheckoutSelector from './checkout-selector';\nimport { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default function createInternalCheckoutSelectors(state: CheckoutStoreState, options: CheckoutStoreOptions = {}): InternalCheckoutSelectors {\n    const billingAddress = new BillingAddressSelector(state.billingAddress);\n    const cart = new CartSelector(state.cart);\n    const checkoutButton = new CheckoutButtonSelector(state.checkoutButton);\n    const config = new ConfigSelector(state.config);\n    const countries = new CountrySelector(state.countries);\n    const coupons = new CouponSelector(state.coupons);\n    const customer = new CustomerSelector(state.customer);\n    const customerStrategies = new CustomerStrategySelector(state.customerStrategies);\n    const form = new FormSelector(state.config);\n    const giftCertificates = new GiftCertificateSelector(state.giftCertificates);\n    const instruments = new InstrumentSelector(state.instruments);\n    const paymentMethods = new PaymentMethodSelector(state.paymentMethods);\n    const paymentStrategies = new PaymentStrategySelector(state.paymentStrategies);\n    const shippingAddress = new ShippingAddressSelector(state.consignments);\n    const remoteCheckout = new RemoteCheckoutSelector(state.remoteCheckout);\n    const shippingCountries = new ShippingCountrySelector(state.shippingCountries);\n    const shippingStrategies = new ShippingStrategySelector(state.shippingStrategies);\n\n    // Compose selectors\n    const consignments = new ConsignmentSelector(state.consignments, cart);\n    const checkout = new CheckoutSelector(state.checkout, billingAddress, cart, consignments, coupons, customer, giftCertificates);\n    const order = new OrderSelector(state.order, billingAddress, coupons);\n    const payment = new PaymentSelector(checkout, order);\n\n    const selectors = {\n        billingAddress,\n        cart,\n        checkout,\n        checkoutButton,\n        config,\n        consignments,\n        countries,\n        coupons,\n        customer,\n        customerStrategies,\n        form,\n        giftCertificates,\n        instruments,\n        order,\n        payment,\n        paymentMethods,\n        paymentStrategies,\n        remoteCheckout,\n        shippingAddress,\n        shippingCountries,\n        shippingStrategies,\n    };\n\n    return options.shouldWarnMutation ? createFreezeProxies(selectors) : selectors;\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutButtonAction, CheckoutButtonActionType } from './checkout-button-actions';\nimport CheckoutButtonState, { CheckoutButtonErrorsState, CheckoutButtonStatusesState } from './checkout-button-state';\n\nconst DEFAULT_STATE: CheckoutButtonState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function checkoutButtonReducer(\n    state: CheckoutButtonState = DEFAULT_STATE,\n    action: Action\n): CheckoutButtonState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<CheckoutButtonState>({\n        errors: combineReducers({\n            [action.meta.methodId]: errorsReducer,\n        }),\n        statuses: combineReducers({\n            [action.meta.methodId]: statusesReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: CheckoutButtonErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutButtonAction\n): CheckoutButtonErrorsState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n        };\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutButtonStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutButtonAction\n): CheckoutButtonStatusesState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n        };\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n        };\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { find, map } from 'lodash';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { AddressRequestBody } from '../address';\nimport { Cart } from '../cart';\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport CheckoutRequestSender from '../checkout/checkout-request-sender';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport Consignment, {\n    ConsignmentsRequestBody,\n    ConsignmentAssignmentRequestBody,\n    ConsignmentCreateRequestBody,\n    ConsignmentLineItem,\n    ConsignmentRequestBody,\n    ConsignmentShippingOptionRequestBody,\n    ConsignmentUpdateRequestBody\n} from './consignment';\nimport {\n    ConsignmentActionType,\n    CreateConsignmentsAction,\n    DeleteConsignmentAction,\n    LoadShippingOptionsAction,\n    UpdateConsignmentAction,\n    UpdateShippingOptionAction,\n} from './consignment-actions';\nimport ConsignmentRequestSender from './consignment-request-sender';\n\nexport default class ConsignmentActionCreator {\n    constructor(\n        private _consignmentRequestSender: ConsignmentRequestSender,\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    assignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            return this._createOrUpdateConsignment({\n                id: existingConsignment && existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems: this._combineLineItems(\n                    consignment,\n                    existingConsignment,\n                    state.cart.getCart()\n                ),\n            }, options)(store);\n        };\n    }\n\n    selectShippingOption(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n            const consignments = state.consignments.getConsignments();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (!consignments || !consignments.length) {\n                throw new MissingDataError(MissingDataErrorType.MissingConsignments);\n            }\n\n            const consignmentUpdateBody = {\n                id: consignments[0].id,\n                shippingOptionId: id,\n            };\n\n            const consignmentMeta = {\n                id: consignments[0].id,\n            };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignmentUpdateBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(\n                        ConsignmentActionType.UpdateShippingOptionSucceeded,\n                        body,\n                        consignmentMeta\n                    ));\n\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(\n                        ConsignmentActionType.UpdateShippingOptionFailed,\n                        response,\n                        consignmentMeta\n                    ));\n                });\n        });\n    }\n\n    loadShippingOptions(options?: RequestOptions): ThunkAction<LoadShippingOptionsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadShippingOptionsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.LoadShippingOptionsRequested));\n\n            this._checkoutRequestSender.loadCheckout(checkout.id, {\n                ...options,\n                params: {\n                    include: ['consignments.availableShippingOptions'],\n                },\n            })\n            .then(({ body }) => {\n                observer.next(createAction(ConsignmentActionType.LoadShippingOptionsSucceeded, body));\n                observer.complete();\n            })\n            .catch(response => {\n                observer.error(createErrorAction(ConsignmentActionType.LoadShippingOptionsFailed, response));\n            });\n        });\n    }\n\n    updateAddress(\n        address: AddressRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const consignment = this._getConsignmentRequestBody(address, store);\n            const consignments = store.getState().consignments.getConsignments();\n\n            if (consignments && consignments.length) {\n                (consignment as ConsignmentUpdateRequestBody).id = consignments[0].id;\n            }\n\n            return this._createOrUpdateConsignment(consignment, options)(store);\n        };\n    }\n\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CreateConsignmentsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.CreateConsignmentsRequested));\n\n            this._consignmentRequestSender.createConsignments(checkout.id, consignments, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.CreateConsignmentsSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.CreateConsignmentsFailed, response));\n                });\n        });\n    }\n\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n            const consignmentMeta = { id: consignmentId };\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.DeleteConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.deleteConsignment(checkout.id, consignmentId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.DeleteConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.DeleteConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    updateShippingOption(\n        consignment: ConsignmentShippingOptionRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateShippingOptionSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateShippingOptionFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    private _createOrUpdateConsignment(\n        consignment: ConsignmentCreateRequestBody | ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (this._isUpdateConsignmentRequest(consignment)) {\n                return this.updateConsignment(consignment, options)(store);\n            }\n\n            return this.createConsignments([consignment], options)(store);\n        };\n    }\n\n    private _getConsignmentRequestBody(\n        shippingAddress: AddressRequestBody,\n        store: ReadableCheckoutStore\n    ): ConsignmentRequestBody {\n        const state = store.getState();\n        const cart = state.cart.getCart();\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return {\n            shippingAddress,\n            lineItems: (cart.lineItems && cart.lineItems.physicalItems || [])\n                .map(item => ({\n                    itemId: item.id,\n                    quantity: item.quantity,\n                })\n            ),\n        };\n    }\n\n    private _combineLineItems(\n        consignment: ConsignmentAssignmentRequestBody,\n        existingConsignment?: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!existingConsignment) {\n            return consignment.lineItems;\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        const existingLineItems = map(existingConsignment.lineItemIds, itemId => {\n            const item = find(cart.lineItems.physicalItems, { id: itemId });\n\n            return {\n                itemId,\n                quantity: item ? item.quantity : 0,\n            };\n        }) as ConsignmentLineItem[];\n\n        return existingLineItems.concat(consignment.lineItems);\n    }\n\n    private _isUpdateConsignmentRequest(\n        request: ConsignmentRequestBody\n    ): request is ConsignmentUpdateRequestBody {\n        const updateRequest = request as ConsignmentUpdateRequestBody;\n\n        return !!updateRequest.id;\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { ConsignmentsRequestBody, ConsignmentUpdateRequestBody } from './consignment';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'consignments.availableShippingOptions',\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class ConsignmentRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createConsignments(checkoutId: string, consignments: ConsignmentsRequestBody, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: consignments, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateConsignment(checkoutId: string, consignment: ConsignmentUpdateRequestBody, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = consignment;\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n\n    deleteConsignment(checkoutId: string, consignmentId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${consignmentId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, { params: DEFAULT_PARAMS, headers, timeout });\n    }\n}\n","export interface CompareOptions {\n    keyFilter?(key: string): boolean;\n}\n\nexport default function isEqual(objectA: any, objectB: any, options?: CompareOptions): boolean {\n    if (objectA === objectB) {\n        return true;\n    }\n\n    if (objectA && objectB && typeof objectA === 'object' && typeof objectB === 'object') {\n        if (Array.isArray(objectA) && Array.isArray(objectB)) {\n            return isArrayEqual(objectA, objectB, options);\n        }\n\n        if (Array.isArray(objectA) || Array.isArray(objectB)) {\n            return false;\n        }\n\n        if ((objectA instanceof Date) && (objectB instanceof Date)) {\n            return isDateEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof Date) || (objectB instanceof Date)) {\n            return false;\n        }\n\n        if ((objectA instanceof RegExp) && (objectB instanceof RegExp)) {\n            return isRegExpEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof RegExp) || (objectB instanceof RegExp)) {\n            return false;\n        }\n\n        return isObjectEqual(objectA, objectB, options);\n    }\n\n    return objectA === objectB;\n}\n\nfunction isRegExpEqual(objectA: RegExp, objectB: RegExp): boolean {\n    return objectA.toString() === objectB.toString();\n}\n\nfunction isDateEqual(objectA: Date, objectB: Date): boolean {\n    return objectA.getTime() === objectB.getTime();\n}\n\nfunction isArrayEqual(objectA: any[], objectB: any[], options?: CompareOptions): boolean {\n    if (objectA.length !== objectB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = objectA.length; index < length; index++) {\n        if (!isEqual(objectA[index], objectB[index], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isObjectEqual(\n    objectA: { [key: string]: any },\n    objectB: { [key: string]: any },\n    options?: CompareOptions\n): boolean {\n    const filter = options && options.keyFilter;\n    const keysA = filter ? Object.keys(objectA).filter(filter) : Object.keys(objectA);\n    const keysB = filter ? Object.keys(objectB).filter(filter) : Object.keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = keysA.length; index < length; index++) {\n        const key = keysA[index];\n\n        if (!objectB.hasOwnProperty(key)) {\n            return false;\n        }\n\n        if (!isEqual(objectA[key], objectB[key], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","import { memoize } from 'lodash';\n\nimport { bindDecorator, isEqual, isPrivate } from '../utility';\n\nimport CacheKeyResolver from './cache-key-resolver';\n\n/**\n * Decorates a class by patching all of its methods to cache their return values\n * and return them if they are called again with the same set of parameters. The\n * decorator also binds all the methods to the calling instance so it can be\n * destructed.\n */\nexport default function selectorDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                selectorMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\nfunction selectorMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let resolver = new CacheKeyResolver();\n    let method = descriptor.value;\n    let memoizedMethod = memoize(method, (...args) => resolver.getKey(...args));\n\n    return bindDecorator(target, key, {\n        get() {\n            const value = ((...args: any[]) => {\n                const cachedValue = memoizedMethod.call(this, ...args);\n\n                if (resolver.getUsedCount(...args) === 1) {\n                    return cachedValue;\n                }\n\n                const newValue = method.call(this, ...args);\n\n                if (isEqual(newValue, cachedValue, { keyFilter: key => !isPrivate(key) })) {\n                    return cachedValue;\n                }\n\n                memoizedMethod.cache.set(resolver.getKey(...args), newValue);\n\n                return newValue;\n            }) as T;\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n        set(value) {\n            resolver = new CacheKeyResolver();\n            method = value;\n            memoizedMethod = memoize(method, (...args) => resolver.getKey(...args));\n        },\n    });\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\ntype Method = (...args: any[]) => any;\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport Checkout, { CheckoutRequestBody } from './checkout';\nimport CheckoutDefaultIncludes from './checkout-default-includes';\nimport CheckoutParams from './checkout-params';\n\nexport default class CheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadCheckout(id: string, { params, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.get(url, {\n            params: {\n                include: CheckoutDefaultIncludes.concat(params && params.include || []).join(','),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    updateCheckout(id: string, body: CheckoutRequestBody, { params, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            params: {\n                include: CheckoutDefaultIncludes.concat(params && params.include || []).join(','),\n            },\n            body,\n            headers,\n            timeout,\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from 'rxjs/observable/of';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\n\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType, StandardError } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { ConfigActionCreator } from '../config';\n\nimport { CheckoutRequestBody } from './checkout';\nimport { CheckoutActionType, LoadCheckoutAction, UpdateCheckoutAction } from './checkout-actions';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default class CheckoutActionCreator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender,\n        private _configActionCreator: ConfigActionCreator\n    ) {}\n\n    loadCheckout(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            merge(\n                this._configActionCreator.loadConfig()(store),\n                defer(() => this._checkoutRequestSender.loadCheckout(id, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body)))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    loadDefaultCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            this._configActionCreator.loadConfig()(store),\n            defer(() => {\n                const state = store.getState();\n                const context = state.config.getContextConfig();\n\n                if (!context || !context.checkoutId) {\n                    throw new StandardError('Unable to load checkout: no cart is available');\n                }\n\n                return this._checkoutRequestSender.loadCheckout(context.checkoutId, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body));\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    updateCheckout(\n        body: CheckoutRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateCheckoutAction, InternalCheckoutSelectors> {\n        return store => new Observable(observer => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CheckoutActionType.UpdateCheckoutRequested));\n\n            this._checkoutRequestSender.updateCheckout(checkout.id, body, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CheckoutActionType.UpdateCheckoutSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CheckoutActionType.UpdateCheckoutFailed, response));\n                });\n        });\n    }\n\n    loadCurrentCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            return this.loadCheckout(checkout.id, options)(store);\n        };\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\nexport default class UnrecoverableError extends RequestError {\n    constructor(response: Response, message?: string) {\n        super(response, message || 'An unexpected error has occurred. The checkout process cannot continue as a result.');\n\n        this.type = 'unrecoverable';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { last } from 'lodash';\n\nimport ErrorResponseBody from './error-response-body';\nimport { RequestError, TimeoutError } from './errors';\n\nexport default class RequestErrorFactory {\n    private _factoryMethods: { [key: string]: ErrorFactoryMethod } = {};\n\n    constructor() {\n        this.register('default', (response, message) => new RequestError(response, message));\n        this.register('timeout', response => new TimeoutError(response));\n    }\n\n    register(type: string, factoryMethod: ErrorFactoryMethod): void {\n        this._factoryMethods[type] = factoryMethod;\n    }\n\n    createError(response: Response, message?: string): Error {\n        const factoryMethod = this._factoryMethods[this._getType(response)] || this._factoryMethods.default;\n\n        return factoryMethod(response, message);\n    }\n\n    private _getType(response: Response<ErrorResponseBody>): string {\n        if (response.status === 0) {\n            return 'timeout';\n        }\n\n        if (response.body && typeof response.body.type === 'string') {\n            return last(response.body.type.split('/')) || 'default';\n        }\n\n        const error = last(response.body && response.body.errors);\n\n        return error && error.code ? error.code : 'default';\n    }\n}\n\nexport type ErrorFactoryMethod = (response: Response, message?: string) => Error;\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport BillingAddress from './billing-address';\nimport { BillingAddressAction, BillingAddressActionType } from './billing-address-actions';\nimport BillingAddressState, { BillingAddressErrorsState, BillingAddressStatusesState } from './billing-address-state';\n\nconst DEFAULT_STATE: BillingAddressState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function billingAddressReducer(\n    state: BillingAddressState = DEFAULT_STATE,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressState {\n    const reducer = combineReducers<BillingAddressState, CheckoutAction | BillingAddressAction | OrderAction>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: BillingAddress | undefined,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddress | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return action.payload ? action.payload.billingAddress : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: BillingAddressErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...errors, loadError: action.payload };\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return { ...errors, updateError: undefined };\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n        return { ...errors, updateError: action.payload };\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return { ...errors, continueAsGuestError: undefined };\n\n    case BillingAddressActionType.ContinueAsGuestFailed:\n        return { ...errors, continueAsGuestError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: BillingAddressStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return { ...statuses, isLoading: true };\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...statuses, isLoading: false };\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n        return { ...statuses, isUpdating: true };\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return { ...statuses, isUpdating: false };\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n        return { ...statuses, isContinuingAsGuest: true };\n\n    case BillingAddressActionType.ContinueAsGuestFailed:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return { ...statuses, isContinuingAsGuest: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport Config from './config';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\nimport ConfigState, { ConfigErrorsState, ConfigStatusesState } from './config-state';\n\nconst DEFAULT_STATE: ConfigState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function configReducer(\n    state: ConfigState = DEFAULT_STATE,\n    action: LoadConfigAction\n): ConfigState {\n    const reducer = combineReducers<ConfigState, LoadConfigAction>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Config | undefined,\n    action: LoadConfigAction\n): Config | undefined {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return action.payload ? action.payload : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConfigErrorsState = DEFAULT_STATE.errors,\n    action: LoadConfigAction\n): ConfigErrorsState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case ConfigActionType.LoadConfigFailed:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConfigStatusesState = DEFAULT_STATE.statuses,\n    action: LoadConfigAction\n): ConfigStatusesState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigRequested:\n        return { ...statuses, isLoading: true };\n\n    case ConfigActionType.LoadConfigSucceeded:\n    case ConfigActionType.LoadConfigFailed:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport Country from './country';\nimport * as actionTypes from './country-action-types';\nimport CountryState, { CountryErrorsState, CountryStatusesState } from './country-state';\n\nconst DEFAULT_STATE: CountryState = {\n    errors: {},\n    statuses: {},\n};\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action\n */\nexport default function countryReducer(state: CountryState = DEFAULT_STATE, action: Action): CountryState {\n    const reducer = combineReducers<CountryState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: Country[] | undefined, action: Action): Country[] | undefined {\n    switch (action.type) {\n    case actionTypes.LOAD_COUNTRIES_SUCCEEDED:\n        return action.payload || [];\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(errors: CountryErrorsState = DEFAULT_STATE.errors, action: Action): CountryErrorsState {\n    switch (action.type) {\n    case actionTypes.LOAD_COUNTRIES_REQUESTED:\n    case actionTypes.LOAD_COUNTRIES_SUCCEEDED:\n        return { ...errors, loadError: undefined };\n\n    case actionTypes.LOAD_COUNTRIES_FAILED:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(statuses: CountryStatusesState = DEFAULT_STATE.statuses, action: Action): CountryStatusesState {\n    switch (action.type) {\n    case actionTypes.LOAD_COUNTRIES_REQUESTED:\n        return { ...statuses, isLoading: true };\n\n    case actionTypes.LOAD_COUNTRIES_SUCCEEDED:\n    case actionTypes.LOAD_COUNTRIES_FAILED:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentAction, PaymentActionType } from './payment-actions';\nimport PaymentResponseBody from './payment-response-body';\nimport PaymentState from './payment-state';\n\nexport default function paymentReducer(state: PaymentState = {}, action: PaymentAction): PaymentState {\n    const reducer = combineReducers<PaymentState, PaymentAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: PaymentResponseBody | undefined, action: PaymentAction): PaymentResponseBody | undefined {\n    switch (action.type) {\n    case PaymentActionType.SubmitPaymentSucceeded:\n        return action.payload;\n\n    default:\n        return data;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { mergeOrPush } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport { PaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { PaymentMethodErrorsState, PaymentMethodStatusesState } from './payment-method-state';\n\nconst DEFAULT_STATE: PaymentMethodState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function paymentMethodReducer(\n    state: PaymentMethodState = DEFAULT_STATE,\n    action: Action\n): PaymentMethodState {\n    const reducer = combineReducers<PaymentMethodState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentMethod[] | undefined,\n    action: PaymentMethodAction\n): PaymentMethod[] | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return action.payload ?\n            mergeOrPush(data || [], action.payload, {\n                id: action.payload.id,\n                gateway: action.payload.gateway,\n            }) :\n            data;\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return action.payload ? action.payload : [];\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: PaymentMethodMeta | undefined,\n    action: PaymentMethodAction\n): PaymentMethodMeta | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return action.meta ? { ...meta, ...action.meta } : meta;\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: PaymentMethodErrorsState = DEFAULT_STATE.errors,\n    action: PaymentMethodAction\n): PaymentMethodErrorsState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return { ...errors, loadError: action.payload };\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return {\n            ...errors,\n            loadMethodId: undefined,\n            loadMethodError: undefined,\n        };\n\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return {\n            ...errors,\n            loadMethodId: action.meta.methodId,\n            loadMethodError: action.payload,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentMethodStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentMethodAction\n): PaymentMethodStatusesState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n        return { ...statuses, isLoading: true };\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return { ...statuses, isLoading: false };\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n        return {\n            ...statuses,\n            isLoadingMethod: true,\n            loadMethodId: action.meta.methodId,\n        };\n\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return {\n            ...statuses,\n            isLoadingMethod: false,\n            loadMethodId: undefined,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { assign, findIndex, isPlainObject, pickBy } from 'lodash';\n\nimport { PartialDeep } from '../types';\n\n/**\n * Push an item to an array if it doesn't exist in the array. Otherwise, merge\n * with the existing item in the array. This function always returns a new array.\n */\nexport default function mergeOrPush<T extends object>(\n    array: T[],\n    item: T,\n    predicate: ((item: T) => boolean) | PartialDeep<T>\n): T[] {\n    const index = findIndex(array, typeof predicate === 'object' ? pickBy(predicate) : predicate);\n    const newArray = [...array];\n\n    if (index === -1) {\n        newArray.push(item);\n    } else {\n        newArray[index] = isPlainObject(item) ? assign({}, array[index], item) : item;\n    }\n\n    return newArray;\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentStrategyAction, PaymentStrategyActionType } from './payment-strategy-actions';\nimport PaymentStrategyState, { DEFAULT_STATE, PaymentStrategyErrorsState, PaymentStrategyStatusesState } from './payment-strategy-state';\n\nexport default function paymentStrategyReducer(\n    state: PaymentStrategyState = DEFAULT_STATE,\n    action: PaymentStrategyAction\n): PaymentStrategyState {\n    const reducer = combineReducers<PaymentStrategyState, PaymentStrategyAction>({\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: PaymentStrategyErrorsState = DEFAULT_STATE.errors,\n    action: PaymentStrategyAction\n): PaymentStrategyErrorsState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.InitializeFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.ExecuteRequested:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return {\n            ...errors,\n            executeError: undefined,\n            executeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.ExecuteFailed:\n        return {\n            ...errors,\n            executeError: action.payload,\n            executeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.FinalizeRequested:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return {\n            ...errors,\n            finalizeError: undefined,\n            finalizeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.FinalizeFailed:\n        return {\n            ...errors,\n            finalizeError: action.payload,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n        return {\n            ...errors,\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return {\n            ...errors,\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentStrategyAction\n): PaymentStrategyStatusesState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.InitializeFailed:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n            initializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.ExecuteRequested:\n        return {\n            ...statuses,\n            isExecuting: true,\n            executeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.ExecuteFailed:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return {\n            ...statuses,\n            isExecuting: false,\n            executeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.FinalizeRequested:\n        return {\n            ...statuses,\n            isFinalizing: true,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case PaymentStrategyActionType.FinalizeFailed:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return {\n            ...statuses,\n            isFinalizing: false,\n            finalizeMethodId: undefined,\n        };\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    return {\n        ...statuses,\n        isWidgetInteracting: true,\n        widgetInteractionMethodId: action.meta.methodId,\n     };\n\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n     return {\n        ...statuses,\n        isWidgetInteracting: false,\n        widgetInteractionMethodId: undefined,\n     };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport * as actionTypes from './instrument-action-types';\n\nimport Instrument from './instrument';\nimport InstrumentState, { InstrumentErrorState, InstrumentMeta, InstrumentStatusState } from './instrument-state';\n\nconst DEFAULT_STATE = {\n    data: [],\n    errors: {},\n    statuses: {},\n};\n\nexport default function instrumentReducer(state: InstrumentState = DEFAULT_STATE, action: Action): InstrumentState {\n    const reducer = combineReducers<InstrumentState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: Instrument[] = DEFAULT_STATE.data, action: Action): Instrument[] {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n        return action.payload.vaultedInstruments || [];\n\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n        return data.filter(instrument =>\n            instrument.bigpayToken !== action.meta.instrumentId\n        );\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(meta: InstrumentMeta | undefined, action: Action): InstrumentMeta | undefined {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n        return { ...meta, ...action.meta };\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(errors: InstrumentErrorState = DEFAULT_STATE.errors, action: Action): InstrumentErrorState {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_REQUESTED:\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n        return { ...errors, loadError: undefined };\n\n    case actionTypes.DELETE_INSTRUMENT_REQUESTED:\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n        return {\n            ...errors,\n            deleteError: undefined,\n            failedInstrument: undefined,\n        };\n\n    case actionTypes.LOAD_INSTRUMENTS_FAILED:\n        return { ...errors, loadError: action.payload };\n\n    case actionTypes.DELETE_INSTRUMENT_FAILED:\n        return {\n            ...errors,\n            deleteError: action.payload,\n            failedInstrument: action.meta.instrumentId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(statuses: InstrumentStatusState = DEFAULT_STATE.statuses, action: Action): InstrumentStatusState {\n    switch (action.type) {\n    case actionTypes.LOAD_INSTRUMENTS_REQUESTED:\n        return { ...statuses, isLoading: true };\n\n    case actionTypes.DELETE_INSTRUMENT_REQUESTED:\n        return {\n            ...statuses,\n            isDeleting: true,\n            deletingInstrument: action.meta.instrumentId,\n        };\n\n    case actionTypes.LOAD_INSTRUMENTS_SUCCEEDED:\n    case actionTypes.LOAD_INSTRUMENTS_FAILED:\n        return { ...statuses, isLoading: false };\n\n    case actionTypes.DELETE_INSTRUMENT_SUCCEEDED:\n    case actionTypes.DELETE_INSTRUMENT_FAILED:\n        return {\n            ...statuses,\n            isDeleting: false,\n            deletingInstrument: undefined,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { AfterpayRemoteCheckout, AmazonPayRemoteCheckout } from './methods';\n\nimport * as actionTypes from './remote-checkout-action-types';\nimport RemoteCheckoutState, { RemoteCheckoutStateData } from './remote-checkout-state';\n\nconst DEFAULT_STATE: RemoteCheckoutState = {\n    data: {},\n};\n\ntype RemoteCheckout = AfterpayRemoteCheckout | AmazonPayRemoteCheckout;\n\nexport default function remoteCheckoutReducer(\n    state: RemoteCheckoutState = DEFAULT_STATE,\n    action: Action\n): RemoteCheckoutState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<RemoteCheckoutState>({\n        data: combineReducers<RemoteCheckoutStateData>({\n            [action.meta.methodId]: dataReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: RemoteCheckout = {},\n    action: Action\n): RemoteCheckout {\n    switch (action.type) {\n    case actionTypes.INITIALIZE_REMOTE_BILLING_SUCCEEDED:\n        return { ...data, billing: action.payload.billing };\n\n    case actionTypes.INITIALIZE_REMOTE_SHIPPING_SUCCEEDED:\n        return { ...data, shipping: action.payload.shipping };\n\n    case actionTypes.LOAD_REMOTE_SETTINGS_SUCCEEDED:\n        return { ...data, settings: action.payload };\n\n    case actionTypes.UPDATE_REMOTE_CHECKOUT:\n        return { ...data, ...action.payload };\n\n    default:\n        return data;\n    }\n}\n","import { createDataStore } from '@bigcommerce/data-store';\n\nimport { createRequestErrorFactory } from '../common/error';\n\nimport CheckoutStore, { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport createActionTransformer from './create-action-transformer';\nimport createCheckoutStoreReducer from './create-checkout-store-reducer';\nimport createInternalCheckoutSelectors from './create-internal-checkout-selectors';\n\nexport default function createCheckoutStore(\n    initialState: Partial<CheckoutStoreState> = {},\n    options?: CheckoutStoreOptions\n): CheckoutStore {\n    const actionTransformer = createActionTransformer(createRequestErrorFactory());\n    const stateTransformer = (state: CheckoutStoreState) => createInternalCheckoutSelectors(state);\n\n    return createDataStore(\n        createCheckoutStoreReducer(),\n        initialState,\n        { actionTransformer, stateTransformer, ...options }\n    );\n}\n","import { PaymentMethodInvalidError } from '../../payment/errors';\n\nimport { UnrecoverableError } from './errors';\nimport RequestErrorFactory from './request-error-factory';\n\nexport default function createRequestErrorFactory(): RequestErrorFactory {\n    const factory = new RequestErrorFactory();\n\n    const unrecoverableErrorTypes = [\n        'catalog_only',\n        'empty_cart',\n        'invalid_order_id',\n        'invalid_order_token',\n        'missing_order_token',\n        'missing_provider_token',\n        'missing_shipping_method',\n        'order_completion_error',\n        'order_could_not_be_finalized_error',\n        'order_create_failed',\n        'provider_fatal_error',\n        'provider_setup_error',\n        'stock_too_low',\n    ];\n\n    unrecoverableErrorTypes.forEach(type => {\n        factory.register(type, (response, message) => new UnrecoverableError(response, message));\n    });\n\n    factory.register('invalid_payment_provider', response => new PaymentMethodInvalidError(response));\n    factory.register('payment_config_not_found', response => new PaymentMethodInvalidError(response));\n\n    return factory;\n}\n","import { combineReducers, Action, Reducer } from '@bigcommerce/data-store';\n\nimport { billingAddressReducer } from '../billing';\nimport { cartReducer } from '../cart';\nimport { checkoutButtonReducer } from '../checkout-buttons';\nimport { configReducer } from '../config';\nimport { couponReducer, giftCertificateReducer } from '../coupon';\nimport { customerReducer, customerStrategyReducer } from '../customer';\nimport { countryReducer } from '../geography';\nimport { orderReducer } from '../order';\nimport { paymentMethodReducer, paymentReducer, paymentStrategyReducer } from '../payment';\nimport { instrumentReducer } from '../payment/instrument';\nimport { remoteCheckoutReducer } from '../remote-checkout';\nimport { consignmentReducer, shippingCountryReducer, shippingStrategyReducer } from '../shipping';\n\nimport checkoutReducer from './checkout-reducer';\nimport CheckoutStoreState from './checkout-store-state';\n\nexport default function createCheckoutStoreReducer(): Reducer<CheckoutStoreState, Action> {\n    return combineReducers({\n        billingAddress: billingAddressReducer,\n        cart: cartReducer,\n        checkout: checkoutReducer,\n        checkoutButton: checkoutButtonReducer,\n        config: configReducer,\n        consignments: consignmentReducer,\n        countries: countryReducer,\n        coupons: couponReducer,\n        customer: customerReducer,\n        customerStrategies: customerStrategyReducer,\n        giftCertificates: giftCertificateReducer,\n        instruments: instrumentReducer,\n        order: orderReducer,\n        payment: paymentReducer,\n        paymentMethods: paymentMethodReducer,\n        paymentStrategies: paymentStrategyReducer,\n        remoteCheckout: remoteCheckoutReducer,\n        shippingCountries: shippingCountryReducer,\n        shippingStrategies: shippingStrategyReducer,\n    });\n}\n","export default function isPrivate(key: string): boolean {\n    return `${key}`.indexOf('$$') === 0 || `${key}`.indexOf('_') === 0;\n}\n","import { selector } from '../common/selector';\n\nimport Cart from './cart';\nimport CartState from './cart-state';\n\n@selector\nexport default class CartSelector {\n    constructor(\n        private _cart: CartState\n    ) {}\n\n    getCart(): Cart | undefined {\n        return this._cart.data;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._cart.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._cart.statuses.isLoading;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Coupon from './coupon';\nimport CouponState from './coupon-state';\n\n@selector\nexport default class CouponSelector {\n    constructor(\n        private _coupon: CouponState\n    ) {}\n\n    getCoupons(): Coupon[] | undefined {\n        return this._coupon.data;\n    }\n\n    getRemoveError(): Error | undefined {\n        return this._coupon.errors.removeCouponError;\n    }\n\n    getApplyError(): Error | undefined {\n        return this._coupon.errors.applyCouponError;\n    }\n\n    isApplying(): boolean {\n        return !!this._coupon.statuses.isApplyingCoupon;\n    }\n\n    isRemoving(): boolean {\n        return !!this._coupon.statuses.isRemovingCoupon;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport Customer from './customer';\nimport CustomerState from './customer-state';\n\n@selector\nexport default class CustomerSelector {\n    constructor(\n        private _customer: CustomerState\n    ) {}\n\n    getCustomer(): Customer | undefined {\n        return this._customer.data;\n    }\n}\n","import CustomerStrategyState from './customer-strategy-state';\n\nexport default class CustomerStrategySelector {\n    constructor(\n        private _customerStrategies: CustomerStrategyState\n    ) {}\n\n    getSignInError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.signInMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.signInError;\n    }\n\n    getSignOutError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.signOutMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.signOutError;\n    }\n\n    getInitializeError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.initializeMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.initializeError;\n    }\n\n    getWidgetInteractionError(methodId?: string): Error | undefined {\n        if (methodId && this._customerStrategies.errors.widgetInteractionMethodId !== methodId) {\n            return;\n        }\n\n        return this._customerStrategies.errors.widgetInteractionError;\n    }\n\n    isSigningIn(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.signInMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isSigningIn;\n    }\n\n    isSigningOut(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.signOutMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isSigningOut;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.initializeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isInitializing;\n    }\n\n    isWidgetInteracting(methodId?: string): boolean {\n        if (methodId && this._customerStrategies.statuses.widgetInteractionMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._customerStrategies.statuses.isWidgetInteracting;\n    }}\n","import { selector } from '../common/selector';\n\nimport GiftCertificate from './gift-certificate';\nimport GiftCertificateState from './gift-certificate-state';\n\n@selector\nexport default class GiftCertificateSelector {\n    constructor(\n        private _giftCertificate: GiftCertificateState\n    ) {}\n\n    getGiftCertificates(): GiftCertificate[] | undefined {\n        return this._giftCertificate.data;\n    }\n\n    getRemoveError(): Error | undefined {\n        return this._giftCertificate.errors.removeGiftCertificateError;\n    }\n\n    getApplyError(): Error | undefined {\n        return this._giftCertificate.errors.applyGiftCertificateError;\n    }\n\n    isApplying(): boolean {\n        return !!this._giftCertificate.statuses.isApplyingGiftCertificate;\n    }\n\n    isRemoving(): boolean {\n        return !!this._giftCertificate.statuses.isRemovingGiftCertificate;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport { Address } from '../address';\n\nimport ConsignmentState from './consignment-state';\n\n@selector\nexport default class ShippingAddressSelector {\n    constructor(\n        private _consignments: ConsignmentState\n    ) {}\n\n    getShippingAddress(): Address | undefined {\n        const consignments = this._consignments.data;\n\n        if (!consignments || !consignments[0]) {\n            return;\n        }\n\n        return consignments[0].shippingAddress;\n    }\n}\n","import { selector } from '../common/selector';\nimport { Country } from '../geography';\n\nimport ShippingCountryState from './shipping-country-state';\n\n@selector\nexport default class ShippingCountrySelector {\n    constructor(\n        private _shippingCountries: ShippingCountryState\n    ) {}\n\n    getShippingCountries(): Country[] | undefined {\n        return this._shippingCountries.data;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._shippingCountries.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._shippingCountries.statuses.isLoading;\n    }\n}\n","import { selector } from '../common/selector';\n\nimport ShippingStrategyState from './shipping-strategy-state';\n\n@selector\nexport default class ShippingStrategySelector {\n    constructor(\n        private _shippingStrategies: ShippingStrategyState\n    ) {}\n\n    getUpdateAddressError(methodId?: string): Error | undefined {\n        if (methodId && this._shippingStrategies.errors.updateAddressMethodId !== methodId) {\n            return;\n        }\n\n        return this._shippingStrategies.errors.updateAddressError;\n    }\n\n    getSelectOptionError(methodId?: string): Error | undefined {\n        if (methodId && this._shippingStrategies.errors.selectOptionMethodId !== methodId) {\n            return;\n        }\n\n        return this._shippingStrategies.errors.selectOptionError;\n    }\n\n    getInitializeError(methodId?: string): Error | undefined {\n        if (methodId && this._shippingStrategies.errors.initializeMethodId !== methodId) {\n            return;\n        }\n\n        return this._shippingStrategies.errors.initializeError;\n    }\n\n    isUpdatingAddress(methodId?: string): boolean {\n        if (methodId && this._shippingStrategies.statuses.updateAddressMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._shippingStrategies.statuses.isUpdatingAddress;\n    }\n\n    isSelectingOption(methodId?: string): boolean {\n        if (methodId && this._shippingStrategies.statuses.selectOptionMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._shippingStrategies.statuses.isSelectingOption;\n    }\n\n    isInitializing(methodId?: string): boolean {\n        if (methodId && this._shippingStrategies.statuses.initializeMethodId !== methodId) {\n            return false;\n        }\n\n        return !!this._shippingStrategies.statuses.isInitializing;\n    }\n}\n","import { find } from 'lodash';\n\nimport { isAddressEqual, AddressRequestBody } from '../address';\nimport { CartSelector, PhysicalItem } from '../cart';\nimport { selector } from '../common/selector';\n\nimport Consignment from './consignment';\nimport ConsignmentState from './consignment-state';\nimport ShippingOption from './shipping-option';\n\n@selector\nexport default class ConsignmentSelector {\n    constructor(\n        private _consignments: ConsignmentState,\n        private _cart: CartSelector\n    ) {}\n\n    getConsignments(): Consignment[] | undefined {\n        return this._consignments.data;\n    }\n\n    getConsignmentById(id: string): Consignment | undefined {\n        const consignments = this._consignments.data;\n\n        if (!consignments || !consignments.length) {\n            return;\n        }\n\n        return find(consignments, { id });\n    }\n\n    getConsignmentByAddress(address: AddressRequestBody): Consignment | undefined {\n        const consignments = this._consignments.data;\n\n        if (!consignments || !consignments.length) {\n            return;\n        }\n\n        return find(consignments, consignment =>\n            isAddressEqual(consignment.shippingAddress, address)\n        );\n    }\n\n    getShippingOption(): ShippingOption | undefined {\n        const consignments = this._consignments.data;\n\n        if (consignments && consignments.length) {\n            return consignments[0].selectedShippingOption;\n        }\n    }\n\n    getLoadError(): Error | undefined {\n        return this._consignments.errors.loadError;\n    }\n\n    getCreateError(): Error | undefined {\n        return this._consignments.errors.createError;\n    }\n\n    getLoadShippingOptionsError(): Error | undefined {\n        return this._consignments.errors.loadShippingOptionsError;\n    }\n\n    getUnassignedItems(): PhysicalItem[] {\n        const cart = this._cart.getCart();\n\n        if (!cart) {\n            return [];\n        }\n\n        const assignedLineItemIds = (this.getConsignments() || []).reduce(\n            (itemIds, consignment) => itemIds.concat(consignment.lineItemIds),\n            [] as string[]\n        );\n\n        return (cart.lineItems.physicalItems || []).filter(\n            item => assignedLineItemIds.indexOf(item.id as string) < 0\n        );\n    }\n\n    getUpdateError(consignmentId?: string): Error | undefined {\n        if (consignmentId) {\n            return this._consignments.errors.updateError[consignmentId];\n        }\n\n        return find(this._consignments.errors.updateError);\n    }\n\n    getDeleteError(consignmentId?: string): Error | undefined {\n        if (consignmentId) {\n            return this._consignments.errors.deleteError[consignmentId];\n        }\n\n        return find(this._consignments.errors.deleteError);\n    }\n\n    getItemAssignmentError(address: AddressRequestBody): Error | undefined {\n        const consignment = this.getConsignmentByAddress(address);\n\n        return consignment ? this.getUpdateError(consignment.id) : this.getCreateError();\n    }\n\n    getUpdateShippingOptionError(consignmentId?: string): Error | undefined {\n        if (consignmentId) {\n            return this._consignments.errors.updateShippingOptionError[consignmentId];\n        }\n\n        return find(this._consignments.errors.updateShippingOptionError);\n    }\n\n    isLoading(): boolean {\n        return this._consignments.statuses.isLoading === true;\n    }\n\n    isLoadingShippingOptions(): boolean {\n        return this._consignments.statuses.isLoadingShippingOptions === true;\n    }\n\n    isCreating(): boolean {\n        return this._consignments.statuses.isCreating === true;\n    }\n\n    isUpdating(consignmentId?: string): boolean {\n        if (consignmentId) {\n            return this._consignments.statuses.isUpdating[consignmentId] === true;\n        }\n\n        return find(this._consignments.statuses.isUpdating) === true;\n    }\n\n    isDeleting(consignmentId?: string): boolean {\n        if (consignmentId) {\n            return this._consignments.statuses.isDeleting[consignmentId] === true;\n        }\n\n        return find(this._consignments.statuses.isDeleting) === true;\n    }\n\n    isAssigningItems(address: AddressRequestBody): boolean {\n        const consignment = this.getConsignmentByAddress(address);\n\n        return consignment ? this.isUpdating(consignment.id) : this.isCreating();\n    }\n\n    isUpdatingShippingOption(consignmentId?: string): boolean {\n        if (consignmentId) {\n            return this._consignments.statuses.isUpdatingShippingOption[consignmentId] === true;\n        }\n\n        return find(this._consignments.statuses.isUpdatingShippingOption) === true;\n    }\n}\n","import { identity, isEqual, pickBy } from 'lodash';\n\nimport Address from './address';\n\nexport default function isAddressEqual(addressA: Partial<Address>, addressB: Partial<Address>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<Address>): Partial<Address> {\n    return pickBy({\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.address1,\n        address2: address.address2,\n        city: address.city,\n        stateOrProvince: address.stateOrProvince,\n        countryCode: address.countryCode,\n        postalCode: address.postalCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    }, identity);\n}\n","import { BillingAddressSelector } from '../billing';\nimport { selector } from '../common/selector';\nimport { CouponSelector } from '../coupon';\n\nimport Order from './order';\nimport OrderState, { OrderMetaState } from './order-state';\n\n@selector\nexport default class OrderSelector {\n    constructor(\n        private _order: OrderState,\n        private _billingAddress: BillingAddressSelector,\n        private _coupons: CouponSelector\n    ) {}\n\n    getOrder(): Order | undefined {\n        const { data } = this._order;\n        const billingAddress = this._billingAddress.getBillingAddress();\n        const coupons = this._coupons.getCoupons() || [];\n\n        if (!data || !billingAddress) {\n            return;\n        }\n\n        return {\n            ...data,\n            billingAddress,\n            coupons,\n        };\n    }\n\n    getOrderMeta(): OrderMetaState | undefined {\n        return this._order.meta;\n    }\n\n    getLoadError(): Error | undefined {\n        return this._order.errors.loadError;\n    }\n\n    isLoading(): boolean {\n        return !!this._order.statuses.isLoading;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing/billing-address-actions';\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { CouponAction, CouponActionType } from '../coupon/coupon-actions';\nimport { GiftCertificateAction, GiftCertificateActionType } from '../coupon/gift-certificate-actions';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping/consignment-actions';\n\nimport Cart from './cart';\nimport CartState, { CartErrorsState, CartStatusesState } from './cart-state';\n\nconst DEFAULT_STATE: CartState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function cartReducer(\n    state: CartState = DEFAULT_STATE,\n    action: Action\n): CartState {\n    const reducer = combineReducers<CartState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Cart | undefined,\n    action: BillingAddressAction | CheckoutAction | ConsignmentAction | CouponAction | GiftCertificateAction\n): Cart | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return action.payload ? { ...data, ...action.payload.cart } : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CartStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction\n): CartStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return { ...statuses, isLoading: true };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n\nfunction errorsReducer(\n    errors: CartErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction\n): CartErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return { ...errors, loadError: undefined };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { CustomerAction, CustomerActionType } from '../customer';\n\nimport Consignment from './consignment';\nimport { ConsignmentAction, ConsignmentActionType } from './consignment-actions';\nimport ConsignmentState, { ConsignmentErrorsState, ConsignmentStatusesState } from './consignment-state';\n\nconst DEFAULT_STATE: ConsignmentState = {\n    errors: {\n        updateShippingOptionError: {},\n        updateError: {},\n        deleteError: {},\n    },\n    statuses: {\n        isUpdating: {},\n        isUpdatingShippingOption: {},\n        isDeleting: {},\n    },\n};\n\nexport default function consignmentReducer(\n    state: ConsignmentState = DEFAULT_STATE,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentState {\n    const reducer = combineReducers<ConsignmentState, ConsignmentAction | CheckoutAction>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Consignment[] | undefined,\n    action: ConsignmentAction | CheckoutAction | CustomerAction\n): Consignment[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        return action.payload ? action.payload.consignments : data;\n\n    case CustomerActionType.SignOutCustomerSucceeded:\n        return [];\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConsignmentErrorsState = DEFAULT_STATE.errors,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return { ...errors, loadError: undefined };\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return { ...errors, loadError: action.payload };\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n        return { ...errors, createError: undefined };\n\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return { ...errors, createError: action.payload };\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            errors.updateError[action.meta.id] = undefined;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            errors.updateError[action.meta.id] = action.payload;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            errors.deleteError[action.meta.id] = undefined;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            errors.deleteError[action.meta.id] = action.payload;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        if (action.meta) {\n            errors.updateShippingOptionError[action.meta.id] = undefined;\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            errors.updateShippingOptionError[action.meta.id] = action.payload;\n        }\n\n        return errors;\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConsignmentStatusesState = DEFAULT_STATE.statuses,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return { ...statuses, isLoading: true };\n\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return { ...statuses, isLoadingShippingOptions: true };\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return { ...statuses, isLoading: false };\n\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return { ...statuses, isLoadingShippingOptions: false };\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n        return { ...statuses, isCreating: true };\n\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return { ...statuses, isCreating: false };\n\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            statuses.isUpdating[action.meta.id] = true;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            statuses.isUpdating[action.meta.id] = false;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            statuses.isDeleting[action.meta.id] = true;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            statuses.isDeleting[action.meta.id] = false;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n        if (action.meta) {\n            statuses.isUpdatingShippingOption[action.meta.id] = true;\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            statuses.isUpdatingShippingOption[action.meta.id] = false;\n        }\n\n        return statuses;\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport Coupon from './coupon';\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport CouponState, { CouponErrorsState, CouponStatusesState } from './coupon-state';\n\nconst DEFAULT_STATE: CouponState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function couponReducer(\n    state: CouponState = DEFAULT_STATE,\n    action: CouponAction | CheckoutAction | OrderAction\n): CouponState {\n    const reducer = combineReducers<CouponState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Coupon[] | undefined,\n    action: CouponAction | CheckoutAction | OrderAction\n): Coupon[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return action.payload ? action.payload.coupons : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CouponErrorsState = {},\n    action: CouponAction\n): CouponErrorsState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n    case CouponActionType.ApplyCouponSucceeded:\n        return { ...errors, applyCouponError: undefined };\n\n    case CouponActionType.ApplyCouponFailed:\n        return { ...errors, applyCouponError: action.payload };\n\n    case CouponActionType.RemoveCouponRequested:\n    case CouponActionType.RemoveCouponSucceeded:\n        return { ...errors, removeCouponError: undefined };\n\n    case CouponActionType.RemoveCouponFailed:\n        return { ...errors, removeCouponError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CouponStatusesState = {},\n    action: CouponAction\n): CouponStatusesState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n        return { ...statuses, isApplyingCoupon: true };\n\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.ApplyCouponFailed:\n        return { ...statuses, isApplyingCoupon: false };\n\n    case CouponActionType.RemoveCouponRequested:\n        return { ...statuses, isRemovingCoupon: true };\n\n    case CouponActionType.RemoveCouponSucceeded:\n    case CouponActionType.RemoveCouponFailed:\n        return { ...statuses, isRemovingCoupon: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\n\nimport Customer from './customer';\nimport CustomerState from './customer-state';\n\nconst DEFAULT_STATE: CustomerState = {};\n\nexport default function customerReducer(\n    state: CustomerState = DEFAULT_STATE,\n    action: CheckoutAction\n): CustomerState {\n    const reducer = combineReducers<CustomerState, CheckoutAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Customer | undefined,\n    action: CheckoutAction\n): Customer | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return action.payload ? { ...data, ...action.payload.customer } : data;\n\n    default:\n        return data;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping/consignment-actions';\n\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport GiftCertificate from './gift-certificate';\nimport { GiftCertificateAction, GiftCertificateActionType } from './gift-certificate-actions';\nimport GiftCertificateState, { GiftCertificateErrorsState, GiftCertificateStatusesState } from './gift-certificate-state';\n\nconst DEFAULT_STATE: GiftCertificateState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function giftCertificateReducer(\n    state: GiftCertificateState = DEFAULT_STATE,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificateState {\n    const reducer = combineReducers<GiftCertificateState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: GiftCertificate[] | undefined,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificate[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return action.payload ? action.payload.giftCertificates : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: GiftCertificateErrorsState = DEFAULT_STATE.errors,\n    action: GiftCertificateAction\n): GiftCertificateErrorsState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n        return { ...errors, applyGiftCertificateError: undefined };\n\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return { ...errors, applyGiftCertificateError: action.payload };\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return { ...errors, removeGiftCertificateError: undefined };\n\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return { ...errors, removeGiftCertificateError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: GiftCertificateStatusesState = DEFAULT_STATE.statuses,\n    action: GiftCertificateAction\n): GiftCertificateStatusesState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n        return { ...statuses, isApplyingGiftCertificate: true };\n\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return { ...statuses, isApplyingGiftCertificate: false };\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n        return { ...statuses, isRemovingGiftCertificate: true };\n\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return { ...statuses, isRemovingGiftCertificate: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { OrderAction, OrderActionType } from './order-actions';\nimport OrderState, { OrderDataState, OrderErrorsState, OrderMetaState, OrderStatusesState } from './order-state';\n\nconst DEFAULT_STATE: OrderState = {\n    errors: {},\n    meta: {},\n    statuses: {},\n};\n\nexport default function orderReducer(\n    state: OrderState = DEFAULT_STATE,\n    action: OrderAction\n): OrderState {\n    const reducer = combineReducers<OrderState>({\n        data: dataReducer,\n        errors: errorsReducer,\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: OrderDataState | undefined,\n    action: OrderAction\n): OrderDataState | undefined {\n    switch (action.type) {\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n        return action.payload\n            ? omit({ ...data, ...action.payload }, ['billingAddress', 'coupons'])\n            : data;\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: OrderMetaState | undefined,\n    action: OrderAction\n): OrderMetaState | undefined {\n    switch (action.type) {\n    case OrderActionType.FinalizeOrderSucceeded:\n    case OrderActionType.SubmitOrderSucceeded:\n        return action.payload ? {\n            ...meta,\n            ...action.meta,\n            callbackUrl: action.payload.order.callbackUrl,\n            orderToken: action.payload.order.token,\n            payment: action.payload.order && action.payload.order.payment,\n        } : meta;\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: OrderErrorsState = DEFAULT_STATE.errors,\n    action: OrderAction\n): OrderErrorsState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return { ...errors, loadError: undefined };\n\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: OrderStatusesState = DEFAULT_STATE.statuses,\n    action: OrderAction\n): OrderStatusesState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return { ...statuses, isLoading: true };\n\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, Action } from '@bigcommerce/data-store';\n\nimport { Country } from '../geography';\n\nimport * as actionTypes from './shipping-country-action-types';\nimport ShippingCountryState, { ShippingCountryErrorsState, ShippingCountryStatusesState } from './shipping-country-state';\n\nconst DEFAULT_STATE: ShippingCountryState = {\n    errors: {},\n    statuses: {},\n};\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action\n */\nexport default function shippingCountryReducer(state: ShippingCountryState = DEFAULT_STATE, action: Action): ShippingCountryState {\n    const reducer = combineReducers<ShippingCountryState>({\n        errors: errorsReducer,\n        data: dataReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: Country[] | undefined, action: Action): Country[] | undefined {\n    switch (action.type) {\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_SUCCEEDED:\n        return action.payload || [];\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(errors: ShippingCountryErrorsState = DEFAULT_STATE.errors, action: Action): ShippingCountryErrorsState {\n    switch (action.type) {\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_REQUESTED:\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_SUCCEEDED:\n        return { ...errors, loadError: undefined };\n\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_FAILED:\n        return { ...errors, loadError: action.payload };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(statuses: ShippingCountryStatusesState = DEFAULT_STATE.statuses, action: Action): ShippingCountryStatusesState {\n    switch (action.type) {\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_REQUESTED:\n        return { ...statuses, isLoading: true };\n\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_SUCCEEDED:\n    case actionTypes.LOAD_SHIPPING_COUNTRIES_FAILED:\n        return { ...statuses, isLoading: false };\n\n    default:\n        return statuses;\n    }\n}\n","module.exports = require(\"rxjs/observable/throw\");","export const INTERNAL_USE_ONLY = 'This API endpoint is for internal use only and may change in the future';\n","module.exports = require(\"@bigcommerce/bigpay-client\");","module.exports = require(\"rxjs/observable/merge\");","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { InternalOrderResponseBody } from './internal-order-responses';\nimport Order from './order';\n\nexport default class OrderRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<Order>> {\n        const url = `/api/storefront/orders/${orderId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const params = {\n            include: [\n                'payments',\n                'lineItems.physicalItems.socialMedia',\n                'lineItems.physicalItems.options',\n                'lineItems.digitalItems.socialMedia',\n                'lineItems.digitalItems.options',\n            ].join(','),\n        };\n\n        return this._requestSender.get(url, {\n            params,\n            headers,\n            timeout,\n        });\n    }\n\n    submitOrder(body: InternalOrderRequestBody, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = '/internalapi/v1/checkout/order';\n\n        return this._requestSender.post(url, { body, timeout });\n    }\n\n    finalizeOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = `/internalapi/v1/checkout/order/${orderId}`;\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { defer } from 'rxjs/observable/defer';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { CheckoutValidator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { FinalizeOrderAction, LoadOrderAction, LoadOrderPaymentsAction, OrderActionType, SubmitOrderAction } from './order-actions';\nimport OrderRequestBody from './order-request-body';\nimport OrderRequestSender from './order-request-sender';\n\nexport default class OrderActionCreator {\n    constructor(\n        private _orderRequestSender: OrderRequestSender,\n        private _checkoutValidator: CheckoutValidator\n    ) {}\n\n    loadOrder(orderId: number, options?: RequestOptions): Observable<LoadOrderAction> {\n        return new Observable((observer: Observer<LoadOrderAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderFailed, response));\n                });\n        });\n    }\n\n    // TODO: Remove when checkout does not contain unrelated order data.\n    loadOrderPayments(orderId: number, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        return new Observable((observer: Observer<LoadOrderPaymentsAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderPaymentsRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderPaymentsSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderPaymentsFailed, response));\n                });\n        });\n    }\n\n    loadCurrentOrder(options?: RequestOptions): ThunkAction<LoadOrderAction, InternalCheckoutSelectors> {\n        return store => defer(() => {\n            const orderId = this._getCurrentOrderId(store.getState());\n\n            if (!orderId) {\n                throw new MissingDataError(MissingDataErrorType.MissingOrderId);\n            }\n\n            return this.loadOrder(orderId, options);\n        });\n    }\n\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<SubmitOrderAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(OrderActionType.SubmitOrderRequested)),\n            defer(() => {\n                const state = store.getState();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                return from(\n                    this._checkoutValidator.validate(checkout, options)\n                        .then(() => this._orderRequestSender.submitOrder(this._mapToOrderRequestBody(payload, checkout.customerMessage), options))\n                ).pipe(\n                    switchMap(response => concat(\n                        // TODO: Remove once we can submit orders using storefront API\n                        this.loadOrder(response.body.data.order.orderId, options),\n                        of(createAction(OrderActionType.SubmitOrderSucceeded, response.body.data, { ...response.body.meta, token: response.headers.token }))\n                    ))\n                );\n            }).pipe(\n                catchError(error => throwErrorAction(OrderActionType.SubmitOrderFailed, error))\n            )\n        );\n    }\n\n    finalizeOrder(orderId: number, options?: RequestOptions): Observable<FinalizeOrderAction | LoadOrderAction> {\n        return concat(\n            of(createAction(OrderActionType.FinalizeOrderRequested)),\n            from(this._orderRequestSender.finalizeOrder(orderId, options))\n                .pipe(\n                    switchMap(response => concat(\n                        this.loadOrder(orderId, options),\n                        of(createAction(OrderActionType.FinalizeOrderSucceeded, response.body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(OrderActionType.FinalizeOrderFailed, error))\n        );\n    }\n\n    private _getCurrentOrderId(state: InternalCheckoutSelectors): number | undefined {\n        const order = state.order.getOrder();\n        const checkout = state.checkout.getCheckout();\n\n        return (order && order.orderId) || (checkout && checkout.orderId);\n    }\n\n    private _mapToOrderRequestBody(payload: OrderRequestBody, customerMessage: string): InternalOrderRequestBody {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            return {\n                ...order,\n                customerMessage,\n            };\n        }\n\n        return {\n            ...order,\n            customerMessage,\n            payment: {\n                paymentData: payment.paymentData,\n                name: payment.methodId,\n                gateway: payment.gatewayId,\n            },\n        };\n    }\n}\n","import { isEqual } from 'lodash';\n\nimport { PartialDeep } from '../common/types';\n\nimport Cart from './cart';\n\nexport default class CartComparator {\n    isEqual(cartA: Cart, cartB: Cart): boolean {\n        return isEqual(\n            this._normalize(cartA),\n            this._normalize(cartB)\n        );\n    }\n\n    private _normalize(cart: Cart): PartialDeep<Cart> {\n        return {\n            cartAmount: cart.cartAmount,\n            currency: cart.currency,\n            id: cart.id,\n            lineItems: {\n                digitalItems: cart.lineItems.digitalItems.map(item => ({\n                    extendedSalePrice: item.extendedSalePrice,\n                    productId: item.productId,\n                    quantity: item.quantity,\n                    variantId: item.variantId,\n                })),\n                giftCertificates: cart.lineItems.giftCertificates.map(item => ({\n                    amount: item.amount,\n                    recipient: item.recipient,\n                })),\n                physicalItems: cart.lineItems.physicalItems.map(item => ({\n                    extendedSalePrice: item.extendedSalePrice,\n                    productId: item.productId,\n                    quantity: item.quantity,\n                    variantId: item.variantId,\n                    giftWrapping: item.giftWrapping,\n                })),\n            },\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { StandardError } from '../../../common/error/errors';\n\nimport { GooglePayCreator } from '../googlepay';\n\nimport {\n    BraintreeClientCreator,\n    BraintreeDataCollectorCreator,\n    BraintreeHostWindow,\n    BraintreePaypalCheckoutCreator,\n    BraintreePaypalCreator,\n    BraintreeThreeDSecureCreator,\n    BraintreeVisaCheckoutCreator,\n} from './braintree';\n\nexport default class BraintreeScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: BraintreeHostWindow = window\n    ) {}\n\n    loadClient(): Promise<BraintreeClientCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/client.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.client) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.client;\n            });\n    }\n\n    load3DS(): Promise<BraintreeThreeDSecureCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/three-d-secure.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.threeDSecure) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.threeDSecure;\n            });\n    }\n\n    loadDataCollector(): Promise<BraintreeDataCollectorCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/data-collector.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.dataCollector) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.dataCollector;\n            });\n    }\n\n    loadPaypal(): Promise<BraintreePaypalCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypal) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.paypal;\n            });\n    }\n\n    loadPaypalCheckout(): Promise<BraintreePaypalCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypalCheckout) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.paypalCheckout;\n            });\n    }\n\n    loadVisaCheckout(): Promise<BraintreeVisaCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/visa-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.visaCheckout) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.visaCheckout;\n            });\n    }\n\n    loadGooglePayment(): Promise<GooglePayCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/google-payment.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.googlePayment) {\n                    throw new StandardError();\n                }\n\n                return this._window.braintree.googlePayment;\n            });\n    }\n}\n","import { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport { GooglePayBraintreeSDK } from '../googlepay';\n\nimport {\n    BraintreeClient,\n    BraintreeDataCollector,\n    BraintreeModule,\n    BraintreePaypal,\n    BraintreePaypalCheckout,\n    BraintreeThreeDSecure,\n    BraintreeVisaCheckout,\n} from './braintree';\nimport BraintreeScriptLoader from './braintree-script-loader';\n\nexport default class BraintreeSDKCreator {\n    private _client?: Promise<BraintreeClient>;\n    private _3ds?: Promise<BraintreeThreeDSecure>;\n    private _paypal?: Promise<BraintreePaypal>;\n    private _paypalCheckout?: Promise<BraintreePaypalCheckout>;\n    private _clientToken?: string;\n    private _visaCheckout?: Promise<BraintreeVisaCheckout>;\n    private _dataCollectors: {\n        default?: Promise<BraintreeDataCollector>,\n        paypal?: Promise<BraintreeDataCollector>,\n    } = {};\n    private _googlePay?: Promise<GooglePayBraintreeSDK>;\n\n    constructor(\n        private _braintreeScriptLoader: BraintreeScriptLoader\n    ) {}\n\n    initialize(clientToken: string) {\n        this._clientToken = clientToken;\n    }\n\n    getClient(): Promise<BraintreeClient> {\n        if (!this._clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!this._client) {\n            this._client = this._braintreeScriptLoader.loadClient()\n                .then(client => client.create({ authorization: this._clientToken }));\n        }\n\n        return this._client;\n    }\n\n    getPaypal(): Promise<BraintreePaypal> {\n        if (!this._paypal) {\n            this._paypal = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypal(),\n            ])\n            .then(([client, paypal]) => paypal.create({ client }));\n        }\n\n        return this._paypal;\n    }\n\n    getPaypalCheckout(): Promise<BraintreePaypalCheckout> {\n        if (!this._paypalCheckout) {\n            this._paypalCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypalCheckout(),\n            ])\n                .then(([client, paypalCheckout]) => paypalCheckout.create({ client }));\n        }\n\n        return this._paypalCheckout;\n    }\n\n    get3DS(): Promise<BraintreeThreeDSecure> {\n        if (!this._3ds) {\n            this._3ds = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.load3DS(),\n            ])\n            .then(([client, threeDSecure]) => threeDSecure.create({ client }));\n        }\n\n        return this._3ds;\n    }\n\n    getDataCollector(options?: { paypal: boolean }): Promise<BraintreeDataCollector> {\n        const cacheKey = options && options.paypal ? 'paypal' : 'default';\n        let cached = this._dataCollectors[cacheKey];\n\n        if (!cached) {\n            cached = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadDataCollector(),\n            ])\n            .then(([client, dataCollector]) => dataCollector.create({ client, kount: true, ...options }))\n            .catch(error => {\n                if (error && error.code === 'DATA_COLLECTOR_KOUNT_NOT_ENABLED') {\n                    return { deviceData: undefined, teardown: () => Promise.resolve() };\n                }\n\n                throw error;\n            });\n\n            this._dataCollectors[cacheKey] = cached;\n        }\n\n        return cached;\n    }\n\n    getVisaCheckout(): Promise<BraintreeVisaCheckout> {\n        if (!this._visaCheckout) {\n            this._visaCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadVisaCheckout(),\n            ])\n            .then(([client, visaCheckout]) => visaCheckout.create({ client }));\n        }\n\n        return this._visaCheckout;\n    }\n\n    getGooglePaymentComponent(): Promise<GooglePayBraintreeSDK> {\n        if (!this._googlePay) {\n            this._googlePay = Promise.all ([\n                this.getClient(),\n                this._braintreeScriptLoader.loadGooglePayment(),\n            ])\n                .then(([client, googlePay]) => {\n                    return googlePay.create({ client });\n                });\n        }\n\n        return this._googlePay;\n    }\n\n    teardown(): Promise<void> {\n        return Promise.all([\n            this._teardown(this._3ds),\n            this._teardown(this._dataCollectors.default),\n            this._teardown(this._dataCollectors.paypal),\n            this._teardown(this._visaCheckout),\n            this._teardown(this._googlePay),\n        ]).then(() => {\n            this._3ds = undefined;\n            this._visaCheckout = undefined;\n            this._dataCollectors = {};\n            this._googlePay = undefined;\n        });\n    }\n\n    private _teardown(module?: Promise<BraintreeModule>) {\n        return module ?\n            module.then(mod => mod.teardown()) :\n            Promise.resolve();\n    }\n}\n","export default function toFormUrlEncoded(data: { [key: string]: object | string | undefined }): string {\n    return Object.keys(data)\n        .filter(key => data[key] !== undefined)\n        .map(key => {\n            const value = data[key];\n\n            if (typeof value === 'string') {\n                return `${key}=${encodeURIComponent(value)}`;\n            }\n\n            return `${key}=${encodeURIComponent(JSON.stringify(value) || '')}`;\n        })\n        .join('&');\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { AddressRequestBody } from '../address';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport { ShippingInitializeOptions, ShippingRequestOptions } from './shipping-request-options';\nimport {\n    ShippingStrategyActionType,\n    ShippingStrategyDeinitializeAction,\n    ShippingStrategyInitializeAction,\n    ShippingStrategySelectOptionAction,\n    ShippingStrategyUpdateAddressAction,\n} from './shipping-strategy-actions';\nimport { ShippingStrategy } from './strategies';\n\nexport default class ShippingStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<ShippingStrategy>\n    ) {}\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): ThunkAction<ShippingStrategyUpdateAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyUpdateAddressAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .updateAddress(address, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId }));\n                });\n        });\n    }\n\n    selectOption(shippingOptionId: string, options?: ShippingRequestOptions): ThunkAction<ShippingStrategySelectOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategySelectOptionAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.SelectOptionRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .selectOption(shippingOptionId, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.SelectOptionSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.SelectOptionFailed, error, { methodId }));\n                });\n        });\n    }\n\n    initialize(options?: ShippingInitializeOptions): ThunkAction<ShippingStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyInitializeAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n            const mergedOptions = { ...options, methodId };\n\n            observer.next(createAction(ShippingStrategyActionType.InitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(mergedOptions)\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.InitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.InitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    deinitialize(options?: ShippingRequestOptions): ThunkAction<ShippingStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyDeinitializeAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.DeinitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize({ ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.DeinitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.DeinitializeFailed, error, { methodId }));\n                });\n        });\n    }\n}\n","import { BillingAddress } from '../billing';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\nexport default function mapFromInternalAddress(address: InternalAddress): Address | BillingAddress {\n    return {\n        id: address.id,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.addressLine1,\n        address2: address.addressLine2,\n        city: address.city,\n        stateOrProvince: address.province,\n        stateOrProvinceCode: address.provinceCode,\n        postalCode: address.postCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { AddressRequestBody } from '../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../checkout';\n\nimport { ShippingRequestOptions } from '../shipping-request-options';\n\nexport default abstract class ShippingStrategy {\n    protected _isInitialized = false;\n\n    constructor(\n        protected _store: CheckoutStore\n    ) {}\n\n    abstract updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors>;\n\n    abstract selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors>;\n\n    initialize(options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        this._isInitialized = true;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        this._isInitialized = false;\n\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, AddressRequestBody } from '../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../payment';\nimport { AmazonPayAddressBook, AmazonPayOrderReference, AmazonPayScriptLoader, AmazonPayWidgetError, AmazonPayWindow } from '../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator } from '../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../remote-checkout/errors';\nimport ConsignmentActionCreator from '../consignment-action-creator';\nimport { ShippingInitializeOptions, ShippingRequestOptions } from '../shipping-request-options';\nimport { ShippingStrategyActionType } from '../shipping-strategy-actions';\n\nimport ShippingStrategy from './shipping-strategy';\n\nexport default class AmazonPayShippingStrategy extends ShippingStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        super(store);\n\n        this._window = window;\n    }\n\n    initialize(options: ShippingInitializeOptions): Promise<InternalCheckoutSelectors> {\n        if (this._isInitialized) {\n            return super.initialize(options);\n        }\n\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const onReady = () => {\n                    this._createAddressBook(amazonOptions)\n                        .then(resolve)\n                        .catch(reject);\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => super.initialize(options));\n    }\n\n    deinitialize(options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._isInitialized) {\n            return super.deinitialize(options);\n        }\n\n        this._paymentMethod = undefined;\n\n        return super.deinitialize(options);\n    }\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    selectOption(optionId: string, options?: any): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    private _createAddressBook(options: AmazonPayShippingInitializeOptions): Promise<AmazonPayAddressBook> {\n        return new Promise((resolve, reject) => {\n            const { container, onAddressSelect = () => {}, onError = () => {}, onReady = () => {} } = options;\n            const merchantId = this._paymentMethod && this._paymentMethod.config.merchantId;\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay AddressBook widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.AddressBook({\n                design: {\n                    designMode: 'responsive',\n                },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onAddressSelect: orderReference => {\n                    this._synchronizeShippingAddress()\n                        .then(() => onAddressSelect(orderReference))\n                        .catch(onError);\n                },\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onReady: orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                },\n            });\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeShippingAddress(): Promise<InternalCheckoutSelectors> {\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n        const amazon = this._store.getState().remoteCheckout.getCheckout('amazon');\n        const referenceId = amazon ? amazon.referenceId : undefined;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId })\n        )\n            .then(() => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializeShipping(methodId, { referenceId })\n            ))\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.shipping && amazon.shipping.address;\n                const address = state.shippingAddress.getShippingAddress();\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, address || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._consignmentActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            })\n            .then(() => this._store.dispatch(\n                createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId })\n            ))\n            .catch(error => this._store.dispatch(\n                createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId })\n            ));\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n}\n\n/**\n * A set of options that are required to initialize the shipping step of\n * checkout in order to support Amazon Pay.\n *\n * When Amazon Pay is initialized, a widget will be inserted into the DOM. The\n * widget has a list of shipping addresses for the customer to choose from.\n */\nexport interface AmazonPayShippingInitializeOptions {\n    /**\n     * The ID of a container which the address widget should insert into.\n     */\n    container: string;\n\n    /**\n     * A callback that gets called when the customer selects an address option.\n     *\n     * @param reference - The order reference provided by Amazon.\n     */\n    onAddressSelect?(reference: AmazonPayOrderReference): void;\n\n    /**\n     * A callback that gets called if unable to initialize the widget or select\n     * one of the address options provided by the widget.\n     *\n     * @param error - The error object describing the failure of the initialization.\n     */\n    onError?(error: AmazonPayWidgetError | StandardError): void;\n\n    /**\n     * A callback that gets called when the widget is loaded and ready to be\n     * interacted with.\n     *\n     * @param reference - The order reference provided by Amazon.\n     */\n    onReady?(reference: AmazonPayOrderReference): void;\n}\n","import { AddressRequestBody } from '../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../checkout';\nimport ConsignmentActionCreator from '../consignment-action-creator';\nimport { ShippingRequestOptions } from '../shipping-request-options';\n\nimport ShippingStrategy from './shipping-strategy';\n\nexport default class DefaultShippingStrategy extends ShippingStrategy {\n    constructor(\n        store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator\n    ) {\n        super(store);\n    }\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(address, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport ConsignmentActionCreator from './consignment-action-creator';\nimport ConsignmentRequestSender from './consignment-request-sender';\nimport { AmazonPayShippingStrategy, DefaultShippingStrategy, ShippingStrategy } from './strategies';\n\nexport default function createShippingStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<ShippingStrategy> {\n    const registry = new Registry<ShippingStrategy>();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const consignmentRequestSender = new ConsignmentRequestSender(requestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayShippingStrategy(\n            store,\n            new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n            new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender)),\n            new AmazonPayScriptLoader(getScriptLoader())\n        )\n    );\n\n    registry.register('default', () =>\n        new DefaultShippingStrategy(\n            store,\n            new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender)\n        )\n    );\n\n    return registry;\n}\n","import isPrivate from './is-private';\nimport omitDeep from './omit-deep';\n\nexport default function omitPrivate(object: any): any {\n    return omitDeep(object, (value: any, key: string) => isPrivate(key));\n}\n","import { omitBy, transform } from 'lodash';\n\nexport default function omitDeep(object: any, predicate: (value: any, key: string) => boolean): any {\n    if (Array.isArray(object)) {\n        return object.map(value => omitDeep(value, predicate));\n    }\n\n    if (typeof object === 'object') {\n        return transform(omitBy(object, predicate), (result, value, key) => {\n            result[key] = omitDeep(value, predicate);\n        }, {});\n    }\n\n    return object;\n}\n","import { isEqual } from 'lodash';\n\nimport { omitPrivate } from '../common/utility';\n\nimport InternalAddress from './internal-address';\n\nexport default function isInternalAddressEqual(addressA: Partial<InternalAddress>, addressB: Partial<InternalAddress>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<InternalAddress>): Partial<InternalAddress> {\n    const ignoredKeys = ['id', 'provinceCode'];\n\n    return (Object.keys(omitPrivate(address) || {}) as Array<keyof InternalAddress>)\n        .reduce(\n            (result, key) => ignoredKeys.indexOf(key) === -1 && address[key] ?\n                { ...result, [key]: address[key] } :\n                result,\n            {}\n        );\n}\n","export default interface CustomerStrategyState {\n    errors: CustomerStrategyErrorsState;\n    statuses: CustomerStrategyStatusesState;\n}\n\nexport interface CustomerStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    signInError?: Error;\n    signInMethodId?: string;\n    signOutError?: Error;\n    signOutMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface CustomerStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isSigningIn?: boolean;\n    isSigningOut?: boolean;\n    signInMethodId?: string;\n    signOutMethodId?: string;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: CustomerStrategyState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CustomerStrategyAction, CustomerStrategyActionType } from './customer-strategy-actions';\nimport CustomerStrategyState, { CustomerStrategyErrorsState, CustomerStrategyStatusesState, DEFAULT_STATE } from './customer-strategy-state';\n\nexport default function customerStrategyReducer(\n    state: CustomerStrategyState = DEFAULT_STATE,\n    action: CustomerStrategyAction\n): CustomerStrategyState {\n    const reducer = combineReducers<CustomerStrategyState, CustomerStrategyAction>({\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: CustomerStrategyErrorsState = DEFAULT_STATE.errors,\n    action: CustomerStrategyAction\n): CustomerStrategyErrorsState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.InitializeFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignInRequested:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return {\n            ...errors,\n            signInError: undefined,\n            signInMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignInFailed:\n        return {\n            ...errors,\n            signInError: action.payload,\n            signInMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignOutRequested:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return {\n            ...errors,\n            signOutError: undefined,\n            signOutMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignOutFailed:\n        return {\n            ...errors,\n            signOutError: action.payload,\n            signOutMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n        return {\n            ...errors,\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return {\n            ...errors,\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CustomerStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: CustomerStrategyAction\n): CustomerStrategyStatusesState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.InitializeFailed:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n            initializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignInRequested:\n        return {\n            ...statuses,\n            isSigningIn: true,\n            signInMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignInFailed:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return {\n            ...statuses,\n            isSigningIn: false,\n            signInMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.SignOutRequested:\n        return {\n            ...statuses,\n            isSigningOut: true,\n            signOutMethodId: action.meta && action.meta.methodId,\n        };\n\n    case CustomerStrategyActionType.SignOutFailed:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return {\n            ...statuses,\n            isSigningOut: false,\n            signOutMethodId: undefined,\n        };\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n        return {\n            ...statuses,\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n         };\n\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n         return {\n            ...statuses,\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n         };\n\n    default:\n        return statuses;\n    }\n}\n","export default interface ShippingStrategyState {\n    errors: ShippingStrategyErrorsState;\n    statuses: ShippingStrategyStatusesState;\n}\n\nexport interface ShippingStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    updateAddressError?: Error;\n    updateAddressMethodId?: string;\n    selectOptionError?: Error;\n    selectOptionMethodId?: string;\n}\n\nexport interface ShippingStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isUpdatingAddress?: boolean;\n    isSelectingOption?: boolean;\n    updateAddressMethodId?: string;\n    selectOptionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: ShippingStrategyState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { ShippingStrategyAction, ShippingStrategyActionType } from './shipping-strategy-actions';\nimport ShippingStrategyState, { DEFAULT_STATE, ShippingStrategyErrorsState, ShippingStrategyStatusesState } from './shipping-strategy-state';\n\nexport default function shippingStrategyReducer(\n    state: ShippingStrategyState = DEFAULT_STATE,\n    action: ShippingStrategyAction\n): ShippingStrategyState {\n    const reducer = combineReducers<ShippingStrategyState, ShippingStrategyAction>({\n        errors: errorsReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: ShippingStrategyErrorsState = DEFAULT_STATE.errors,\n    action: ShippingStrategyAction\n): ShippingStrategyErrorsState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return {\n            ...errors,\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.InitializeFailed:\n        return {\n            ...errors,\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...errors,\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n        return {\n            ...errors,\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return {\n            ...errors,\n            updateAddressError: undefined,\n            updateAddressMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n        return {\n            ...errors,\n            updateAddressError: action.payload,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return {\n            ...errors,\n            selectOptionError: undefined,\n            selectOptionMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n        return {\n            ...errors,\n            selectOptionError: action.payload,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        };\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: ShippingStrategyAction\n): ShippingStrategyStatusesState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n        return {\n            ...statuses,\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.InitializeFailed:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return {\n            ...statuses,\n            isInitializing: false,\n            initializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n        return {\n            ...statuses,\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return {\n            ...statuses,\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n        return {\n            ...statuses,\n            isUpdatingAddress: true,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return {\n            ...statuses,\n            isUpdatingAddress: false,\n            updateAddressMethodId: undefined,\n        };\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n        return {\n            ...statuses,\n            isSelectingOption: true,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        };\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return {\n            ...statuses,\n            isSelectingOption: false,\n            selectOptionMethodId: undefined,\n        };\n\n    default:\n        return statuses;\n    }\n}\n","import { PaymentMethod } from '../..';\nimport { Checkout } from '../../../checkout';\nimport { BraintreeModule, BraintreeModuleCreator } from '../braintree';\n\nexport type EnvironmentType = 'PRODUCTION' | 'TEST';\ntype AddressFormat = 'FULL' | 'MIN';\ntype TotalPriceStatus = 'ESTIMATED' | 'FINAL' | 'NOT_CURRENTLY_KNOWN';\ntype TokenizeType = 'AndroidPayCard' | 'CreditCard';\n\nexport interface GooglePayBraintreeSDK extends BraintreeModule {\n    createPaymentDataRequest(request?: GooglePayDataRequestV1): GooglePayPaymentDataRequestV1;\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload>;\n}\n\nexport interface GooglePayInitializer {\n    initialize(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean, publishableKey?: string): Promise<GooglePayPaymentDataRequestV1>;\n    teardown(): Promise<void>;\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload>;\n}\n\nexport interface GooglePayCreator extends BraintreeModuleCreator<GooglePayBraintreeSDK> {}\n\nexport interface GooglePayPaymentOptions {\n    environment: EnvironmentType;\n}\n\nexport interface GooglePayDataRequestV1 {\n    merchantInfo: {\n        authJwt?: string,\n    };\n    transactionInfo: {\n        currencyCode: string,\n        totalPriceStatus: TotalPriceStatus,\n        totalPrice: string,\n    };\n    cardRequirements: {\n        billingAddressRequired: boolean,\n        billingAddressFormat: AddressFormat,\n    };\n    emailRequired: boolean;\n    phoneNumberRequired: boolean;\n    shippingAddressRequired: boolean;\n}\n\nexport interface GooglePayPaymentDataRequestV1 {\n    allowedPaymentMethods: string[];\n    apiVersion: number;\n    cardRequirements: {\n        allowedCardNetworks: string[];\n        billingAddressFormat: string;\n        billingAddressRequired: boolean;\n    };\n    enviroment: string;\n    i: {\n        googleTransactionId: string;\n        startTimeMs: number;\n    };\n    merchantInfo: {\n        merchantId: string;\n    };\n    paymentMethodTokenizationParameters: {\n        parameters: {\n            'braintree:apiVersion': string;\n            'braintree:authorizationFingerprint': string;\n            'braintree:merchantId': string;\n            'braintree:metadata': string;\n            'braintree:sdkVersion': string;\n            gateway: string;\n        };\n        tokenizationType: string;\n    };\n    shippingAddressRequired: boolean;\n    transactionInfo: {\n        currencyCode: string;\n        totalPrice: string;\n        totalPriceStatus: string;\n    };\n}\n\nexport interface GooglePayIsReadyToPayResponse {\n    result: boolean;\n    paymentMethodPresend?: boolean;\n}\n\nexport interface GooglePaySDK {\n    payments: {\n        api: {\n            PaymentsClient: {\n                new(options: GooglePayPaymentOptions): GooglePayClient;\n            },\n        },\n    };\n}\n\nexport interface GooglePayClient {\n    isReadyToPay(options: object): Promise<GooglePayIsReadyToPayResponse>;\n    loadPaymentData(paymentDataRequest: GooglePayPaymentDataRequestV1): Promise<GooglePaymentData>;\n    createButton(options: { [key: string]: string | object }): HTMLElement;\n}\n\nexport interface GooglePayHostWindow extends Window {\n    google?: GooglePaySDK;\n}\n\nexport interface TokenizePayload {\n    nonce: string;\n    details: {\n        cardType: string;\n        lastFour: string;\n        lastTwo: string;\n    };\n    description: string;\n    type: TokenizeType;\n    binData: {\n        commercial: string;\n        countryOfIssuance: string;\n        debit: string;\n        durbinRegulated: string;\n        healthcare: string;\n        issuingBank: string;\n        payroll: string;\n        prepaid: string;\n        productId: string;\n    };\n}\n\nexport interface GooglePaymentData {\n    cardInfo: {\n        cardClass: string;\n        cardDescription: string;\n        cardDetails: string;\n        cardImageUri: string;\n        cardNetwork: string;\n        billingAddress: GooglePayAddress;\n    };\n    paymentMethodToken: {\n        token: string;\n        tokenizationType: string;\n    };\n    shippingAddress: GooglePayAddress;\n    email: string;\n}\n\nexport interface GooglePayAddress {\n    address1: string;\n    address2: string;\n    address3: string;\n    address4: string;\n    address5: string;\n    administrativeArea: string;\n    companyName: string;\n    countryCode: string;\n    locality: string;\n    name: string;\n    postalCode: string;\n    sortingCode: string;\n    phoneNumber: string;\n}\n\nexport interface GooglePaymentsError {\n    statusCode: string;\n    statusMessage?: string;\n}\n\nexport interface PaymentMethodData {\n    methodId: string;\n    paymentData: {\n        method: string,\n        nonce: string,\n        cardInformation: {\n            type: string,\n            number: string,\n        },\n    };\n}\n\nexport enum ButtonType {\n    Long = 'long',\n    Short = 'short',\n}\nexport enum ButtonColor {\n    Default = 'default',\n    Black = 'black',\n    White = 'white',\n}\n","import { PaymentMethodActionCreator } from '../..';\nimport { RequestSender, Response } from '../../../../node_modules/@bigcommerce/request-sender/lib';\nimport { AddressRequestBody } from '../../../address';\nimport { BillingAddressActionCreator, BillingAddressUpdateRequestBody } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport {\n    MissingDataError,\n    MissingDataErrorType,\n    NotInitializedError,\n    NotInitializedErrorType,\n    StandardError,\n} from '../../../common/error/errors';\nimport toFormUrlEncoded from '../../../common/http-request/to-form-url-encoded';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport { ShippingStrategyActionCreator } from '../../../shipping';\n\nimport {\n    ButtonColor,\n    ButtonType,\n    EnvironmentType,\n    GooglePaymentsError,\n    GooglePaymentData,\n    GooglePayAddress,\n    GooglePayClient,\n    GooglePayInitializer,\n    GooglePayPaymentDataRequestV1,\n    GooglePayScriptLoader,\n    GooglePaySDK,\n    TokenizePayload\n} from './';\n\nexport default class GooglePayPaymentProcessor {\n    private _googlePaymentsClient!: GooglePayClient;\n    private _methodId!: string;\n    private _googlePaymentDataRequest!: GooglePayPaymentDataRequestV1;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _googlePayInitializer: GooglePayInitializer,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _shippingStrategyActionCreator: ShippingStrategyActionCreator,\n        private _requestSender: RequestSender\n    ) { }\n\n    initialize(methodId: string): Promise<void> {\n        this._methodId = methodId;\n\n        return this._configureWallet();\n    }\n\n    deinitialize(): Promise<void> {\n        return this._googlePayInitializer.teardown();\n    }\n\n    createButton(onClick: () => {},\n                 buttonType: ButtonType = ButtonType.Short,\n                 buttonColor: ButtonColor = ButtonColor.Default): HTMLElement {\n        return this._googlePaymentsClient.createButton({\n            buttonColor,\n            buttonType,\n            onClick,\n        });\n    }\n\n    updateBillingAddress(billingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors> {\n        if (!this._methodId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        const remoteBillingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        if (!remoteBillingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePayAddressMapped: BillingAddressUpdateRequestBody = this._mapGooglePayAddressToBillingAddress(billingAddress, remoteBillingAddress.id);\n\n        return this._store.dispatch(\n            this._billingAddressActionCreator.updateAddress(googlePayAddressMapped)\n        );\n    }\n\n    updateShippingAddress(shippingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors | void> {\n        if (!this._methodId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        if (!shippingAddress) {\n            return Promise.resolve();\n        }\n\n        return this._store.dispatch(\n            this._shippingStrategyActionCreator.updateAddress(this._mapGooglePayAddressToShippingAddress(shippingAddress))\n        );\n    }\n\n    displayWallet(): Promise<GooglePaymentData> {\n        if (!this._googlePaymentsClient && !this._googlePaymentDataRequest) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePaymentsClient.isReadyToPay({\n            allowedPaymentMethods: this._googlePaymentDataRequest.allowedPaymentMethods,\n        }).then( response => {\n            if (response.result) {\n                return this._googlePaymentsClient.loadPaymentData(this._googlePaymentDataRequest)\n                    .then(paymentData => paymentData)\n                    .catch((err: GooglePaymentsError) => {\n                        throw new Error(err.statusCode);\n                    });\n            } else {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n        });\n    }\n\n    handleSuccess(paymentData: GooglePaymentData): Promise<any> {\n        return this._googlePayInitializer.parseResponse(paymentData)\n            .then(tokenizedPayload => this._postForm(tokenizedPayload));\n    }\n\n    private _configureWallet(): Promise<void> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n                const checkout = state.checkout.getCheckout();\n                const hasShippingAddress = !!state.shippingAddress.getShippingAddress();\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { testMode } = paymentMethod.config;\n\n                return Promise.all([\n                    this._googlePayScriptLoader.load(),\n                    this._googlePayInitializer.initialize(checkout, paymentMethod, hasShippingAddress),\n                ])\n                    .then(([googlePay, googlePayPaymentDataRequest]) => {\n                        this._googlePaymentsClient = this._getGooglePaymentsClient(googlePay, true);\n                        this._googlePaymentDataRequest = googlePayPaymentDataRequest;\n                    })\n                    .catch((error: Error) => {\n                        throw new StandardError(error.message);\n                    });\n            });\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string, lastFour: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastFour,\n        };\n    }\n\n    private _getGooglePaymentsClient(google: GooglePaySDK, testMode?: boolean): GooglePayClient {\n        if (testMode === undefined) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const environment: EnvironmentType = testMode ? 'TEST' : 'PRODUCTION';\n\n        return new google.payments.api.PaymentsClient({ environment });\n    }\n\n    private _mapGooglePayAddressToBillingAddress(address: GooglePayAddress, id: string): BillingAddressUpdateRequestBody {\n        return {\n            id,\n            firstName: address.name.split(' ').slice(0, -1).join(' '),\n            lastName: address.name.split(' ').slice(-1).join(' '),\n            company: address.companyName,\n            address1: address.address1,\n            address2: address.address2 + address.address3 + address.address4 + address.address5,\n            city: address.locality,\n            stateOrProvince: address.administrativeArea,\n            stateOrProvinceCode: address.administrativeArea,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phoneNumber,\n            customFields: [],\n        };\n    }\n\n    private _mapGooglePayAddressToShippingAddress(address: GooglePayAddress): AddressRequestBody {\n        return {\n            firstName: address.name.split(' ').slice(0, -1).join(' '),\n            lastName: address.name.split(' ').slice(-1).join(' '),\n            company: address.companyName,\n            address1: address.address1,\n            address2: address.address2 + address.address3 + address.address4 + address.address5,\n            city: address.locality,\n            stateOrProvince: address.administrativeArea,\n            stateOrProvinceCode: address.administrativeArea,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phoneNumber,\n            customFields: [],\n        };\n    }\n\n    private _postForm(postPaymentData: TokenizePayload): Promise<Response<any>> {\n        const cardInformation = postPaymentData.details;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: toFormUrlEncoded({\n                payment_type: postPaymentData.type,\n                nonce: postPaymentData.nonce,\n                provider: this._methodId,\n                action: 'set_external_checkout',\n                card_information: this._getCardInformation(cardInformation),\n            }),\n        });\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { RequestError } from '../../common/error/errors';\n\nexport default class PaymentMethodInvalidError extends RequestError {\n    constructor(response?: Response) {\n        super(response, 'There is a problem processing your payment. Please try again later.');\n\n        this.type = 'payment_method_invalid';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class TimeoutError extends RequestError {\n    constructor(response?: Response) {\n        super(response, 'The request has timed out or aborted.');\n\n        this.type = 'timeout';\n    }\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nexport default function bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nexport default function bindDecorator<T extends Constructor<object>>(target: T): T;\nexport default function bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this);\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","/// <reference path=\"../payment/bigpay-client.d.ts\" />\nimport { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { CheckoutStore } from '../checkout';\n\nexport default function createPaymentClient(store: CheckoutStore) {\n    const paymentClient = createBigpayClient();\n\n    store.subscribe(\n        state => {\n            const config = state.config.getStoreConfig();\n\n            if (config) {\n                paymentClient.setHost(config.paymentSettings.bigpayBaseUrl);\n            }\n        },\n        state => state.config.getStoreConfig()\n    );\n\n    return paymentClient;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { ConfigRequestSender } from '.';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\n\nexport default class ConfigActionCreator {\n    constructor(\n        private _configRequestSender: ConfigRequestSender\n    ) {}\n\n    loadConfig(options?: RequestOptions): ThunkAction<LoadConfigAction> {\n        return store => Observable.create((observer: Observer<LoadConfigAction>) => {\n            const state = store.getState();\n            const config = state.config.getConfig();\n\n            if (config) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ConfigActionType.LoadConfigRequested));\n\n            this._configRequestSender.loadConfig(options)\n                .then(response => {\n                    observer.next(createAction(ConfigActionType.LoadConfigSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConfigActionType.LoadConfigFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport Config from './config';\n\nexport default class ConfigRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadConfig({ timeout }: RequestOptions = {}): Promise<Response<Config>> {\n        const url = '/api/storefront/checkout-settings';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentMethod,\n}\n\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { createErrorAction, Action } from '@bigcommerce/data-store';\nimport { concat } from 'rxjs/observable/concat';\nimport { of } from 'rxjs/observable/of';\nimport { _throw } from 'rxjs/observable/throw';\nimport { Observable } from 'rxjs/Observable';\n\nexport default function throwErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    error?: TPayload,\n    meta?: TMeta\n): Observable<Action<TPayload, TMeta, TType>> {\n    if (isErrorAction(error)) {\n        return concat(of(error), _throw(createErrorAction(type, error.payload, meta)));\n    }\n\n    return _throw(createErrorAction(type, error, meta));\n}\n\nfunction isErrorAction(action: any): action is Action {\n    return action && action.type && action.error;\n}\n","import StandardError from './standard-error';\n\nexport enum NotInitializedErrorType {\n    CheckoutButtonNotInitialized,\n    CustomerNotInitialized,\n    PaymentNotInitialized,\n    ShippingNotInitialized,\n}\n\nexport default class NotInitializedError extends StandardError {\n    constructor(\n        public subtype: NotInitializedErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.type = 'not_initialized';\n    }\n}\n\nfunction getErrorMessage(type: NotInitializedErrorType): string {\n    switch (type) {\n    case NotInitializedErrorType.CustomerNotInitialized:\n        return 'Unable to proceed because the customer step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.PaymentNotInitialized:\n        return 'Unable to proceed because the payment step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.ShippingNotInitialized:\n        return 'Unable to proceed because the shipping step of checkout has not been initialized.';\n\n    default:\n        return 'Unable to proceed because the required component has not been initialized.';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Response } from '@bigcommerce/request-sender';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { Checkout, InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType, StandardError } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { GuestCredentials } from '../customer';\n\nimport { BillingAddressRequestSender } from '.';\nimport { BillingAddressUpdateRequestBody } from './billing-address';\nimport { BillingAddressActionType, ContinueAsGuestAction, UpdateBillingAddressAction } from './billing-address-actions';\n\nexport default class BillingAddressActionCreator {\n    constructor(\n        private _requestSender: BillingAddressRequestSender\n    ) {}\n\n    continueAsGuest(\n        credentials: GuestCredentials,\n        options?: RequestOptions\n    ): ThunkAction<ContinueAsGuestAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ContinueAsGuestAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const customer = state.customer.getCustomer();\n\n            if (customer && !customer.isGuest) {\n                throw new StandardError('Cannot continue as guest: customer is logged in.');\n            }\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            let billingAddressRequestBody;\n\n            if (!billingAddress) {\n                billingAddressRequestBody = credentials;\n            } else {\n                const { country, ...existingBillingAddressRequestBody } = billingAddress;\n\n                billingAddressRequestBody = {\n                    ...existingBillingAddressRequestBody,\n                    ...credentials,\n                };\n            }\n\n            observer.next(createAction(BillingAddressActionType.ContinueAsGuestRequested));\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.ContinueAsGuestSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.ContinueAsGuestFailed, response));\n                });\n        });\n    }\n\n    updateAddress(\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): ThunkAction<UpdateBillingAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateBillingAddressAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(BillingAddressActionType.UpdateBillingAddressRequested));\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            // If email is not present in the address provided by the client, then\n            // fall back to the stored email as it could have been set separately\n            // using a convenience method. We can't rely on billingAddress having\n            // an ID to consider that there's a preexisting email, as billingAddress\n            // object from Order doesn't have an ID.\n            const billingAddressRequestBody = {\n                ...address,\n                email: typeof address.email === 'undefined' && billingAddress ? billingAddress.email : address.email,\n            };\n\n            if (billingAddress && billingAddress.id) {\n                billingAddressRequestBody.id = billingAddress.id;\n            }\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.UpdateBillingAddressSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.UpdateBillingAddressFailed, response));\n                });\n        });\n    }\n\n    private _createOrUpdateBillingAddress(\n        checkoutId: string,\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): Promise<Response<Checkout>> {\n        if (!address.id) {\n            return this._requestSender.createAddress(checkoutId, address, options);\n        }\n\n        return this._requestSender.updateAddress(checkoutId, address, options);\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../address';\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { BillingAddressUpdateRequestBody } from './billing-address';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class BillingAddressRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createAddress(checkoutId: string, address: Partial<AddressRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: address, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateAddress(checkoutId: string, address: Partial<BillingAddressUpdateRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = address;\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nexport default class Registry<T> {\n    private _factories: { [key: string]: Factory<T> };\n    private _instances: { [key: string]: T };\n    private _options: RegistryOptions;\n\n    constructor(options?: RegistryOptions) {\n        this._factories = {};\n        this._instances = {};\n        this._options = { defaultToken: 'default', ...options };\n    }\n\n    get(token: string = this._options.defaultToken, cacheToken: string = token): T {\n        try {\n            return this._getInstance(token, cacheToken);\n        } catch (error) {\n            return this._getInstance(this._options.defaultToken, cacheToken);\n        }\n    }\n\n    register(token: string, factory: Factory<T>): void {\n        if (this.hasFactory(token)) {\n            throw new InvalidArgumentError(`'${token}' is already registered.`);\n        }\n\n        this._factories[token] = factory;\n    }\n\n    hasFactory(token: string): boolean {\n        return !!this._factories[token];\n    }\n\n    hasInstance(token: string): boolean {\n        return !!this._instances[token];\n    }\n\n    private _getInstance(token: string, cacheToken: string): T {\n        if (!this.hasInstance(cacheToken)) {\n            const factory = this._factories[token];\n\n            if (!factory) {\n                throw new InvalidArgumentError(`'${token}' is not registered.`);\n            }\n\n            this._instances[cacheToken] = factory();\n        }\n\n        return this._instances[cacheToken];\n    }\n}\n\nexport type Factory<T> = () => T;\n\nexport interface RegistryOptions {\n    defaultToken: string;\n}\n","import StandardError from './standard-error';\n\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.type = 'invalid_argument';\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadPaymentMethodsAction, LoadPaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\n\nexport default class PaymentMethodActionCreator {\n    constructor(\n        private _requestSender: PaymentMethodRequestSender\n    ) {}\n\n    loadPaymentMethods(options?: RequestOptions): Observable<LoadPaymentMethodsAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodsAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsRequested));\n\n            this._requestSender.loadPaymentMethods(options)\n                .then(response => {\n                    const meta = {\n                        deviceSessionId: response.headers['x-device-session-id'],\n                        sessionHash: response.headers['x-session-hash'],\n                    };\n\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsSucceeded, response.body, meta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodsFailed, response));\n                });\n        });\n    }\n\n    loadPaymentMethod(methodId: string, options?: RequestOptions): Observable<LoadPaymentMethodAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodRequested, undefined, { methodId }));\n\n            this._requestSender.loadPaymentMethod(methodId, options)\n                .then(response => {\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodSucceeded, response.body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodFailed, response, { methodId }));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport PaymentMethod from './payment-method';\n\nexport default class PaymentMethodRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadPaymentMethods({ timeout }: RequestOptions = {}): Promise<Response<PaymentMethod[]>> {\n        const url = '/api/storefront/payments';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n\n    loadPaymentMethod(methodId: string, { timeout }: RequestOptions = {}): Promise<Response<PaymentMethod>> {\n        const url = `/api/storefront/payments/${methodId}`;\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class RemoteCheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    initializeBilling(methodName: string, params: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/billing`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializeShipping(methodName: string, params: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/shipping`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializePayment(methodName: string, params: InitializePaymentOptions, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/payment`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    loadSettings(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/settings`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    signOut(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/signout`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    generateToken({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout-token';\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    trackAuthorizationEvent({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout/events/shopper-checkout-service-provider-authorization-requested';\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n\nexport interface InitializePaymentOptions {\n    authorizationToken?: string;\n    customerMessage?: string;\n    referenceId?: string;\n    useStoreCredit?: boolean;\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport * as actionTypes from './remote-checkout-action-types';\nimport RemoteCheckoutRequestSender, { InitializePaymentOptions } from './remote-checkout-request-sender';\nimport { RemoteCheckoutStateData } from './remote-checkout-state';\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action<T>\n */\nexport default class RemoteCheckoutActionCreator {\n    constructor(\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender\n    ) {}\n\n    initializeBilling(methodId: string, params: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.INITIALIZE_REMOTE_BILLING_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeBilling(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(actionTypes.INITIALIZE_REMOTE_BILLING_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.INITIALIZE_REMOTE_BILLING_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    initializeShipping(methodId: string, params: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.INITIALIZE_REMOTE_SHIPPING_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeShipping(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(actionTypes.INITIALIZE_REMOTE_SHIPPING_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.INITIALIZE_REMOTE_SHIPPING_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    initializePayment(methodId: string, params: InitializePaymentOptions, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.INITIALIZE_REMOTE_PAYMENT_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializePayment(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(actionTypes.INITIALIZE_REMOTE_PAYMENT_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.INITIALIZE_REMOTE_PAYMENT_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    loadSettings(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.LOAD_REMOTE_SETTINGS_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.loadSettings(methodId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(actionTypes.LOAD_REMOTE_SETTINGS_SUCCEEDED, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.LOAD_REMOTE_SETTINGS_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    signOut(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(actionTypes.SIGN_OUT_REMOTE_CUSTOMER_REQUESTED, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.signOut(methodId, options)\n                .then(() => {\n                    observer.next(createAction(actionTypes.SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(actionTypes.SIGN_OUT_REMOTE_CUSTOMER_FAILED, response, { methodId }));\n                });\n        });\n    }\n\n    updateCheckout<K extends keyof RemoteCheckoutStateData>(methodId: K, data: Partial<RemoteCheckoutStateData[K]>): Action {\n        return createAction(actionTypes.UPDATE_REMOTE_CHECKOUT, data, { methodId });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayScriptLoader {\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadWidget(method: PaymentMethod, onPaymentReady?: () => void): Promise<Event> {\n        const {\n            config: { merchantId, testMode },\n            initializationData: { region = 'us' } = {},\n        } = method;\n\n        const url = 'https://' +\n            (region.toLowerCase() !== 'us' ? 'static-eu.' : 'static-na.') +\n            'payments-amazon.com/OffAmazonPayments/' +\n            `${region.toLowerCase()}/` +\n            (testMode ? 'sandbox/' : '') +\n            (region.toLowerCase() !== 'us' ? 'lpa/' : '') +\n            `js/Widgets.js?sellerId=${merchantId}`;\n\n        this._configureWidget(method, onPaymentReady);\n\n        return this._scriptLoader.loadScript(url);\n    }\n\n    private _configureWidget(method: PaymentMethod, onPaymentReady?: () => void): void {\n        const onLoginReady = () => {\n            if (!this._window.amazon) {\n                return;\n            }\n\n            this._window.amazon.Login.setClientId(method.initializationData.clientId);\n            this._window.amazon.Login.setUseCookie(true);\n        };\n\n        if (this._window.amazon && this._window.amazon.Login) {\n            onLoginReady();\n        } else {\n            this._window.onAmazonLoginReady = onLoginReady;\n        }\n\n        if (this._window.OffAmazonPayments && onPaymentReady) {\n            onPaymentReady();\n        } else {\n            this._window.onAmazonPaymentsReady = onPaymentReady;\n        }\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class RemoteCheckoutSynchronizationError extends StandardError {\n    constructor(\n        public error?: Error\n    ) {\n        super('Unable to synchronize your checkout details with a third party provider. Please try again later.');\n\n        this.type = 'remote_checkout_synchronization';\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { StandardError } from '../../../common/error/errors';\n\nimport { GooglePayHostWindow, GooglePaySDK } from './googlepay';\n\nexport default class GooglePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GooglePayHostWindow = window\n    ) {}\n\n    load(): Promise<GooglePaySDK> {\n        return this._scriptLoader\n            .loadScript('https://pay.google.com/gp/p/js/pay.js')\n            .then(() => {\n                if (!this._window.google) {\n                    throw new StandardError();\n                }\n\n                return this._window.google;\n            });\n    }\n}\n","import { Checkout } from '../../../checkout';\nimport {\n    MissingDataError,\n    MissingDataErrorType,\n    StandardError\n} from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeSDKCreator } from '../braintree';\n\nimport {\n    GooglePaymentData,\n    GooglePayDataRequestV1,\n    GooglePayInitializer,\n    GooglePayPaymentDataRequestV1,\n    TokenizePayload\n} from './googlepay';\nimport { GooglePayBraintreeSDK } from './googlepay';\n\nexport default class GooglePayBraintreeInitializer implements GooglePayInitializer {\n    private _googlePaymentInstance!: GooglePayBraintreeSDK;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator\n    ) {}\n\n    initialize(\n               checkout: Checkout,\n               paymentMethod: PaymentMethod,\n               hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV1> {\n        if (!paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return this._braintreeSDKCreator.getGooglePaymentComponent()\n            .then(googleBraintreePaymentInstance => {\n                this._googlePaymentInstance = googleBraintreePaymentInstance;\n\n                return this._createGooglePayPayload(\n                    checkout,\n                    paymentMethod.initializationData.platformToken,\n                    hasShippingAddress);\n            }).catch((error: Error) => {\n                throw new StandardError(error.message);\n            });\n    }\n\n    teardown(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        return this._googlePaymentInstance.parseResponse(paymentData);\n    }\n\n    private _createGooglePayPayload(\n                                    checkout: Checkout,\n                                    platformToken: string,\n                                    hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV1 {\n        if (!platformToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePaymentDataRequest: GooglePayDataRequestV1 = {\n            merchantInfo: {\n                authJwt: platformToken,\n            },\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: checkout.grandTotal.toString(),\n            },\n            cardRequirements: {\n                billingAddressRequired: true,\n                billingAddressFormat: 'FULL',\n            },\n            shippingAddressRequired: !hasShippingAddress,\n            emailRequired: true,\n            phoneNumberRequired: true,\n        };\n\n        return this._googlePaymentInstance.createPaymentDataRequest(googlePaymentDataRequest);\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload);\n        });\n    }\n\n    private _transformResponse(response: any): Response {\n        return {\n            headers: {},\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { StandardError } from '../../../common/error/errors';\n\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalScriptLoader {\n    private _window: PaypalHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadPaypal(): Promise<PaypalSDK> {\n        return this._scriptLoader\n            .loadScript('//www.paypalobjects.com/api/checkout.min.js')\n            .then(() => {\n                if (!this._window.paypal) {\n                    throw new StandardError();\n                }\n\n                return this._window.paypal;\n            });\n    }\n}\n"],"sourceRoot":""}